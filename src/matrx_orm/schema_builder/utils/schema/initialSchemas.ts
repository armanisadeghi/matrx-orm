// File: utils/schema/initialSchemas.ts
import {AutomationTableName,DataStructure,FetchStrategy,NameFormat,FieldDataOptionsType} from '@/types/AutomationSchemaTypes';
import {AutomationEntity, EntityData, EntityDataMixed, EntityDataOptional, EntityDataWithKey, ProcessedEntityData} from '@/types/entityTypes';

export const initialAutomationTableSchema = {
action: {
        schemaType: 'table' as const,
        entityName: 'action',
        displayName: 'Action',
        uniqueTableId: 'supabase_automation_matrix:public:action',
        uniqueEntityId: 'supabase_automation_matrix:action',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:action:id',
            uniqueFieldId: 'supabase_automation_matrix:action:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'action',
            databaseTable: 'action',
            foreignKeyReference: null,
            description: '"Id" field for action. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:action:name',
            uniqueFieldId: 'supabase_automation_matrix:action:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: 255,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 3,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'action',
            databaseTable: 'action',
            foreignKeyReference: null,
            description: '"Name" field for action. This is a required field. Your entry must be an string data type. Maximum Length: 255',
        },
            matrix: {
            fieldNameFormats: {
    "frontend": "matrix",
    "backend": "matrix",
    "database": "matrix",
    "pretty": "Matrix",
    "component": "Matrix",
    "kebab": "matrix",
    "sqlFunctionRef": "p_matrix",
    "RestAPI": "matrix",
    "GraphQL": "matrix",
    "custom": "matrix"
} as const,
            name: 'matrix',
            displayName: 'Matrix',

            uniqueColumnId: 'supabase_automation_matrix:public:action:matrix',
            uniqueFieldId: 'supabase_automation_matrix:action:matrix',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'action',
            databaseTable: 'action',
            foreignKeyReference: {"table": "automation_matrix", "column": "id", "entity": "automationMatrix", "field": "id"},
            description: '"Matrix" field for action. This is a required field. Your entry must be an uuid data type. This field is a reference to a automationMatrix.',
        },
            transformer: {
            fieldNameFormats: {
    "frontend": "transformer",
    "backend": "transformer",
    "database": "transformer",
    "pretty": "Transformer",
    "component": "Transformer",
    "kebab": "transformer",
    "sqlFunctionRef": "p_transformer",
    "RestAPI": "transformer",
    "GraphQL": "transformer",
    "custom": "transformer"
} as const,
            name: 'transformer',
            displayName: 'Transformer',

            uniqueColumnId: 'supabase_automation_matrix:public:action:transformer',
            uniqueFieldId: 'supabase_automation_matrix:action:transformer',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'action',
            databaseTable: 'action',
            foreignKeyReference: {"table": "transformer", "column": "id", "entity": "transformer", "field": "id"},
            description: '"Transformer" field for action. This is an optional field. Your entry must be an uuid data type. This field is a reference to a transformer.',
        },
            nodeType: {
            fieldNameFormats: {
    "frontend": "nodeType",
    "backend": "node_type",
    "database": "node_type",
    "pretty": "Node Type",
    "component": "NodeType",
    "kebab": "node-type",
    "sqlFunctionRef": "p_node_type",
    "RestAPI": "nodeType",
    "GraphQL": "nodeType",
    "custom": "nodeType"
} as const,
            name: 'nodeType',
            displayName: 'Node Type',

            uniqueColumnId: 'supabase_automation_matrix:public:action:node_type',
            uniqueFieldId: 'supabase_automation_matrix:action:nodeType',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: 50,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'action',
            databaseTable: 'action',
            foreignKeyReference: null,
            description: '"Node Type" field for action. This is a required field. Your entry must be an string data type. Maximum Length: 50',
        },
            referenceId: {
            fieldNameFormats: {
    "frontend": "referenceId",
    "backend": "reference_id",
    "database": "reference_id",
    "pretty": "Reference Id",
    "component": "ReferenceId",
    "kebab": "reference-id",
    "sqlFunctionRef": "p_reference_id",
    "RestAPI": "referenceId",
    "GraphQL": "referenceId",
    "custom": "referenceId"
} as const,
            name: 'referenceId',
            displayName: 'Reference Id',

            uniqueColumnId: 'supabase_automation_matrix:public:action:reference_id',
            uniqueFieldId: 'supabase_automation_matrix:action:referenceId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'action',
            databaseTable: 'action',
            foreignKeyReference: null,
            description: '"Reference Id" field for action. This is a required field. Your entry must be an uuid data type.',
        },
            automationMatrixReference: {
    fieldNameFormats: {
    "frontend": "automationMatrixReference",
    "backend": "automation_matrix_reference",
    "database": "ref_automation_matrix",
    "pretty": "Automation Matrix Reference",
    "component": "AutomationMatrixReference",
    "kebab": "automation-matrixReference",
    "sqlFunctionRef": "p_ref_automation_matrix",
    "RestAPI": "automationMatrixReference",
    "GraphQL": "automationMatrixReference",
    "custom": "automationMatrixReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:automation_matrix:id',
    uniqueFieldId: 'supabase_automation_matrix:automationMatrix:id',
    name: 'automationMatrixReference',
    displayName: 'Automation Matrix Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['automationMatrix'][]>,
    entityName: 'automationMatrix',
    databaseTable: 'automation_matrix',
    relationshipMap: {automation_matrix: 'id', transformer: 'id'},
},
            transformerReference: {
    fieldNameFormats: {
    "frontend": "transformerReference",
    "backend": "transformer_reference",
    "database": "ref_transformer",
    "pretty": "Transformer Reference",
    "component": "TransformerReference",
    "kebab": "transformerReference",
    "sqlFunctionRef": "p_ref_transformer",
    "RestAPI": "transformerReference",
    "GraphQL": "transformerReference",
    "custom": "transformerReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:transformer:id',
    uniqueFieldId: 'supabase_automation_matrix:transformer:id',
    name: 'transformerReference',
    displayName: 'Transformer Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['transformer'][]>,
    entityName: 'transformer',
    databaseTable: 'transformer',
    relationshipMap: {automation_matrix: 'id', transformer: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "action",
    "backend": "action",
    "database": "action",
    "pretty": "Action",
    "component": "Action",
    "kebab": "action",
    "sqlFunctionRef": "p_action",
    "RestAPI": "action",
    "GraphQL": "action",
    "custom": "action"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'matrix', relatedTable: 'automation_matrix', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'transformer', relatedTable: 'transformer', relatedColumn: 'id', junctionTable: null }
        ],
    },
admins: {
        schemaType: 'table' as const,
        entityName: 'admins',
        displayName: 'Admins',
        uniqueTableId: 'supabase_automation_matrix:public:admins',
        uniqueEntityId: 'supabase_automation_matrix:admins',
        primaryKey: 'userId',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "userId"
    ],
    "database_fields": [
        "user_id"
    ],
    "where_template": {
        "user_id": null
    }
},
        displayFieldMetadata: { fieldName: 'userId', databaseFieldName: 'user_id' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:admins:user_id',
            uniqueFieldId: 'supabase_automation_matrix:admins:userId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'admins',
            databaseTable: 'admins',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for admins. This is a required field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:admins:created_at',
            uniqueFieldId: 'supabase_automation_matrix:admins:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'admins',
            databaseTable: 'admins',
            foreignKeyReference: null,
            description: '"Created At" field for admins. This is an optional field. Your entry must be an date data type.',
        },
        },
        entityNameFormats: {
    "frontend": "admins",
    "backend": "admins",
    "database": "admins",
    "pretty": "Admins",
    "component": "Admins",
    "kebab": "admins",
    "sqlFunctionRef": "p_admins",
    "RestAPI": "admins",
    "GraphQL": "admins",
    "custom": "admins"
},
        relationships: [
            
        ],
    },
aiAgent: {
        schemaType: 'table' as const,
        entityName: 'aiAgent',
        displayName: 'Ai Agent',
        uniqueTableId: 'supabase_automation_matrix:public:ai_agent',
        uniqueEntityId: 'supabase_automation_matrix:aiAgent',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_agent:id',
            uniqueFieldId: 'supabase_automation_matrix:aiAgent:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiAgent',
            databaseTable: 'ai_agent',
            foreignKeyReference: null,
            description: '"Id" field for aiAgent. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_agent:name',
            uniqueFieldId: 'supabase_automation_matrix:aiAgent:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiAgent',
            databaseTable: 'ai_agent',
            foreignKeyReference: null,
            description: '"Name" field for aiAgent. This is a required field. Your entry must be an string data type.',
        },
            recipeId: {
            fieldNameFormats: {
    "frontend": "recipeId",
    "backend": "recipe_id",
    "database": "recipe_id",
    "pretty": "Recipe Id",
    "component": "RecipeId",
    "kebab": "recipe-id",
    "sqlFunctionRef": "p_recipe_id",
    "RestAPI": "recipeId",
    "GraphQL": "recipeId",
    "custom": "recipeId"
} as const,
            name: 'recipeId',
            displayName: 'Recipe Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_agent:recipe_id',
            uniqueFieldId: 'supabase_automation_matrix:aiAgent:recipeId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiAgent',
            databaseTable: 'ai_agent',
            foreignKeyReference: {"table": "recipe", "column": "id", "entity": "recipe", "field": "id"},
            description: '"Recipe Id" field for aiAgent. This is an optional field. Your entry must be an uuid data type. This field is a reference to a recipe.',
        },
            aiSettingsId: {
            fieldNameFormats: {
    "frontend": "aiSettingsId",
    "backend": "ai_settings_id",
    "database": "ai_settings_id",
    "pretty": "Ai Settings Id",
    "component": "AiSettingsId",
    "kebab": "ai-settings-id",
    "sqlFunctionRef": "p_ai_settings_id",
    "RestAPI": "aiSettingsId",
    "GraphQL": "aiSettingsId",
    "custom": "aiSettingsId"
} as const,
            name: 'aiSettingsId',
            displayName: 'Ai Settings Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_agent:ai_settings_id',
            uniqueFieldId: 'supabase_automation_matrix:aiAgent:aiSettingsId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiAgent',
            databaseTable: 'ai_agent',
            foreignKeyReference: {"table": "ai_settings", "column": "id", "entity": "aiSettings", "field": "id"},
            description: '"Ai Settings Id" field for aiAgent. This is an optional field. Your entry must be an uuid data type. This field is a reference to a aiSettings.',
        },
            systemMessageOverride: {
            fieldNameFormats: {
    "frontend": "systemMessageOverride",
    "backend": "system_message_override",
    "database": "system_message_override",
    "pretty": "System Message Override",
    "component": "SystemMessageOverride",
    "kebab": "system-message-override",
    "sqlFunctionRef": "p_system_message_override",
    "RestAPI": "systemMessageOverride",
    "GraphQL": "systemMessageOverride",
    "custom": "systemMessageOverride"
} as const,
            name: 'systemMessageOverride',
            displayName: 'System Message Override',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_agent:system_message_override',
            uniqueFieldId: 'supabase_automation_matrix:aiAgent:systemMessageOverride',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiAgent',
            databaseTable: 'ai_agent',
            foreignKeyReference: null,
            description: '"System Message Override" field for aiAgent. This is an optional field. Your entry must be an string data type.',
        },
            aiSettingsReference: {
    fieldNameFormats: {
    "frontend": "aiSettingsReference",
    "backend": "ai_settings_reference",
    "database": "ref_ai_settings",
    "pretty": "Ai Settings Reference",
    "component": "AiSettingsReference",
    "kebab": "ai-settingsReference",
    "sqlFunctionRef": "p_ref_ai_settings",
    "RestAPI": "aiSettingsReference",
    "GraphQL": "aiSettingsReference",
    "custom": "aiSettingsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:ai_settings:id',
    uniqueFieldId: 'supabase_automation_matrix:aiSettings:id',
    name: 'aiSettingsReference',
    displayName: 'Ai Settings Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiSettings'][]>,
    entityName: 'aiSettings',
    databaseTable: 'ai_settings',
    relationshipMap: {ai_settings: 'id', recipe: 'id'},
},
            recipeReference: {
    fieldNameFormats: {
    "frontend": "recipeReference",
    "backend": "recipe_reference",
    "database": "ref_recipe",
    "pretty": "Recipe Reference",
    "component": "RecipeReference",
    "kebab": "recipeReference",
    "sqlFunctionRef": "p_ref_recipe",
    "RestAPI": "recipeReference",
    "GraphQL": "recipeReference",
    "custom": "recipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:recipe:id',
    name: 'recipeReference',
    displayName: 'Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
    entityName: 'recipe',
    databaseTable: 'recipe',
    relationshipMap: {ai_settings: 'id', recipe: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "aiAgent",
    "backend": "ai_agent",
    "database": "ai_agent",
    "pretty": "Ai Agent",
    "component": "AiAgent",
    "kebab": "ai-agent",
    "sqlFunctionRef": "p_ai_agent",
    "RestAPI": "aiAgent",
    "GraphQL": "aiAgent",
    "custom": "aiAgent"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'ai_settings_id', relatedTable: 'ai_settings', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'recipe_id', relatedTable: 'recipe', relatedColumn: 'id', junctionTable: null }
        ],
    },
aiEndpoint: {
        schemaType: 'table' as const,
        entityName: 'aiEndpoint',
        displayName: 'Ai Endpoint',
        uniqueTableId: 'supabase_automation_matrix:public:ai_endpoint',
        uniqueEntityId: 'supabase_automation_matrix:aiEndpoint',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_endpoint:id',
            uniqueFieldId: 'supabase_automation_matrix:aiEndpoint:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiEndpoint',
            databaseTable: 'ai_endpoint',
            foreignKeyReference: null,
            description: '"Id" field for aiEndpoint. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_endpoint:name',
            uniqueFieldId: 'supabase_automation_matrix:aiEndpoint:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiEndpoint',
            databaseTable: 'ai_endpoint',
            foreignKeyReference: null,
            description: '"Name" field for aiEndpoint. This is a required field. Your entry must be an string data type.',
        },
            provider: {
            fieldNameFormats: {
    "frontend": "provider",
    "backend": "provider",
    "database": "provider",
    "pretty": "Provider",
    "component": "Provider",
    "kebab": "provider",
    "sqlFunctionRef": "p_provider",
    "RestAPI": "provider",
    "GraphQL": "provider",
    "custom": "provider"
} as const,
            name: 'provider',
            displayName: 'Provider',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_endpoint:provider',
            uniqueFieldId: 'supabase_automation_matrix:aiEndpoint:provider',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiEndpoint',
            databaseTable: 'ai_endpoint',
            foreignKeyReference: null,
            description: '"Provider" field for aiEndpoint. This is an optional field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_endpoint:description',
            uniqueFieldId: 'supabase_automation_matrix:aiEndpoint:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiEndpoint',
            databaseTable: 'ai_endpoint',
            foreignKeyReference: null,
            description: '"Description" field for aiEndpoint. This is an optional field. Your entry must be an string data type.',
        },
            additionalCost: {
            fieldNameFormats: {
    "frontend": "additionalCost",
    "backend": "additional_cost",
    "database": "additional_cost",
    "pretty": "Additional Cost",
    "component": "AdditionalCost",
    "kebab": "additional-cost",
    "sqlFunctionRef": "p_additional_cost",
    "RestAPI": "additionalCost",
    "GraphQL": "additionalCost",
    "custom": "additionalCost"
} as const,
            name: 'additionalCost',
            displayName: 'Additional Cost',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_endpoint:additional_cost',
            uniqueFieldId: 'supabase_automation_matrix:aiEndpoint:additionalCost',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'aiEndpoint',
            databaseTable: 'ai_endpoint',
            foreignKeyReference: null,
            description: '"Additional Cost" field for aiEndpoint. This is an optional field. Your entry must be an boolean data type.',
        },
            costDetails: {
            fieldNameFormats: {
    "frontend": "costDetails",
    "backend": "cost_details",
    "database": "cost_details",
    "pretty": "Cost Details",
    "component": "CostDetails",
    "kebab": "cost-details",
    "sqlFunctionRef": "p_cost_details",
    "RestAPI": "costDetails",
    "GraphQL": "costDetails",
    "custom": "costDetails"
} as const,
            name: 'costDetails',
            displayName: 'Cost Details',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_endpoint:cost_details',
            uniqueFieldId: 'supabase_automation_matrix:aiEndpoint:costDetails',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'aiEndpoint',
            databaseTable: 'ai_endpoint',
            foreignKeyReference: null,
            description: '"Cost Details" field for aiEndpoint. This is an optional field. Your entry must be an object data type.',
        },
            params: {
            fieldNameFormats: {
    "frontend": "params",
    "backend": "params",
    "database": "params",
    "pretty": "Params",
    "component": "Params",
    "kebab": "params",
    "sqlFunctionRef": "p_params",
    "RestAPI": "params",
    "GraphQL": "params",
    "custom": "params"
} as const,
            name: 'params',
            displayName: 'Params',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_endpoint:params',
            uniqueFieldId: 'supabase_automation_matrix:aiEndpoint:params',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'aiEndpoint',
            databaseTable: 'ai_endpoint',
            foreignKeyReference: null,
            description: '"Params" field for aiEndpoint. This is an optional field. Your entry must be an object data type.',
        },
            aiModelEndpointInverse: {
    fieldNameFormats: {
    "frontend": "aiModelEndpointInverse",
    "backend": "ai_model_endpoint_Inverse",
    "database": "ifk_ai_model_endpoint",
    "pretty": "Ai Model Endpoint Inverse",
    "component": "AiModelEndpointInverse",
    "kebab": "ai-model-endpointInverse",
    "sqlFunctionRef": "p_ifk_ai_model_endpoint",
    "RestAPI": "aiModelEndpointInverse",
    "GraphQL": "aiModelEndpointInverse",
    "custom": "aiModelEndpointInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:ai_model_endpoint',
    uniqueEntityId: 'supabase_automation_matrix:aiModelEndpoint',
    name: 'aiModelEndpointInverse',
    displayName: 'Ai Model Endpoint Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiModelEndpoint'][]>,
    entityName: 'aiModelEndpoint',
    databaseTable: 'ai_model_endpoint',
},
            aiSettingsInverse: {
    fieldNameFormats: {
    "frontend": "aiSettingsInverse",
    "backend": "ai_settings_Inverse",
    "database": "ifk_ai_settings",
    "pretty": "Ai Settings Inverse",
    "component": "AiSettingsInverse",
    "kebab": "ai-settingsInverse",
    "sqlFunctionRef": "p_ifk_ai_settings",
    "RestAPI": "aiSettingsInverse",
    "GraphQL": "aiSettingsInverse",
    "custom": "aiSettingsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:ai_settings',
    uniqueEntityId: 'supabase_automation_matrix:aiSettings',
    name: 'aiSettingsInverse',
    displayName: 'Ai Settings Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiSettings'][]>,
    entityName: 'aiSettings',
    databaseTable: 'ai_settings',
},
        },
        entityNameFormats: {
    "frontend": "aiEndpoint",
    "backend": "ai_endpoint",
    "database": "ai_endpoint",
    "pretty": "Ai Endpoint",
    "component": "AiEndpoint",
    "kebab": "ai-endpoint",
    "sqlFunctionRef": "p_ai_endpoint",
    "RestAPI": "aiEndpoint",
    "GraphQL": "aiEndpoint",
    "custom": "aiEndpoint"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'ai_model_endpoint', relatedColumn: 'ai_endpoint_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'ai_settings', relatedColumn: 'ai_endpoint', junctionTable: null }
        ],
    },
aiModel: {
        schemaType: 'table' as const,
        entityName: 'aiModel',
        displayName: 'Ai Model',
        uniqueTableId: 'supabase_automation_matrix:public:ai_model',
        uniqueEntityId: 'supabase_automation_matrix:aiModel',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:id',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: null,
            description: '"Id" field for aiModel. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:name',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: null,
            description: '"Name" field for aiModel. This is a required field. Your entry must be an string data type.',
        },
            commonName: {
            fieldNameFormats: {
    "frontend": "commonName",
    "backend": "common_name",
    "database": "common_name",
    "pretty": "Common Name",
    "component": "CommonName",
    "kebab": "common-name",
    "sqlFunctionRef": "p_common_name",
    "RestAPI": "commonName",
    "GraphQL": "commonName",
    "custom": "commonName"
} as const,
            name: 'commonName',
            displayName: 'Common Name',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:common_name',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:commonName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: null,
            description: '"Common Name" field for aiModel. This is an optional field. Your entry must be an string data type.',
        },
            modelClass: {
            fieldNameFormats: {
    "frontend": "modelClass",
    "backend": "model_class",
    "database": "model_class",
    "pretty": "Model Class",
    "component": "ModelClass",
    "kebab": "model-class",
    "sqlFunctionRef": "p_model_class",
    "RestAPI": "modelClass",
    "GraphQL": "modelClass",
    "custom": "modelClass"
} as const,
            name: 'modelClass',
            displayName: 'Model Class',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:model_class',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:modelClass',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: null,
            description: '"Model Class" field for aiModel. This is a required field. Your entry must be an string data type.',
        },
            provider: {
            fieldNameFormats: {
    "frontend": "provider",
    "backend": "provider",
    "database": "provider",
    "pretty": "Provider",
    "component": "Provider",
    "kebab": "provider",
    "sqlFunctionRef": "p_provider",
    "RestAPI": "provider",
    "GraphQL": "provider",
    "custom": "provider"
} as const,
            name: 'provider',
            displayName: 'Provider',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:provider',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:provider',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: null,
            description: '"Provider" field for aiModel. This is an optional field. Your entry must be an string data type.',
        },
            endpoints: {
            fieldNameFormats: {
    "frontend": "endpoints",
    "backend": "endpoints",
    "database": "endpoints",
    "pretty": "Endpoints",
    "component": "Endpoints",
    "kebab": "endpoints",
    "sqlFunctionRef": "p_endpoints",
    "RestAPI": "endpoints",
    "GraphQL": "endpoints",
    "custom": "endpoints"
} as const,
            name: 'endpoints',
            displayName: 'Endpoints',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:endpoints',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:endpoints',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: null,
            description: '"Endpoints" field for aiModel. This is an optional field. Your entry must be an object data type.',
        },
            contextWindow: {
            fieldNameFormats: {
    "frontend": "contextWindow",
    "backend": "context_window",
    "database": "context_window",
    "pretty": "Context Window",
    "component": "ContextWindow",
    "kebab": "context-window",
    "sqlFunctionRef": "p_context_window",
    "RestAPI": "contextWindow",
    "GraphQL": "contextWindow",
    "custom": "contextWindow"
} as const,
            name: 'contextWindow',
            displayName: 'Context Window',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:context_window',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:contextWindow',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "bigint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: null,
            description: '"Context Window" field for aiModel. This is an optional field. Your entry must be an number data type.',
        },
            maxTokens: {
            fieldNameFormats: {
    "frontend": "maxTokens",
    "backend": "max_tokens",
    "database": "max_tokens",
    "pretty": "Max Tokens",
    "component": "MaxTokens",
    "kebab": "max-tokens",
    "sqlFunctionRef": "p_max_tokens",
    "RestAPI": "maxTokens",
    "GraphQL": "maxTokens",
    "custom": "maxTokens"
} as const,
            name: 'maxTokens',
            displayName: 'Max Tokens',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:max_tokens',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:maxTokens',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "bigint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: null,
            description: '"Max Tokens" field for aiModel. This is an optional field. Your entry must be an number data type.',
        },
            capabilities: {
            fieldNameFormats: {
    "frontend": "capabilities",
    "backend": "capabilities",
    "database": "capabilities",
    "pretty": "Capabilities",
    "component": "Capabilities",
    "kebab": "capabilities",
    "sqlFunctionRef": "p_capabilities",
    "RestAPI": "capabilities",
    "GraphQL": "capabilities",
    "custom": "capabilities"
} as const,
            name: 'capabilities',
            displayName: 'Capabilities',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:capabilities',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:capabilities',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: null,
            description: '"Capabilities" field for aiModel. This is an optional field. Your entry must be an object data type.',
        },
            controls: {
            fieldNameFormats: {
    "frontend": "controls",
    "backend": "controls",
    "database": "controls",
    "pretty": "Controls",
    "component": "Controls",
    "kebab": "controls",
    "sqlFunctionRef": "p_controls",
    "RestAPI": "controls",
    "GraphQL": "controls",
    "custom": "controls"
} as const,
            name: 'controls',
            displayName: 'Controls',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:controls',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:controls',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: null,
            description: '"Controls" field for aiModel. This is an optional field. Your entry must be an object data type.',
        },
            modelProvider: {
            fieldNameFormats: {
    "frontend": "modelProvider",
    "backend": "model_provider",
    "database": "model_provider",
    "pretty": "Model Provider",
    "component": "ModelProvider",
    "kebab": "model-provider",
    "sqlFunctionRef": "p_model_provider",
    "RestAPI": "modelProvider",
    "GraphQL": "modelProvider",
    "custom": "modelProvider"
} as const,
            name: 'modelProvider',
            displayName: 'Model Provider',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model:model_provider',
            uniqueFieldId: 'supabase_automation_matrix:aiModel:modelProvider',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiModel',
            databaseTable: 'ai_model',
            foreignKeyReference: {"table": "ai_provider", "column": "id", "entity": "aiProvider", "field": "id"},
            description: '"Model Provider" field for aiModel. This is an optional field. Your entry must be an uuid data type. This field is a reference to a aiProvider.',
        },
            aiProviderReference: {
    fieldNameFormats: {
    "frontend": "aiProviderReference",
    "backend": "ai_provider_reference",
    "database": "ref_ai_provider",
    "pretty": "Ai Provider Reference",
    "component": "AiProviderReference",
    "kebab": "ai-providerReference",
    "sqlFunctionRef": "p_ref_ai_provider",
    "RestAPI": "aiProviderReference",
    "GraphQL": "aiProviderReference",
    "custom": "aiProviderReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:ai_provider:id',
    uniqueFieldId: 'supabase_automation_matrix:aiProvider:id',
    name: 'aiProviderReference',
    displayName: 'Ai Provider Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiProvider'][]>,
    entityName: 'aiProvider',
    databaseTable: 'ai_provider',
    relationshipMap: {ai_provider: 'id'},
},
            aiModelEndpointInverse: {
    fieldNameFormats: {
    "frontend": "aiModelEndpointInverse",
    "backend": "ai_model_endpoint_Inverse",
    "database": "ifk_ai_model_endpoint",
    "pretty": "Ai Model Endpoint Inverse",
    "component": "AiModelEndpointInverse",
    "kebab": "ai-model-endpointInverse",
    "sqlFunctionRef": "p_ifk_ai_model_endpoint",
    "RestAPI": "aiModelEndpointInverse",
    "GraphQL": "aiModelEndpointInverse",
    "custom": "aiModelEndpointInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:ai_model_endpoint',
    uniqueEntityId: 'supabase_automation_matrix:aiModelEndpoint',
    name: 'aiModelEndpointInverse',
    displayName: 'Ai Model Endpoint Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiModelEndpoint'][]>,
    entityName: 'aiModelEndpoint',
    databaseTable: 'ai_model_endpoint',
},
            aiSettingsInverse: {
    fieldNameFormats: {
    "frontend": "aiSettingsInverse",
    "backend": "ai_settings_Inverse",
    "database": "ifk_ai_settings",
    "pretty": "Ai Settings Inverse",
    "component": "AiSettingsInverse",
    "kebab": "ai-settingsInverse",
    "sqlFunctionRef": "p_ifk_ai_settings",
    "RestAPI": "aiSettingsInverse",
    "GraphQL": "aiSettingsInverse",
    "custom": "aiSettingsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:ai_settings',
    uniqueEntityId: 'supabase_automation_matrix:aiSettings',
    name: 'aiSettingsInverse',
    displayName: 'Ai Settings Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiSettings'][]>,
    entityName: 'aiSettings',
    databaseTable: 'ai_settings',
},
            recipeModelInverse: {
    fieldNameFormats: {
    "frontend": "recipeModelInverse",
    "backend": "recipe_model_Inverse",
    "database": "ifk_recipe_model",
    "pretty": "Recipe Model Inverse",
    "component": "RecipeModelInverse",
    "kebab": "recipe-modelInverse",
    "sqlFunctionRef": "p_ifk_recipe_model",
    "RestAPI": "recipeModelInverse",
    "GraphQL": "recipeModelInverse",
    "custom": "recipeModelInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_model',
    uniqueEntityId: 'supabase_automation_matrix:recipeModel',
    name: 'recipeModelInverse',
    displayName: 'Recipe Model Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeModel'][]>,
    entityName: 'recipeModel',
    databaseTable: 'recipe_model',
},
        },
        entityNameFormats: {
    "frontend": "aiModel",
    "backend": "ai_model",
    "database": "ai_model",
    "pretty": "Ai Model",
    "component": "AiModel",
    "kebab": "ai-model",
    "sqlFunctionRef": "p_ai_model",
    "RestAPI": "aiModel",
    "GraphQL": "aiModel",
    "custom": "aiModel"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'model_provider', relatedTable: 'ai_provider', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'ai_model_endpoint', relatedColumn: 'ai_model_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'ai_settings', relatedColumn: 'ai_model', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_model', relatedColumn: 'ai_model', junctionTable: null }
        ],
    },
aiModelEndpoint: {
        schemaType: 'table' as const,
        entityName: 'aiModelEndpoint',
        displayName: 'Ai Model Endpoint',
        uniqueTableId: 'supabase_automation_matrix:public:ai_model_endpoint',
        uniqueEntityId: 'supabase_automation_matrix:aiModelEndpoint',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model_endpoint:id',
            uniqueFieldId: 'supabase_automation_matrix:aiModelEndpoint:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiModelEndpoint',
            databaseTable: 'ai_model_endpoint',
            foreignKeyReference: null,
            description: '"Id" field for aiModelEndpoint. This is a required field. Your entry must be an uuid data type.',
        },
            aiModelId: {
            fieldNameFormats: {
    "frontend": "aiModelId",
    "backend": "ai_model_id",
    "database": "ai_model_id",
    "pretty": "Ai Model Id",
    "component": "AiModelId",
    "kebab": "ai-model-id",
    "sqlFunctionRef": "p_ai_model_id",
    "RestAPI": "aiModelId",
    "GraphQL": "aiModelId",
    "custom": "aiModelId"
} as const,
            name: 'aiModelId',
            displayName: 'Ai Model Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model_endpoint:ai_model_id',
            uniqueFieldId: 'supabase_automation_matrix:aiModelEndpoint:aiModelId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiModelEndpoint',
            databaseTable: 'ai_model_endpoint',
            foreignKeyReference: {"table": "ai_model", "column": "id", "entity": "aiModel", "field": "id"},
            description: '"Ai Model Id" field for aiModelEndpoint. This is an optional field. Your entry must be an uuid data type. This field is a reference to a aiModel.',
        },
            aiEndpointId: {
            fieldNameFormats: {
    "frontend": "aiEndpointId",
    "backend": "ai_endpoint_id",
    "database": "ai_endpoint_id",
    "pretty": "Ai Endpoint Id",
    "component": "AiEndpointId",
    "kebab": "ai-endpoint-id",
    "sqlFunctionRef": "p_ai_endpoint_id",
    "RestAPI": "aiEndpointId",
    "GraphQL": "aiEndpointId",
    "custom": "aiEndpointId"
} as const,
            name: 'aiEndpointId',
            displayName: 'Ai Endpoint Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model_endpoint:ai_endpoint_id',
            uniqueFieldId: 'supabase_automation_matrix:aiModelEndpoint:aiEndpointId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiModelEndpoint',
            databaseTable: 'ai_model_endpoint',
            foreignKeyReference: {"table": "ai_endpoint", "column": "id", "entity": "aiEndpoint", "field": "id"},
            description: '"Ai Endpoint Id" field for aiModelEndpoint. This is an optional field. Your entry must be an uuid data type. This field is a reference to a aiEndpoint.',
        },
            available: {
            fieldNameFormats: {
    "frontend": "available",
    "backend": "available",
    "database": "available",
    "pretty": "Available",
    "component": "Available",
    "kebab": "available",
    "sqlFunctionRef": "p_available",
    "RestAPI": "available",
    "GraphQL": "available",
    "custom": "available"
} as const,
            name: 'available',
            displayName: 'Available',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model_endpoint:available',
            uniqueFieldId: 'supabase_automation_matrix:aiModelEndpoint:available',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'aiModelEndpoint',
            databaseTable: 'ai_model_endpoint',
            foreignKeyReference: null,
            description: '"Available" field for aiModelEndpoint. This is a required field. Your entry must be an boolean data type.',
        },
            endpointPriority: {
            fieldNameFormats: {
    "frontend": "endpointPriority",
    "backend": "endpoint_priority",
    "database": "endpoint_priority",
    "pretty": "Endpoint Priority",
    "component": "EndpointPriority",
    "kebab": "endpoint-priority",
    "sqlFunctionRef": "p_endpoint_priority",
    "RestAPI": "endpointPriority",
    "GraphQL": "endpointPriority",
    "custom": "endpointPriority"
} as const,
            name: 'endpointPriority',
            displayName: 'Endpoint Priority',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model_endpoint:endpoint_priority',
            uniqueFieldId: 'supabase_automation_matrix:aiModelEndpoint:endpointPriority',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'aiModelEndpoint',
            databaseTable: 'ai_model_endpoint',
            foreignKeyReference: null,
            description: '"Endpoint Priority" field for aiModelEndpoint. This is an optional field. Your entry must be an number data type.',
        },
            configuration: {
            fieldNameFormats: {
    "frontend": "configuration",
    "backend": "configuration",
    "database": "configuration",
    "pretty": "Configuration",
    "component": "Configuration",
    "kebab": "configuration",
    "sqlFunctionRef": "p_configuration",
    "RestAPI": "configuration",
    "GraphQL": "configuration",
    "custom": "configuration"
} as const,
            name: 'configuration',
            displayName: 'Configuration',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model_endpoint:configuration',
            uniqueFieldId: 'supabase_automation_matrix:aiModelEndpoint:configuration',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "{}" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'aiModelEndpoint',
            databaseTable: 'ai_model_endpoint',
            foreignKeyReference: null,
            description: '"Configuration" field for aiModelEndpoint. This is an optional field. Your entry must be an object data type.',
        },
            notes: {
            fieldNameFormats: {
    "frontend": "notes",
    "backend": "notes",
    "database": "notes",
    "pretty": "Notes",
    "component": "Notes",
    "kebab": "notes",
    "sqlFunctionRef": "p_notes",
    "RestAPI": "notes",
    "GraphQL": "notes",
    "custom": "notes"
} as const,
            name: 'notes',
            displayName: 'Notes',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model_endpoint:notes',
            uniqueFieldId: 'supabase_automation_matrix:aiModelEndpoint:notes',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiModelEndpoint',
            databaseTable: 'ai_model_endpoint',
            foreignKeyReference: null,
            description: '"Notes" field for aiModelEndpoint. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_model_endpoint:created_at',
            uniqueFieldId: 'supabase_automation_matrix:aiModelEndpoint:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'aiModelEndpoint',
            databaseTable: 'ai_model_endpoint',
            foreignKeyReference: null,
            description: '"Created At" field for aiModelEndpoint. This is a required field. Your entry must be an date data type.',
        },
            aiEndpointReference: {
    fieldNameFormats: {
    "frontend": "aiEndpointReference",
    "backend": "ai_endpoint_reference",
    "database": "ref_ai_endpoint",
    "pretty": "Ai Endpoint Reference",
    "component": "AiEndpointReference",
    "kebab": "ai-endpointReference",
    "sqlFunctionRef": "p_ref_ai_endpoint",
    "RestAPI": "aiEndpointReference",
    "GraphQL": "aiEndpointReference",
    "custom": "aiEndpointReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:ai_endpoint:id',
    uniqueFieldId: 'supabase_automation_matrix:aiEndpoint:id',
    name: 'aiEndpointReference',
    displayName: 'Ai Endpoint Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiEndpoint'][]>,
    entityName: 'aiEndpoint',
    databaseTable: 'ai_endpoint',
    relationshipMap: {ai_endpoint: 'id', ai_model: 'id'},
},
            aiModelReference: {
    fieldNameFormats: {
    "frontend": "aiModelReference",
    "backend": "ai_model_reference",
    "database": "ref_ai_model",
    "pretty": "Ai Model Reference",
    "component": "AiModelReference",
    "kebab": "ai-modelReference",
    "sqlFunctionRef": "p_ref_ai_model",
    "RestAPI": "aiModelReference",
    "GraphQL": "aiModelReference",
    "custom": "aiModelReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:ai_model:id',
    uniqueFieldId: 'supabase_automation_matrix:aiModel:id',
    name: 'aiModelReference',
    displayName: 'Ai Model Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiModel'][]>,
    entityName: 'aiModel',
    databaseTable: 'ai_model',
    relationshipMap: {ai_endpoint: 'id', ai_model: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "aiModelEndpoint",
    "backend": "ai_model_endpoint",
    "database": "ai_model_endpoint",
    "pretty": "Ai Model Endpoint",
    "component": "AiModelEndpoint",
    "kebab": "ai-model-endpoint",
    "sqlFunctionRef": "p_ai_model_endpoint",
    "RestAPI": "aiModelEndpoint",
    "GraphQL": "aiModelEndpoint",
    "custom": "aiModelEndpoint"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'ai_endpoint_id', relatedTable: 'ai_endpoint', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'ai_model_id', relatedTable: 'ai_model', relatedColumn: 'id', junctionTable: null }
        ],
    },
aiProvider: {
        schemaType: 'table' as const,
        entityName: 'aiProvider',
        displayName: 'Ai Provider',
        uniqueTableId: 'supabase_automation_matrix:public:ai_provider',
        uniqueEntityId: 'supabase_automation_matrix:aiProvider',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_provider:id',
            uniqueFieldId: 'supabase_automation_matrix:aiProvider:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiProvider',
            databaseTable: 'ai_provider',
            foreignKeyReference: null,
            description: '"Id" field for aiProvider. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_provider:name',
            uniqueFieldId: 'supabase_automation_matrix:aiProvider:name',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiProvider',
            databaseTable: 'ai_provider',
            foreignKeyReference: null,
            description: '"Name" field for aiProvider. This is an optional field. Your entry must be an string data type.',
        },
            companyDescription: {
            fieldNameFormats: {
    "frontend": "companyDescription",
    "backend": "company_description",
    "database": "company_description",
    "pretty": "Company Description",
    "component": "CompanyDescription",
    "kebab": "company-description",
    "sqlFunctionRef": "p_company_description",
    "RestAPI": "companyDescription",
    "GraphQL": "companyDescription",
    "custom": "companyDescription"
} as const,
            name: 'companyDescription',
            displayName: 'Company Description',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_provider:company_description',
            uniqueFieldId: 'supabase_automation_matrix:aiProvider:companyDescription',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiProvider',
            databaseTable: 'ai_provider',
            foreignKeyReference: null,
            description: '"Company Description" field for aiProvider. This is an optional field. Your entry must be an string data type.',
        },
            documentationLink: {
            fieldNameFormats: {
    "frontend": "documentationLink",
    "backend": "documentation_link",
    "database": "documentation_link",
    "pretty": "Documentation Link",
    "component": "DocumentationLink",
    "kebab": "documentation-link",
    "sqlFunctionRef": "p_documentation_link",
    "RestAPI": "documentationLink",
    "GraphQL": "documentationLink",
    "custom": "documentationLink"
} as const,
            name: 'documentationLink',
            displayName: 'Documentation Link',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_provider:documentation_link',
            uniqueFieldId: 'supabase_automation_matrix:aiProvider:documentationLink',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiProvider',
            databaseTable: 'ai_provider',
            foreignKeyReference: null,
            description: '"Documentation Link" field for aiProvider. This is an optional field. Your entry must be an string data type.',
        },
            modelsLink: {
            fieldNameFormats: {
    "frontend": "modelsLink",
    "backend": "models_link",
    "database": "models_link",
    "pretty": "Models Link",
    "component": "ModelsLink",
    "kebab": "models-link",
    "sqlFunctionRef": "p_models_link",
    "RestAPI": "modelsLink",
    "GraphQL": "modelsLink",
    "custom": "modelsLink"
} as const,
            name: 'modelsLink',
            displayName: 'Models Link',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_provider:models_link',
            uniqueFieldId: 'supabase_automation_matrix:aiProvider:modelsLink',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiProvider',
            databaseTable: 'ai_provider',
            foreignKeyReference: null,
            description: '"Models Link" field for aiProvider. This is an optional field. Your entry must be an string data type.',
        },
            aiSettingsInverse: {
    fieldNameFormats: {
    "frontend": "aiSettingsInverse",
    "backend": "ai_settings_Inverse",
    "database": "ifk_ai_settings",
    "pretty": "Ai Settings Inverse",
    "component": "AiSettingsInverse",
    "kebab": "ai-settingsInverse",
    "sqlFunctionRef": "p_ifk_ai_settings",
    "RestAPI": "aiSettingsInverse",
    "GraphQL": "aiSettingsInverse",
    "custom": "aiSettingsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:ai_settings',
    uniqueEntityId: 'supabase_automation_matrix:aiSettings',
    name: 'aiSettingsInverse',
    displayName: 'Ai Settings Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiSettings'][]>,
    entityName: 'aiSettings',
    databaseTable: 'ai_settings',
},
            aiModelInverse: {
    fieldNameFormats: {
    "frontend": "aiModelInverse",
    "backend": "ai_model_Inverse",
    "database": "ifk_ai_model",
    "pretty": "Ai Model Inverse",
    "component": "AiModelInverse",
    "kebab": "ai-modelInverse",
    "sqlFunctionRef": "p_ifk_ai_model",
    "RestAPI": "aiModelInverse",
    "GraphQL": "aiModelInverse",
    "custom": "aiModelInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:ai_model',
    uniqueEntityId: 'supabase_automation_matrix:aiModel',
    name: 'aiModelInverse',
    displayName: 'Ai Model Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiModel'][]>,
    entityName: 'aiModel',
    databaseTable: 'ai_model',
},
        },
        entityNameFormats: {
    "frontend": "aiProvider",
    "backend": "ai_provider",
    "database": "ai_provider",
    "pretty": "Ai Provider",
    "component": "AiProvider",
    "kebab": "ai-provider",
    "sqlFunctionRef": "p_ai_provider",
    "RestAPI": "aiProvider",
    "GraphQL": "aiProvider",
    "custom": "aiProvider"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'ai_settings', relatedColumn: 'ai_provider', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'ai_model', relatedColumn: 'model_provider', junctionTable: null }
        ],
    },
aiSettings: {
        schemaType: 'table' as const,
        entityName: 'aiSettings',
        displayName: 'Ai Settings',
        uniqueTableId: 'supabase_automation_matrix:public:ai_settings',
        uniqueEntityId: 'supabase_automation_matrix:aiSettings',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'presetName', databaseFieldName: 'preset_name' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:id',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Id" field for aiSettings. This is a required field. Your entry must be an uuid data type.',
        },
            aiEndpoint: {
            fieldNameFormats: {
    "frontend": "aiEndpoint",
    "backend": "ai_endpoint",
    "database": "ai_endpoint",
    "pretty": "Ai Endpoint",
    "component": "AiEndpoint",
    "kebab": "ai-endpoint",
    "sqlFunctionRef": "p_ai_endpoint",
    "RestAPI": "aiEndpoint",
    "GraphQL": "aiEndpoint",
    "custom": "aiEndpoint"
} as const,
            name: 'aiEndpoint',
            displayName: 'Ai Endpoint',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:ai_endpoint',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:aiEndpoint',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "4bedf336-b274-4cdb-8202-59fd282ae6a0" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: {"table": "ai_endpoint", "column": "id", "entity": "aiEndpoint", "field": "id"},
            description: '"Ai Endpoint" field for aiSettings. This is an optional field. Your entry must be an uuid data type. This field is a reference to a aiEndpoint.',
        },
            aiProvider: {
            fieldNameFormats: {
    "frontend": "aiProvider",
    "backend": "ai_provider",
    "database": "ai_provider",
    "pretty": "Ai Provider",
    "component": "AiProvider",
    "kebab": "ai-provider",
    "sqlFunctionRef": "p_ai_provider",
    "RestAPI": "aiProvider",
    "GraphQL": "aiProvider",
    "custom": "aiProvider"
} as const,
            name: 'aiProvider',
            displayName: 'Ai Provider',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:ai_provider',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:aiProvider',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "99fa34b1-4c36-427f-ab73-cc56f1d5c4a0" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: {"table": "ai_provider", "column": "id", "entity": "aiProvider", "field": "id"},
            description: '"Ai Provider" field for aiSettings. This is an optional field. Your entry must be an uuid data type. This field is a reference to a aiProvider.',
        },
            aiModel: {
            fieldNameFormats: {
    "frontend": "aiModel",
    "backend": "ai_model",
    "database": "ai_model",
    "pretty": "Ai Model",
    "component": "AiModel",
    "kebab": "ai-model",
    "sqlFunctionRef": "p_ai_model",
    "RestAPI": "aiModel",
    "GraphQL": "aiModel",
    "custom": "aiModel"
} as const,
            name: 'aiModel',
            displayName: 'Ai Model',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:ai_model',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:aiModel',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "dd45b76e-f470-4765-b6c4-1a275d7860bf" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: {"table": "ai_model", "column": "id", "entity": "aiModel", "field": "id"},
            description: '"Ai Model" field for aiSettings. This is an optional field. Your entry must be an uuid data type. This field is a reference to a aiModel.',
        },
            temperature: {
            fieldNameFormats: {
    "frontend": "temperature",
    "backend": "temperature",
    "database": "temperature",
    "pretty": "Temperature",
    "component": "Temperature",
    "kebab": "temperature",
    "sqlFunctionRef": "p_temperature",
    "RestAPI": "temperature",
    "GraphQL": "temperature",
    "custom": "temperature"
} as const,
            name: 'temperature',
            displayName: 'Temperature',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:temperature',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:temperature',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "0.25" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "real",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Temperature" field for aiSettings. This is an optional field. Your entry must be an number data type.',
        },
            maxTokens: {
            fieldNameFormats: {
    "frontend": "maxTokens",
    "backend": "max_tokens",
    "database": "max_tokens",
    "pretty": "Max Tokens",
    "component": "MaxTokens",
    "kebab": "max-tokens",
    "sqlFunctionRef": "p_max_tokens",
    "RestAPI": "maxTokens",
    "GraphQL": "maxTokens",
    "custom": "maxTokens"
} as const,
            name: 'maxTokens',
            displayName: 'Max Tokens',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:max_tokens',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:maxTokens',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "3000" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Max Tokens" field for aiSettings. This is an optional field. Your entry must be an number data type.',
        },
            topP: {
            fieldNameFormats: {
    "frontend": "topP",
    "backend": "top_p",
    "database": "top_p",
    "pretty": "Top P",
    "component": "TopP",
    "kebab": "top-p",
    "sqlFunctionRef": "p_top_p",
    "RestAPI": "topP",
    "GraphQL": "topP",
    "custom": "topP"
} as const,
            name: 'topP',
            displayName: 'Top P',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:top_p',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:topP',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "1" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Top P" field for aiSettings. This is an optional field. Your entry must be an number data type.',
        },
            frequencyPenalty: {
            fieldNameFormats: {
    "frontend": "frequencyPenalty",
    "backend": "frequency_penalty",
    "database": "frequency_penalty",
    "pretty": "Frequency Penalty",
    "component": "FrequencyPenalty",
    "kebab": "frequency-penalty",
    "sqlFunctionRef": "p_frequency_penalty",
    "RestAPI": "frequencyPenalty",
    "GraphQL": "frequencyPenalty",
    "custom": "frequencyPenalty"
} as const,
            name: 'frequencyPenalty',
            displayName: 'Frequency Penalty',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:frequency_penalty',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:frequencyPenalty',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "0" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Frequency Penalty" field for aiSettings. This is an optional field. Your entry must be an number data type.',
        },
            presencePenalty: {
            fieldNameFormats: {
    "frontend": "presencePenalty",
    "backend": "presence_penalty",
    "database": "presence_penalty",
    "pretty": "Presence Penalty",
    "component": "PresencePenalty",
    "kebab": "presence-penalty",
    "sqlFunctionRef": "p_presence_penalty",
    "RestAPI": "presencePenalty",
    "GraphQL": "presencePenalty",
    "custom": "presencePenalty"
} as const,
            name: 'presencePenalty',
            displayName: 'Presence Penalty',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:presence_penalty',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:presencePenalty',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "0" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Presence Penalty" field for aiSettings. This is an optional field. Your entry must be an number data type.',
        },
            stream: {
            fieldNameFormats: {
    "frontend": "stream",
    "backend": "stream",
    "database": "stream",
    "pretty": "Stream",
    "component": "Stream",
    "kebab": "stream",
    "sqlFunctionRef": "p_stream",
    "RestAPI": "stream",
    "GraphQL": "stream",
    "custom": "stream"
} as const,
            name: 'stream',
            displayName: 'Stream',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:stream',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:stream',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Stream" field for aiSettings. This is an optional field. Your entry must be an boolean data type.',
        },
            responseFormat: {
            fieldNameFormats: {
    "frontend": "responseFormat",
    "backend": "response_format",
    "database": "response_format",
    "pretty": "Response Format",
    "component": "ResponseFormat",
    "kebab": "response-format",
    "sqlFunctionRef": "p_response_format",
    "RestAPI": "responseFormat",
    "GraphQL": "responseFormat",
    "custom": "responseFormat"
} as const,
            name: 'responseFormat',
            displayName: 'Response Format',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:response_format',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:responseFormat',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "text" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Response Format" field for aiSettings. This is an optional field. Your entry must be an string data type.',
        },
            size: {
            fieldNameFormats: {
    "frontend": "size",
    "backend": "size",
    "database": "size",
    "pretty": "Size",
    "component": "Size",
    "kebab": "size",
    "sqlFunctionRef": "p_size",
    "RestAPI": "size",
    "GraphQL": "size",
    "custom": "size"
} as const,
            name: 'size',
            displayName: 'Size',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:size',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:size',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Size" field for aiSettings. This is an optional field. Your entry must be an string data type.',
        },
            quality: {
            fieldNameFormats: {
    "frontend": "quality",
    "backend": "quality",
    "database": "quality",
    "pretty": "Quality",
    "component": "Quality",
    "kebab": "quality",
    "sqlFunctionRef": "p_quality",
    "RestAPI": "quality",
    "GraphQL": "quality",
    "custom": "quality"
} as const,
            name: 'quality',
            displayName: 'Quality',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:quality',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:quality',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Quality" field for aiSettings. This is an optional field. Your entry must be an string data type.',
        },
            count: {
            fieldNameFormats: {
    "frontend": "count",
    "backend": "count",
    "database": "count",
    "pretty": "Count",
    "component": "Count",
    "kebab": "count",
    "sqlFunctionRef": "p_count",
    "RestAPI": "count",
    "GraphQL": "count",
    "custom": "count"
} as const,
            name: 'count',
            displayName: 'Count',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:count',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:count',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "1" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Count" field for aiSettings. This is an optional field. Your entry must be an number data type.',
        },
            audioVoice: {
            fieldNameFormats: {
    "frontend": "audioVoice",
    "backend": "audio_voice",
    "database": "audio_voice",
    "pretty": "Audio Voice",
    "component": "AudioVoice",
    "kebab": "audio-voice",
    "sqlFunctionRef": "p_audio_voice",
    "RestAPI": "audioVoice",
    "GraphQL": "audioVoice",
    "custom": "audioVoice"
} as const,
            name: 'audioVoice',
            displayName: 'Audio Voice',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:audio_voice',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:audioVoice',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Audio Voice" field for aiSettings. This is an optional field. Your entry must be an string data type.',
        },
            audioFormat: {
            fieldNameFormats: {
    "frontend": "audioFormat",
    "backend": "audio_format",
    "database": "audio_format",
    "pretty": "Audio Format",
    "component": "AudioFormat",
    "kebab": "audio-format",
    "sqlFunctionRef": "p_audio_format",
    "RestAPI": "audioFormat",
    "GraphQL": "audioFormat",
    "custom": "audioFormat"
} as const,
            name: 'audioFormat',
            displayName: 'Audio Format',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:audio_format',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:audioFormat',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Audio Format" field for aiSettings. This is an optional field. Your entry must be an string data type.',
        },
            modalities: {
            fieldNameFormats: {
    "frontend": "modalities",
    "backend": "modalities",
    "database": "modalities",
    "pretty": "Modalities",
    "component": "Modalities",
    "kebab": "modalities",
    "sqlFunctionRef": "p_modalities",
    "RestAPI": "modalities",
    "GraphQL": "modalities",
    "custom": "modalities"
} as const,
            name: 'modalities',
            displayName: 'Modalities',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:modalities',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:modalities',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "{}" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Modalities" field for aiSettings. This is an optional field. Your entry must be an object data type.',
        },
            tools: {
            fieldNameFormats: {
    "frontend": "tools",
    "backend": "tools",
    "database": "tools",
    "pretty": "Tools",
    "component": "Tools",
    "kebab": "tools",
    "sqlFunctionRef": "p_tools",
    "RestAPI": "tools",
    "GraphQL": "tools",
    "custom": "tools"
} as const,
            name: 'tools',
            displayName: 'Tools',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:tools',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:tools',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "{}" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Tools" field for aiSettings. This is an optional field. Your entry must be an object data type.',
        },
            presetName: {
            fieldNameFormats: {
    "frontend": "presetName",
    "backend": "preset_name",
    "database": "preset_name",
    "pretty": "Preset Name",
    "component": "PresetName",
    "kebab": "preset-name",
    "sqlFunctionRef": "p_preset_name",
    "RestAPI": "presetName",
    "GraphQL": "presetName",
    "custom": "presetName"
} as const,
            name: 'presetName',
            displayName: 'Preset Name',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_settings:preset_name',
            uniqueFieldId: 'supabase_automation_matrix:aiSettings:presetName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiSettings',
            databaseTable: 'ai_settings',
            foreignKeyReference: null,
            description: '"Preset Name" field for aiSettings. This is an optional field. Your entry must be an string data type.',
        },
            aiEndpointReference: {
    fieldNameFormats: {
    "frontend": "aiEndpointReference",
    "backend": "ai_endpoint_reference",
    "database": "ref_ai_endpoint",
    "pretty": "Ai Endpoint Reference",
    "component": "AiEndpointReference",
    "kebab": "ai-endpointReference",
    "sqlFunctionRef": "p_ref_ai_endpoint",
    "RestAPI": "aiEndpointReference",
    "GraphQL": "aiEndpointReference",
    "custom": "aiEndpointReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:ai_endpoint:id',
    uniqueFieldId: 'supabase_automation_matrix:aiEndpoint:id',
    name: 'aiEndpointReference',
    displayName: 'Ai Endpoint Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiEndpoint'][]>,
    entityName: 'aiEndpoint',
    databaseTable: 'ai_endpoint',
    relationshipMap: {ai_endpoint: 'id', ai_model: 'id', ai_provider: 'id'},
},
            aiModelReference: {
    fieldNameFormats: {
    "frontend": "aiModelReference",
    "backend": "ai_model_reference",
    "database": "ref_ai_model",
    "pretty": "Ai Model Reference",
    "component": "AiModelReference",
    "kebab": "ai-modelReference",
    "sqlFunctionRef": "p_ref_ai_model",
    "RestAPI": "aiModelReference",
    "GraphQL": "aiModelReference",
    "custom": "aiModelReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:ai_model:id',
    uniqueFieldId: 'supabase_automation_matrix:aiModel:id',
    name: 'aiModelReference',
    displayName: 'Ai Model Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiModel'][]>,
    entityName: 'aiModel',
    databaseTable: 'ai_model',
    relationshipMap: {ai_endpoint: 'id', ai_model: 'id', ai_provider: 'id'},
},
            aiProviderReference: {
    fieldNameFormats: {
    "frontend": "aiProviderReference",
    "backend": "ai_provider_reference",
    "database": "ref_ai_provider",
    "pretty": "Ai Provider Reference",
    "component": "AiProviderReference",
    "kebab": "ai-providerReference",
    "sqlFunctionRef": "p_ref_ai_provider",
    "RestAPI": "aiProviderReference",
    "GraphQL": "aiProviderReference",
    "custom": "aiProviderReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:ai_provider:id',
    uniqueFieldId: 'supabase_automation_matrix:aiProvider:id',
    name: 'aiProviderReference',
    displayName: 'Ai Provider Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiProvider'][]>,
    entityName: 'aiProvider',
    databaseTable: 'ai_provider',
    relationshipMap: {ai_endpoint: 'id', ai_model: 'id', ai_provider: 'id'},
},
            aiAgentInverse: {
    fieldNameFormats: {
    "frontend": "aiAgentInverse",
    "backend": "ai_agent_Inverse",
    "database": "ifk_ai_agent",
    "pretty": "Ai Agent Inverse",
    "component": "AiAgentInverse",
    "kebab": "ai-agentInverse",
    "sqlFunctionRef": "p_ifk_ai_agent",
    "RestAPI": "aiAgentInverse",
    "GraphQL": "aiAgentInverse",
    "custom": "aiAgentInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:ai_agent',
    uniqueEntityId: 'supabase_automation_matrix:aiAgent',
    name: 'aiAgentInverse',
    displayName: 'Ai Agent Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiAgent'][]>,
    entityName: 'aiAgent',
    databaseTable: 'ai_agent',
},
        },
        entityNameFormats: {
    "frontend": "aiSettings",
    "backend": "ai_settings",
    "database": "ai_settings",
    "pretty": "Ai Settings",
    "component": "AiSettings",
    "kebab": "ai-settings",
    "sqlFunctionRef": "p_ai_settings",
    "RestAPI": "aiSettings",
    "GraphQL": "aiSettings",
    "custom": "aiSettings"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'ai_endpoint', relatedTable: 'ai_endpoint', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'ai_model', relatedTable: 'ai_model', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'ai_provider', relatedTable: 'ai_provider', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'ai_agent', relatedColumn: 'ai_settings_id', junctionTable: null }
        ],
    },
aiTrainingData: {
        schemaType: 'table' as const,
        entityName: 'aiTrainingData',
        displayName: 'Ai Training Data',
        uniqueTableId: 'supabase_automation_matrix:public:ai_training_data',
        uniqueEntityId: 'supabase_automation_matrix:aiTrainingData',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:id',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Id" field for aiTrainingData. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:created_at',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Created At" field for aiTrainingData. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Updated At" field for aiTrainingData. This is an optional field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:user_id',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for aiTrainingData. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:is_public',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Is Public" field for aiTrainingData. This is an optional field. Your entry must be an boolean data type.',
        },
            systemPrompt: {
            fieldNameFormats: {
    "frontend": "systemPrompt",
    "backend": "system_prompt",
    "database": "system_prompt",
    "pretty": "System Prompt",
    "component": "SystemPrompt",
    "kebab": "system-prompt",
    "sqlFunctionRef": "p_system_prompt",
    "RestAPI": "systemPrompt",
    "GraphQL": "systemPrompt",
    "custom": "systemPrompt"
} as const,
            name: 'systemPrompt',
            displayName: 'System Prompt',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:system_prompt',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:systemPrompt',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"System Prompt" field for aiTrainingData. This is an optional field. Your entry must be an string data type.',
        },
            userQuery: {
            fieldNameFormats: {
    "frontend": "userQuery",
    "backend": "user_query",
    "database": "user_query",
    "pretty": "User Query",
    "component": "UserQuery",
    "kebab": "user-query",
    "sqlFunctionRef": "p_user_query",
    "RestAPI": "userQuery",
    "GraphQL": "userQuery",
    "custom": "userQuery"
} as const,
            name: 'userQuery',
            displayName: 'User Query',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:user_query',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:userQuery',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"User Query" field for aiTrainingData. This is an optional field. Your entry must be an string data type.',
        },
            thinkingContent: {
            fieldNameFormats: {
    "frontend": "thinkingContent",
    "backend": "thinking_content",
    "database": "thinking_content",
    "pretty": "Thinking Content",
    "component": "ThinkingContent",
    "kebab": "thinking-content",
    "sqlFunctionRef": "p_thinking_content",
    "RestAPI": "thinkingContent",
    "GraphQL": "thinkingContent",
    "custom": "thinkingContent"
} as const,
            name: 'thinkingContent',
            displayName: 'Thinking Content',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:thinking_content',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:thinkingContent',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Thinking Content" field for aiTrainingData. This is an optional field. Your entry must be an string data type.',
        },
            responseContent: {
            fieldNameFormats: {
    "frontend": "responseContent",
    "backend": "response_content",
    "database": "response_content",
    "pretty": "Response Content",
    "component": "ResponseContent",
    "kebab": "response-content",
    "sqlFunctionRef": "p_response_content",
    "RestAPI": "responseContent",
    "GraphQL": "responseContent",
    "custom": "responseContent"
} as const,
            name: 'responseContent',
            displayName: 'Response Content',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:response_content',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:responseContent',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Response Content" field for aiTrainingData. This is an optional field. Your entry must be an string data type.',
        },
            reflectionContent: {
            fieldNameFormats: {
    "frontend": "reflectionContent",
    "backend": "reflection_content",
    "database": "reflection_content",
    "pretty": "Reflection Content",
    "component": "ReflectionContent",
    "kebab": "reflection-content",
    "sqlFunctionRef": "p_reflection_content",
    "RestAPI": "reflectionContent",
    "GraphQL": "reflectionContent",
    "custom": "reflectionContent"
} as const,
            name: 'reflectionContent',
            displayName: 'Reflection Content',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:reflection_content',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:reflectionContent',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Reflection Content" field for aiTrainingData. This is an optional field. Your entry must be an string data type.',
        },
            qualityScore: {
            fieldNameFormats: {
    "frontend": "qualityScore",
    "backend": "quality_score",
    "database": "quality_score",
    "pretty": "Quality Score",
    "component": "QualityScore",
    "kebab": "quality-score",
    "sqlFunctionRef": "p_quality_score",
    "RestAPI": "qualityScore",
    "GraphQL": "qualityScore",
    "custom": "qualityScore"
} as const,
            name: 'qualityScore',
            displayName: 'Quality Score',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:quality_score',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:qualityScore',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "decimal",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Quality Score" field for aiTrainingData. This is an optional field. Your entry must be an number data type.',
        },
            source: {
            fieldNameFormats: {
    "frontend": "source",
    "backend": "source",
    "database": "source",
    "pretty": "Source",
    "component": "Source",
    "kebab": "source",
    "sqlFunctionRef": "p_source",
    "RestAPI": "source",
    "GraphQL": "source",
    "custom": "source"
} as const,
            name: 'source',
            displayName: 'Source',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:source',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:source',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Source" field for aiTrainingData. This is an optional field. Your entry must be an string data type.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:metadata',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Metadata" field for aiTrainingData. This is an optional field. Your entry must be an object data type.',
        },
            questionsThinking: {
            fieldNameFormats: {
    "frontend": "questionsThinking",
    "backend": "questions_thinking",
    "database": "questions_thinking",
    "pretty": "Questions Thinking",
    "component": "QuestionsThinking",
    "kebab": "questions-thinking",
    "sqlFunctionRef": "p_questions_thinking",
    "RestAPI": "questionsThinking",
    "GraphQL": "questionsThinking",
    "custom": "questionsThinking"
} as const,
            name: 'questionsThinking',
            displayName: 'Questions Thinking',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:questions_thinking',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:questionsThinking',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Questions Thinking" field for aiTrainingData. This is an optional field. Your entry must be an string data type.',
        },
            questionsContent: {
            fieldNameFormats: {
    "frontend": "questionsContent",
    "backend": "questions_content",
    "database": "questions_content",
    "pretty": "Questions Content",
    "component": "QuestionsContent",
    "kebab": "questions-content",
    "sqlFunctionRef": "p_questions_content",
    "RestAPI": "questionsContent",
    "GraphQL": "questionsContent",
    "custom": "questionsContent"
} as const,
            name: 'questionsContent',
            displayName: 'Questions Content',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:questions_content',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:questionsContent',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Questions Content" field for aiTrainingData. This is an optional field. Your entry must be an string data type.',
        },
            structuredQuestions: {
            fieldNameFormats: {
    "frontend": "structuredQuestions",
    "backend": "structured_questions",
    "database": "structured_questions",
    "pretty": "Structured Questions",
    "component": "StructuredQuestions",
    "kebab": "structured-questions",
    "sqlFunctionRef": "p_structured_questions",
    "RestAPI": "structuredQuestions",
    "GraphQL": "structuredQuestions",
    "custom": "structuredQuestions"
} as const,
            name: 'structuredQuestions',
            displayName: 'Structured Questions',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:structured_questions',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:structuredQuestions',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Structured Questions" field for aiTrainingData. This is an optional field. Your entry must be an object data type.',
        },
            reflectionThinking: {
            fieldNameFormats: {
    "frontend": "reflectionThinking",
    "backend": "reflection_thinking",
    "database": "reflection_thinking",
    "pretty": "Reflection Thinking",
    "component": "ReflectionThinking",
    "kebab": "reflection-thinking",
    "sqlFunctionRef": "p_reflection_thinking",
    "RestAPI": "reflectionThinking",
    "GraphQL": "reflectionThinking",
    "custom": "reflectionThinking"
} as const,
            name: 'reflectionThinking',
            displayName: 'Reflection Thinking',

            uniqueColumnId: 'supabase_automation_matrix:public:ai_training_data:reflection_thinking',
            uniqueFieldId: 'supabase_automation_matrix:aiTrainingData:reflectionThinking',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'aiTrainingData',
            databaseTable: 'ai_training_data',
            foreignKeyReference: null,
            description: '"Reflection Thinking" field for aiTrainingData. This is an optional field. Your entry must be an string data type.',
        },
        },
        entityNameFormats: {
    "frontend": "aiTrainingData",
    "backend": "ai_training_data",
    "database": "ai_training_data",
    "pretty": "Ai Training Data",
    "component": "AiTrainingData",
    "kebab": "ai-training-data",
    "sqlFunctionRef": "p_ai_training_data",
    "RestAPI": "aiTrainingData",
    "GraphQL": "aiTrainingData",
    "custom": "aiTrainingData"
},
        relationships: [
            
        ],
    },
applet: {
        schemaType: 'table' as const,
        entityName: 'applet',
        displayName: 'Applet',
        uniqueTableId: 'supabase_automation_matrix:public:applet',
        uniqueEntityId: 'supabase_automation_matrix:applet',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:id',
            uniqueFieldId: 'supabase_automation_matrix:applet:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Id" field for applet. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:name',
            uniqueFieldId: 'supabase_automation_matrix:applet:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Name" field for applet. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:description',
            uniqueFieldId: 'supabase_automation_matrix:applet:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Description" field for applet. This is an optional field. Your entry must be an string data type.',
        },
            creator: {
            fieldNameFormats: {
    "frontend": "creator",
    "backend": "creator",
    "database": "creator",
    "pretty": "Creator",
    "component": "Creator",
    "kebab": "creator",
    "sqlFunctionRef": "p_creator",
    "RestAPI": "creator",
    "GraphQL": "creator",
    "custom": "creator"
} as const,
            name: 'creator',
            displayName: 'Creator',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:creator',
            uniqueFieldId: 'supabase_automation_matrix:applet:creator',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Creator" field for applet. This is an optional field. Your entry must be an string data type.',
        },
            type: {
            fieldNameFormats: {
    "frontend": "type",
    "backend": "type",
    "database": "type",
    "pretty": "Type",
    "component": "Type",
    "kebab": "type",
    "sqlFunctionRef": "p_type",
    "RestAPI": "type",
    "GraphQL": "type",
    "custom": "type"
} as const,
            name: 'type',
            displayName: 'Type',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:type',
            uniqueFieldId: 'supabase_automation_matrix:applet:type',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Other",
            "value": "other"
        },
        {
            "label": "Recipe",
            "value": "recipe"
        },
        {
            "label": "Workflow",
            "value": "workflow"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"other" | "recipe" | "workflow" | undefined>,
            enumValues: ['other', 'recipe', 'workflow'] as const,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Type" field for applet. This is a required field. Your entry must be an string data type.',
        },
            compiledRecipeId: {
            fieldNameFormats: {
    "frontend": "compiledRecipeId",
    "backend": "compiled_recipe_id",
    "database": "compiled_recipe_id",
    "pretty": "Compiled Recipe Id",
    "component": "CompiledRecipeId",
    "kebab": "compiled-recipe-id",
    "sqlFunctionRef": "p_compiled_recipe_id",
    "RestAPI": "compiledRecipeId",
    "GraphQL": "compiledRecipeId",
    "custom": "compiledRecipeId"
} as const,
            name: 'compiledRecipeId',
            displayName: 'Compiled Recipe Id',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:compiled_recipe_id',
            uniqueFieldId: 'supabase_automation_matrix:applet:compiledRecipeId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: {"table": "compiled_recipe", "column": "id", "entity": "compiledRecipe", "field": "id"},
            description: '"Compiled Recipe Id" field for applet. This is an optional field. Your entry must be an uuid data type. This field is a reference to a compiledRecipe.',
        },
            slug: {
            fieldNameFormats: {
    "frontend": "slug",
    "backend": "slug",
    "database": "slug",
    "pretty": "Slug",
    "component": "Slug",
    "kebab": "slug",
    "sqlFunctionRef": "p_slug",
    "RestAPI": "slug",
    "GraphQL": "slug",
    "custom": "slug"
} as const,
            name: 'slug',
            displayName: 'Slug',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:slug',
            uniqueFieldId: 'supabase_automation_matrix:applet:slug',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Slug" field for applet. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:created_at',
            uniqueFieldId: 'supabase_automation_matrix:applet:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Created At" field for applet. This is a required field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:user_id',
            uniqueFieldId: 'supabase_automation_matrix:applet:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"User Id" field for applet. This is an optional field. Your entry must be an uuid data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:is_public',
            uniqueFieldId: 'supabase_automation_matrix:applet:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Is Public" field for applet. This is an optional field. Your entry must be an boolean data type.',
        },
            dataSourceConfig: {
            fieldNameFormats: {
    "frontend": "dataSourceConfig",
    "backend": "data_source_config",
    "database": "data_source_config",
    "pretty": "Data Source Config",
    "component": "DataSourceConfig",
    "kebab": "data-source-config",
    "sqlFunctionRef": "p_data_source_config",
    "RestAPI": "dataSourceConfig",
    "GraphQL": "dataSourceConfig",
    "custom": "dataSourceConfig"
} as const,
            name: 'dataSourceConfig',
            displayName: 'Data Source Config',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:data_source_config',
            uniqueFieldId: 'supabase_automation_matrix:applet:dataSourceConfig',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Data Source Config" field for applet. This is an optional field. Your entry must be an object data type.',
        },
            resultComponentConfig: {
            fieldNameFormats: {
    "frontend": "resultComponentConfig",
    "backend": "result_component_config",
    "database": "result_component_config",
    "pretty": "Result Component Config",
    "component": "ResultComponentConfig",
    "kebab": "result-component-config",
    "sqlFunctionRef": "p_result_component_config",
    "RestAPI": "resultComponentConfig",
    "GraphQL": "resultComponentConfig",
    "custom": "resultComponentConfig"
} as const,
            name: 'resultComponentConfig',
            displayName: 'Result Component Config',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:result_component_config',
            uniqueFieldId: 'supabase_automation_matrix:applet:resultComponentConfig',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Result Component Config" field for applet. This is an optional field. Your entry must be an object data type.',
        },
            nextStepConfig: {
            fieldNameFormats: {
    "frontend": "nextStepConfig",
    "backend": "next_step_config",
    "database": "next_step_config",
    "pretty": "Next Step Config",
    "component": "NextStepConfig",
    "kebab": "next-step-config",
    "sqlFunctionRef": "p_next_step_config",
    "RestAPI": "nextStepConfig",
    "GraphQL": "nextStepConfig",
    "custom": "nextStepConfig"
} as const,
            name: 'nextStepConfig',
            displayName: 'Next Step Config',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:next_step_config',
            uniqueFieldId: 'supabase_automation_matrix:applet:nextStepConfig',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Next Step Config" field for applet. This is an optional field. Your entry must be an object data type.',
        },
            subcategoryId: {
            fieldNameFormats: {
    "frontend": "subcategoryId",
    "backend": "subcategory_id",
    "database": "subcategory_id",
    "pretty": "Subcategory Id",
    "component": "SubcategoryId",
    "kebab": "subcategory-id",
    "sqlFunctionRef": "p_subcategory_id",
    "RestAPI": "subcategoryId",
    "GraphQL": "subcategoryId",
    "custom": "subcategoryId"
} as const,
            name: 'subcategoryId',
            displayName: 'Subcategory Id',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:subcategory_id',
            uniqueFieldId: 'supabase_automation_matrix:applet:subcategoryId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: {"table": "subcategory", "column": "id", "entity": "subcategory", "field": "id"},
            description: '"Subcategory Id" field for applet. This is an optional field. Your entry must be an uuid data type. This field is a reference to a subcategory.',
        },
            ctaText: {
            fieldNameFormats: {
    "frontend": "ctaText",
    "backend": "cta_text",
    "database": "cta_text",
    "pretty": "Cta Text",
    "component": "CtaText",
    "kebab": "cta-text",
    "sqlFunctionRef": "p_cta_text",
    "RestAPI": "ctaText",
    "GraphQL": "ctaText",
    "custom": "ctaText"
} as const,
            name: 'ctaText',
            displayName: 'Cta Text',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:cta_text',
            uniqueFieldId: 'supabase_automation_matrix:applet:ctaText',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "Get Results" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Cta Text" field for applet. This is an optional field. Your entry must be an string data type.',
        },
            theme: {
            fieldNameFormats: {
    "frontend": "theme",
    "backend": "theme",
    "database": "theme",
    "pretty": "Theme",
    "component": "Theme",
    "kebab": "theme",
    "sqlFunctionRef": "p_theme",
    "RestAPI": "theme",
    "GraphQL": "theme",
    "custom": "theme"
} as const,
            name: 'theme',
            displayName: 'Theme',

            uniqueColumnId: 'supabase_automation_matrix:public:applet:theme',
            uniqueFieldId: 'supabase_automation_matrix:applet:theme',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "default" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'applet',
            databaseTable: 'applet',
            foreignKeyReference: null,
            description: '"Theme" field for applet. This is an optional field. Your entry must be an string data type.',
        },
            compiledRecipeReference: {
    fieldNameFormats: {
    "frontend": "compiledRecipeReference",
    "backend": "compiled_recipe_reference",
    "database": "ref_compiled_recipe",
    "pretty": "Compiled Recipe Reference",
    "component": "CompiledRecipeReference",
    "kebab": "compiled-recipeReference",
    "sqlFunctionRef": "p_ref_compiled_recipe",
    "RestAPI": "compiledRecipeReference",
    "GraphQL": "compiledRecipeReference",
    "custom": "compiledRecipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:compiled_recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:id',
    name: 'compiledRecipeReference',
    displayName: 'Compiled Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['compiledRecipe'][]>,
    entityName: 'compiledRecipe',
    databaseTable: 'compiled_recipe',
    relationshipMap: {compiled_recipe: 'id', subcategory: 'id'},
},
            subcategoryReference: {
    fieldNameFormats: {
    "frontend": "subcategoryReference",
    "backend": "subcategory_reference",
    "database": "ref_subcategory",
    "pretty": "Subcategory Reference",
    "component": "SubcategoryReference",
    "kebab": "subcategoryReference",
    "sqlFunctionRef": "p_ref_subcategory",
    "RestAPI": "subcategoryReference",
    "GraphQL": "subcategoryReference",
    "custom": "subcategoryReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:subcategory:id',
    uniqueFieldId: 'supabase_automation_matrix:subcategory:id',
    name: 'subcategoryReference',
    displayName: 'Subcategory Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['subcategory'][]>,
    entityName: 'subcategory',
    databaseTable: 'subcategory',
    relationshipMap: {compiled_recipe: 'id', subcategory: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "applet",
    "backend": "applet",
    "database": "applet",
    "pretty": "Applet",
    "component": "Applet",
    "kebab": "applet",
    "sqlFunctionRef": "p_applet",
    "RestAPI": "applet",
    "GraphQL": "applet",
    "custom": "applet"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'compiled_recipe_id', relatedTable: 'compiled_recipe', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'subcategory_id', relatedTable: 'subcategory', relatedColumn: 'id', junctionTable: null }
        ],
    },
appletContainers: {
        schemaType: 'table' as const,
        entityName: 'appletContainers',
        displayName: 'Applet Containers',
        uniqueTableId: 'supabase_automation_matrix:public:applet_containers',
        uniqueEntityId: 'supabase_automation_matrix:appletContainers',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:applet_containers:id',
            uniqueFieldId: 'supabase_automation_matrix:appletContainers:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'appletContainers',
            databaseTable: 'applet_containers',
            foreignKeyReference: null,
            description: '"Id" field for appletContainers. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:applet_containers:created_at',
            uniqueFieldId: 'supabase_automation_matrix:appletContainers:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'appletContainers',
            databaseTable: 'applet_containers',
            foreignKeyReference: null,
            description: '"Created At" field for appletContainers. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:applet_containers:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:appletContainers:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'appletContainers',
            databaseTable: 'applet_containers',
            foreignKeyReference: null,
            description: '"Updated At" field for appletContainers. This is an optional field. Your entry must be an date data type.',
        },
            appletId: {
            fieldNameFormats: {
    "frontend": "appletId",
    "backend": "applet_id",
    "database": "applet_id",
    "pretty": "Applet Id",
    "component": "AppletId",
    "kebab": "applet-id",
    "sqlFunctionRef": "p_applet_id",
    "RestAPI": "appletId",
    "GraphQL": "appletId",
    "custom": "appletId"
} as const,
            name: 'appletId',
            displayName: 'Applet Id',

            uniqueColumnId: 'supabase_automation_matrix:public:applet_containers:applet_id',
            uniqueFieldId: 'supabase_automation_matrix:appletContainers:appletId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'appletContainers',
            databaseTable: 'applet_containers',
            foreignKeyReference: {"table": "custom_applet_configs", "column": "id", "entity": "customAppletConfigs", "field": "id"},
            description: '"Applet Id" field for appletContainers. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a customAppletConfigs.',
        },
            containerId: {
            fieldNameFormats: {
    "frontend": "containerId",
    "backend": "container_id",
    "database": "container_id",
    "pretty": "Container Id",
    "component": "ContainerId",
    "kebab": "container-id",
    "sqlFunctionRef": "p_container_id",
    "RestAPI": "containerId",
    "GraphQL": "containerId",
    "custom": "containerId"
} as const,
            name: 'containerId',
            displayName: 'Container Id',

            uniqueColumnId: 'supabase_automation_matrix:public:applet_containers:container_id',
            uniqueFieldId: 'supabase_automation_matrix:appletContainers:containerId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'appletContainers',
            databaseTable: 'applet_containers',
            foreignKeyReference: {"table": "component_groups", "column": "id", "entity": "componentGroups", "field": "id"},
            description: '"Container Id" field for appletContainers. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a componentGroups.',
        },
            order: {
            fieldNameFormats: {
    "frontend": "order",
    "backend": "order",
    "database": "order",
    "pretty": "Order",
    "component": "Order",
    "kebab": "order",
    "sqlFunctionRef": "p_order",
    "RestAPI": "order",
    "GraphQL": "order",
    "custom": "order"
} as const,
            name: 'order',
            displayName: 'Order',

            uniqueColumnId: 'supabase_automation_matrix:public:applet_containers:order',
            uniqueFieldId: 'supabase_automation_matrix:appletContainers:order',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "1" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'appletContainers',
            databaseTable: 'applet_containers',
            foreignKeyReference: null,
            description: '"Order" field for appletContainers. This is a required field. Your entry must be an number data type. This must be a unique value.',
        },
            customAppletConfigsReference: {
    fieldNameFormats: {
    "frontend": "customAppletConfigsReference",
    "backend": "custom_applet_configs_reference",
    "database": "ref_custom_applet_configs",
    "pretty": "Custom Applet Configs Reference",
    "component": "CustomAppletConfigsReference",
    "kebab": "custom-applet-configsReference",
    "sqlFunctionRef": "p_ref_custom_applet_configs",
    "RestAPI": "customAppletConfigsReference",
    "GraphQL": "customAppletConfigsReference",
    "custom": "customAppletConfigsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:custom_applet_configs:id',
    uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:id',
    name: 'customAppletConfigsReference',
    displayName: 'Custom Applet Configs Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['customAppletConfigs'][]>,
    entityName: 'customAppletConfigs',
    databaseTable: 'custom_applet_configs',
    relationshipMap: {custom_applet_configs: 'id', component_groups: 'id'},
},
            componentGroupsReference: {
    fieldNameFormats: {
    "frontend": "componentGroupsReference",
    "backend": "component_groups_reference",
    "database": "ref_component_groups",
    "pretty": "Component Groups Reference",
    "component": "ComponentGroupsReference",
    "kebab": "component-groupsReference",
    "sqlFunctionRef": "p_ref_component_groups",
    "RestAPI": "componentGroupsReference",
    "GraphQL": "componentGroupsReference",
    "custom": "componentGroupsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:component_groups:id',
    uniqueFieldId: 'supabase_automation_matrix:componentGroups:id',
    name: 'componentGroupsReference',
    displayName: 'Component Groups Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['componentGroups'][]>,
    entityName: 'componentGroups',
    databaseTable: 'component_groups',
    relationshipMap: {custom_applet_configs: 'id', component_groups: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "appletContainers",
    "backend": "applet_containers",
    "database": "applet_containers",
    "pretty": "Applet Containers",
    "component": "AppletContainers",
    "kebab": "applet-containers",
    "sqlFunctionRef": "p_applet_containers",
    "RestAPI": "appletContainers",
    "GraphQL": "appletContainers",
    "custom": "appletContainers"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'applet_id', relatedTable: 'custom_applet_configs', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'container_id', relatedTable: 'component_groups', relatedColumn: 'id', junctionTable: null }
        ],
    },
arg: {
        schemaType: 'table' as const,
        entityName: 'arg',
        displayName: 'Arg',
        uniqueTableId: 'supabase_automation_matrix:public:arg',
        uniqueEntityId: 'supabase_automation_matrix:arg',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:arg:id',
            uniqueFieldId: 'supabase_automation_matrix:arg:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'arg',
            databaseTable: 'arg',
            foreignKeyReference: null,
            description: '"Id" field for arg. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:arg:name',
            uniqueFieldId: 'supabase_automation_matrix:arg:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'arg',
            databaseTable: 'arg',
            foreignKeyReference: null,
            description: '"Name" field for arg. This is a required field. Your entry must be an string data type.',
        },
            required: {
            fieldNameFormats: {
    "frontend": "required",
    "backend": "required",
    "database": "required",
    "pretty": "Required",
    "component": "Required",
    "kebab": "required",
    "sqlFunctionRef": "p_required",
    "RestAPI": "required",
    "GraphQL": "required",
    "custom": "required"
} as const,
            name: 'required',
            displayName: 'Required',

            uniqueColumnId: 'supabase_automation_matrix:public:arg:required',
            uniqueFieldId: 'supabase_automation_matrix:arg:required',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'arg',
            databaseTable: 'arg',
            foreignKeyReference: null,
            description: '"Required" field for arg. This is a required field. Your entry must be an boolean data type.',
        },
            defaultJunk: {
            fieldNameFormats: {
    "frontend": "defaultJunk",
    "backend": "default_junk",
    "database": "default_junk",
    "pretty": "Default Junk",
    "component": "DefaultJunk",
    "kebab": "default-junk",
    "sqlFunctionRef": "p_default_junk",
    "RestAPI": "defaultJunk",
    "GraphQL": "defaultJunk",
    "custom": "defaultJunk"
} as const,
            name: 'defaultJunk',
            displayName: 'Default Junk',

            uniqueColumnId: 'supabase_automation_matrix:public:arg:default_junk',
            uniqueFieldId: 'supabase_automation_matrix:arg:defaultJunk',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'arg',
            databaseTable: 'arg',
            foreignKeyReference: null,
            description: '"Default Junk" field for arg. This is an optional field. Your entry must be an string data type.',
        },
            dataType: {
            fieldNameFormats: {
    "frontend": "dataType",
    "backend": "data_type",
    "database": "data_type",
    "pretty": "Data Type",
    "component": "DataType",
    "kebab": "data-type",
    "sqlFunctionRef": "p_data_type",
    "RestAPI": "dataType",
    "GraphQL": "dataType",
    "custom": "dataType"
} as const,
            name: 'dataType',
            displayName: 'Data Type',

            uniqueColumnId: 'supabase_automation_matrix:public:arg:data_type',
            uniqueFieldId: 'supabase_automation_matrix:arg:dataType',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "str" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Bool",
            "value": "bool"
        },
        {
            "label": "Dict",
            "value": "dict"
        },
        {
            "label": "Float",
            "value": "float"
        },
        {
            "label": "Int",
            "value": "int"
        },
        {
            "label": "List",
            "value": "list"
        },
        {
            "label": "Str",
            "value": "str"
        },
        {
            "label": "Url",
            "value": "url"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"bool" | "dict" | "float" | "int" | "list" | "str" | "url" | undefined>,
            enumValues: ['bool', 'dict', 'float', 'int', 'list', 'str', 'url'] as const,
            entityName: 'arg',
            databaseTable: 'arg',
            foreignKeyReference: null,
            description: '"Data Type" field for arg. This is a required field. Your entry must be an string data type.',
        },
            ready: {
            fieldNameFormats: {
    "frontend": "ready",
    "backend": "ready",
    "database": "ready",
    "pretty": "Ready",
    "component": "Ready",
    "kebab": "ready",
    "sqlFunctionRef": "p_ready",
    "RestAPI": "ready",
    "GraphQL": "ready",
    "custom": "ready"
} as const,
            name: 'ready',
            displayName: 'Ready',

            uniqueColumnId: 'supabase_automation_matrix:public:arg:ready',
            uniqueFieldId: 'supabase_automation_matrix:arg:ready',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'arg',
            databaseTable: 'arg',
            foreignKeyReference: null,
            description: '"Ready" field for arg. This is a required field. Your entry must be an boolean data type.',
        },
            registeredFunction: {
            fieldNameFormats: {
    "frontend": "registeredFunction",
    "backend": "registered_function",
    "database": "registered_function",
    "pretty": "Registered Function",
    "component": "RegisteredFunction",
    "kebab": "registered-function",
    "sqlFunctionRef": "p_registered_function",
    "RestAPI": "registeredFunction",
    "GraphQL": "registeredFunction",
    "custom": "registeredFunction"
} as const,
            name: 'registeredFunction',
            displayName: 'Registered Function',

            uniqueColumnId: 'supabase_automation_matrix:public:arg:registered_function',
            uniqueFieldId: 'supabase_automation_matrix:arg:registeredFunction',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'arg',
            databaseTable: 'arg',
            foreignKeyReference: {"table": "registered_function", "column": "id", "entity": "registeredFunction", "field": "id"},
            description: '"Registered Function" field for arg. This is a required field. Your entry must be an uuid data type. This field is a reference to a registeredFunction.',
        },
            defaultValue: {
            fieldNameFormats: {
    "frontend": "defaultValue",
    "backend": "default_value",
    "database": "default_value",
    "pretty": "Default Value",
    "component": "DefaultValue",
    "kebab": "default-value",
    "sqlFunctionRef": "p_default_value",
    "RestAPI": "defaultValue",
    "GraphQL": "defaultValue",
    "custom": "defaultValue"
} as const,
            name: 'defaultValue',
            displayName: 'Default Value',

            uniqueColumnId: 'supabase_automation_matrix:public:arg:default_value',
            uniqueFieldId: 'supabase_automation_matrix:arg:defaultValue',

            dataType: 'object' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "{'value': None}" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'arg',
            databaseTable: 'arg',
            foreignKeyReference: null,
            description: '"Default Value" field for arg. This is a required field. Your entry must be an object data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:arg:description',
            uniqueFieldId: 'supabase_automation_matrix:arg:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'arg',
            databaseTable: 'arg',
            foreignKeyReference: null,
            description: '"Description" field for arg. This is an optional field. Your entry must be an string data type.',
        },
            examples: {
            fieldNameFormats: {
    "frontend": "examples",
    "backend": "examples",
    "database": "examples",
    "pretty": "Examples",
    "component": "Examples",
    "kebab": "examples",
    "sqlFunctionRef": "p_examples",
    "RestAPI": "examples",
    "GraphQL": "examples",
    "custom": "examples"
} as const,
            name: 'examples',
            displayName: 'Examples',

            uniqueColumnId: 'supabase_automation_matrix:public:arg:examples',
            uniqueFieldId: 'supabase_automation_matrix:arg:examples',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'arg',
            databaseTable: 'arg',
            foreignKeyReference: null,
            description: '"Examples" field for arg. This is an optional field. Your entry must be an string data type.',
        },
            registeredFunctionReference: {
    fieldNameFormats: {
    "frontend": "registeredFunctionReference",
    "backend": "registered_function_reference",
    "database": "ref_registered_function",
    "pretty": "Registered Function Reference",
    "component": "RegisteredFunctionReference",
    "kebab": "registered-functionReference",
    "sqlFunctionRef": "p_ref_registered_function",
    "RestAPI": "registeredFunctionReference",
    "GraphQL": "registeredFunctionReference",
    "custom": "registeredFunctionReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:registered_function:id',
    uniqueFieldId: 'supabase_automation_matrix:registeredFunction:id',
    name: 'registeredFunctionReference',
    displayName: 'Registered Function Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['registeredFunction'][]>,
    entityName: 'registeredFunction',
    databaseTable: 'registered_function',
    relationshipMap: {registered_function: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "arg",
    "backend": "arg",
    "database": "arg",
    "pretty": "Arg",
    "component": "Arg",
    "kebab": "arg",
    "sqlFunctionRef": "p_arg",
    "RestAPI": "arg",
    "GraphQL": "arg",
    "custom": "arg"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'registered_function', relatedTable: 'registered_function', relatedColumn: 'id', junctionTable: null }
        ],
    },
audioLabel: {
        schemaType: 'table' as const,
        entityName: 'audioLabel',
        displayName: 'Audio Label',
        uniqueTableId: 'supabase_automation_matrix:public:audio_label',
        uniqueEntityId: 'supabase_automation_matrix:audioLabel',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_label:id',
            uniqueFieldId: 'supabase_automation_matrix:audioLabel:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioLabel',
            databaseTable: 'audio_label',
            foreignKeyReference: null,
            description: '"Id" field for audioLabel. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_label:created_at',
            uniqueFieldId: 'supabase_automation_matrix:audioLabel:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'audioLabel',
            databaseTable: 'audio_label',
            foreignKeyReference: null,
            description: '"Created At" field for audioLabel. This is a required field. Your entry must be an date data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_label:name',
            uniqueFieldId: 'supabase_automation_matrix:audioLabel:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioLabel',
            databaseTable: 'audio_label',
            foreignKeyReference: null,
            description: '"Name" field for audioLabel. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_label:description',
            uniqueFieldId: 'supabase_automation_matrix:audioLabel:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioLabel',
            databaseTable: 'audio_label',
            foreignKeyReference: null,
            description: '"Description" field for audioLabel. This is an optional field. Your entry must be an string data type.',
        },
            audioRecordingInverse: {
    fieldNameFormats: {
    "frontend": "audioRecordingInverse",
    "backend": "audio_recording_Inverse",
    "database": "ifk_audio_recording",
    "pretty": "Audio Recording Inverse",
    "component": "AudioRecordingInverse",
    "kebab": "audio-recordingInverse",
    "sqlFunctionRef": "p_ifk_audio_recording",
    "RestAPI": "audioRecordingInverse",
    "GraphQL": "audioRecordingInverse",
    "custom": "audioRecordingInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:audio_recording',
    uniqueEntityId: 'supabase_automation_matrix:audioRecording',
    name: 'audioRecordingInverse',
    displayName: 'Audio Recording Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['audioRecording'][]>,
    entityName: 'audioRecording',
    databaseTable: 'audio_recording',
},
        },
        entityNameFormats: {
    "frontend": "audioLabel",
    "backend": "audio_label",
    "database": "audio_label",
    "pretty": "Audio Label",
    "component": "AudioLabel",
    "kebab": "audio-label",
    "sqlFunctionRef": "p_audio_label",
    "RestAPI": "audioLabel",
    "GraphQL": "audioLabel",
    "custom": "audioLabel"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'audio_recording', relatedColumn: 'label', junctionTable: null }
        ],
    },
audioRecording: {
        schemaType: 'table' as const,
        entityName: 'audioRecording',
        displayName: 'Audio Recording',
        uniqueTableId: 'supabase_automation_matrix:public:audio_recording',
        uniqueEntityId: 'supabase_automation_matrix:audioRecording',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording:id',
            uniqueFieldId: 'supabase_automation_matrix:audioRecording:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioRecording',
            databaseTable: 'audio_recording',
            foreignKeyReference: null,
            description: '"Id" field for audioRecording. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording:created_at',
            uniqueFieldId: 'supabase_automation_matrix:audioRecording:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'audioRecording',
            databaseTable: 'audio_recording',
            foreignKeyReference: null,
            description: '"Created At" field for audioRecording. This is a required field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording:user_id',
            uniqueFieldId: 'supabase_automation_matrix:audioRecording:userId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioRecording',
            databaseTable: 'audio_recording',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for audioRecording. This is a required field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording:name',
            uniqueFieldId: 'supabase_automation_matrix:audioRecording:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioRecording',
            databaseTable: 'audio_recording',
            foreignKeyReference: null,
            description: '"Name" field for audioRecording. This is a required field. Your entry must be an string data type.',
        },
            label: {
            fieldNameFormats: {
    "frontend": "label",
    "backend": "label",
    "database": "label",
    "pretty": "Label",
    "component": "Label",
    "kebab": "label",
    "sqlFunctionRef": "p_label",
    "RestAPI": "label",
    "GraphQL": "label",
    "custom": "label"
} as const,
            name: 'label',
            displayName: 'Label',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording:label',
            uniqueFieldId: 'supabase_automation_matrix:audioRecording:label',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioRecording',
            databaseTable: 'audio_recording',
            foreignKeyReference: {"table": "audio_label", "column": "id", "entity": "audioLabel", "field": "id"},
            description: '"Label" field for audioRecording. This is an optional field. Your entry must be an uuid data type. This field is a reference to a audioLabel.',
        },
            fileUrl: {
            fieldNameFormats: {
    "frontend": "fileUrl",
    "backend": "file_url",
    "database": "file_url",
    "pretty": "File Url",
    "component": "FileUrl",
    "kebab": "file-url",
    "sqlFunctionRef": "p_file_url",
    "RestAPI": "fileUrl",
    "GraphQL": "fileUrl",
    "custom": "fileUrl"
} as const,
            name: 'fileUrl',
            displayName: 'File Url',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording:file_url',
            uniqueFieldId: 'supabase_automation_matrix:audioRecording:fileUrl',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioRecording',
            databaseTable: 'audio_recording',
            foreignKeyReference: null,
            description: '"File Url" field for audioRecording. This is a required field. Your entry must be an string data type.',
        },
            duration: {
            fieldNameFormats: {
    "frontend": "duration",
    "backend": "duration",
    "database": "duration",
    "pretty": "Duration",
    "component": "Duration",
    "kebab": "duration",
    "sqlFunctionRef": "p_duration",
    "RestAPI": "duration",
    "GraphQL": "duration",
    "custom": "duration"
} as const,
            name: 'duration',
            displayName: 'Duration',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording:duration',
            uniqueFieldId: 'supabase_automation_matrix:audioRecording:duration',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "decimal",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'audioRecording',
            databaseTable: 'audio_recording',
            foreignKeyReference: null,
            description: '"Duration" field for audioRecording. This is an optional field. Your entry must be an number data type.',
        },
            localPath: {
            fieldNameFormats: {
    "frontend": "localPath",
    "backend": "local_path",
    "database": "local_path",
    "pretty": "Local Path",
    "component": "LocalPath",
    "kebab": "local-path",
    "sqlFunctionRef": "p_local_path",
    "RestAPI": "localPath",
    "GraphQL": "localPath",
    "custom": "localPath"
} as const,
            name: 'localPath',
            displayName: 'Local Path',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording:local_path',
            uniqueFieldId: 'supabase_automation_matrix:audioRecording:localPath',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioRecording',
            databaseTable: 'audio_recording',
            foreignKeyReference: null,
            description: '"Local Path" field for audioRecording. This is an optional field. Your entry must be an string data type.',
        },
            size: {
            fieldNameFormats: {
    "frontend": "size",
    "backend": "size",
    "database": "size",
    "pretty": "Size",
    "component": "Size",
    "kebab": "size",
    "sqlFunctionRef": "p_size",
    "RestAPI": "size",
    "GraphQL": "size",
    "custom": "size"
} as const,
            name: 'size',
            displayName: 'Size',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording:size',
            uniqueFieldId: 'supabase_automation_matrix:audioRecording:size',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "decimal",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'audioRecording',
            databaseTable: 'audio_recording',
            foreignKeyReference: null,
            description: '"Size" field for audioRecording. This is an optional field. Your entry must be an number data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording:is_public',
            uniqueFieldId: 'supabase_automation_matrix:audioRecording:isPublic',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'audioRecording',
            databaseTable: 'audio_recording',
            foreignKeyReference: null,
            description: '"Is Public" field for audioRecording. This is a required field. Your entry must be an boolean data type.',
        },
            audioLabelReference: {
    fieldNameFormats: {
    "frontend": "audioLabelReference",
    "backend": "audio_label_reference",
    "database": "ref_audio_label",
    "pretty": "Audio Label Reference",
    "component": "AudioLabelReference",
    "kebab": "audio-labelReference",
    "sqlFunctionRef": "p_ref_audio_label",
    "RestAPI": "audioLabelReference",
    "GraphQL": "audioLabelReference",
    "custom": "audioLabelReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:audio_label:id',
    uniqueFieldId: 'supabase_automation_matrix:audioLabel:id',
    name: 'audioLabelReference',
    displayName: 'Audio Label Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['audioLabel'][]>,
    entityName: 'audioLabel',
    databaseTable: 'audio_label',
    relationshipMap: {audio_label: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "audioRecording",
    "backend": "audio_recording",
    "database": "audio_recording",
    "pretty": "Audio Recording",
    "component": "AudioRecording",
    "kebab": "audio-recording",
    "sqlFunctionRef": "p_audio_recording",
    "RestAPI": "audioRecording",
    "GraphQL": "audioRecording",
    "custom": "audioRecording"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'label', relatedTable: 'audio_label', relatedColumn: 'id', junctionTable: null }
        ],
    },
audioRecordingUsers: {
        schemaType: 'table' as const,
        entityName: 'audioRecordingUsers',
        displayName: 'Audio Recording Users',
        uniqueTableId: 'supabase_automation_matrix:public:audio_recording_users',
        uniqueEntityId: 'supabase_automation_matrix:audioRecordingUsers',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'firstName', databaseFieldName: 'first_name' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording_users:id',
            uniqueFieldId: 'supabase_automation_matrix:audioRecordingUsers:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioRecordingUsers',
            databaseTable: 'audio_recording_users',
            foreignKeyReference: null,
            description: '"Id" field for audioRecordingUsers. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording_users:created_at',
            uniqueFieldId: 'supabase_automation_matrix:audioRecordingUsers:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'audioRecordingUsers',
            databaseTable: 'audio_recording_users',
            foreignKeyReference: null,
            description: '"Created At" field for audioRecordingUsers. This is a required field. Your entry must be an date data type.',
        },
            firstName: {
            fieldNameFormats: {
    "frontend": "firstName",
    "backend": "first_name",
    "database": "first_name",
    "pretty": "First Name",
    "component": "FirstName",
    "kebab": "first-name",
    "sqlFunctionRef": "p_first_name",
    "RestAPI": "firstName",
    "GraphQL": "firstName",
    "custom": "firstName"
} as const,
            name: 'firstName',
            displayName: 'First Name',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording_users:first_name',
            uniqueFieldId: 'supabase_automation_matrix:audioRecordingUsers:firstName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioRecordingUsers',
            databaseTable: 'audio_recording_users',
            foreignKeyReference: null,
            description: '"First Name" field for audioRecordingUsers. This is an optional field. Your entry must be an string data type.',
        },
            lastName: {
            fieldNameFormats: {
    "frontend": "lastName",
    "backend": "last_name",
    "database": "last_name",
    "pretty": "Last Name",
    "component": "LastName",
    "kebab": "last-name",
    "sqlFunctionRef": "p_last_name",
    "RestAPI": "lastName",
    "GraphQL": "lastName",
    "custom": "lastName"
} as const,
            name: 'lastName',
            displayName: 'Last Name',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording_users:last_name',
            uniqueFieldId: 'supabase_automation_matrix:audioRecordingUsers:lastName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioRecordingUsers',
            databaseTable: 'audio_recording_users',
            foreignKeyReference: null,
            description: '"Last Name" field for audioRecordingUsers. This is an optional field. Your entry must be an string data type.',
        },
            email: {
            fieldNameFormats: {
    "frontend": "email",
    "backend": "email",
    "database": "email",
    "pretty": "Email",
    "component": "Email",
    "kebab": "email",
    "sqlFunctionRef": "p_email",
    "RestAPI": "email",
    "GraphQL": "email",
    "custom": "email"
} as const,
            name: 'email',
            displayName: 'Email',

            uniqueColumnId: 'supabase_automation_matrix:public:audio_recording_users:email',
            uniqueFieldId: 'supabase_automation_matrix:audioRecordingUsers:email',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'audioRecordingUsers',
            databaseTable: 'audio_recording_users',
            foreignKeyReference: null,
            description: '"Email" field for audioRecordingUsers. This is an optional field. Your entry must be an string data type.',
        },
        },
        entityNameFormats: {
    "frontend": "audioRecordingUsers",
    "backend": "audio_recording_users",
    "database": "audio_recording_users",
    "pretty": "Audio Recording Users",
    "component": "AudioRecordingUsers",
    "kebab": "audio-recording-users",
    "sqlFunctionRef": "p_audio_recording_users",
    "RestAPI": "audioRecordingUsers",
    "GraphQL": "audioRecordingUsers",
    "custom": "audioRecordingUsers"
},
        relationships: [
            
        ],
    },
automationBoundaryBroker: {
        schemaType: 'table' as const,
        entityName: 'automationBoundaryBroker',
        displayName: 'Automation Boundary Broker',
        uniqueTableId: 'supabase_automation_matrix:public:automation_boundary_broker',
        uniqueEntityId: 'supabase_automation_matrix:automationBoundaryBroker',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'broker', databaseFieldName: 'broker' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_boundary_broker:id',
            uniqueFieldId: 'supabase_automation_matrix:automationBoundaryBroker:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'automationBoundaryBroker',
            databaseTable: 'automation_boundary_broker',
            foreignKeyReference: null,
            description: '"Id" field for automationBoundaryBroker. This is a required field. Your entry must be an uuid data type.',
        },
            matrix: {
            fieldNameFormats: {
    "frontend": "matrix",
    "backend": "matrix",
    "database": "matrix",
    "pretty": "Matrix",
    "component": "Matrix",
    "kebab": "matrix",
    "sqlFunctionRef": "p_matrix",
    "RestAPI": "matrix",
    "GraphQL": "matrix",
    "custom": "matrix"
} as const,
            name: 'matrix',
            displayName: 'Matrix',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_boundary_broker:matrix',
            uniqueFieldId: 'supabase_automation_matrix:automationBoundaryBroker:matrix',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'automationBoundaryBroker',
            databaseTable: 'automation_boundary_broker',
            foreignKeyReference: {"table": "automation_matrix", "column": "id", "entity": "automationMatrix", "field": "id"},
            description: '"Matrix" field for automationBoundaryBroker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a automationMatrix.',
        },
            broker: {
            fieldNameFormats: {
    "frontend": "broker",
    "backend": "broker",
    "database": "broker",
    "pretty": "Broker",
    "component": "Broker",
    "kebab": "broker",
    "sqlFunctionRef": "p_broker",
    "RestAPI": "broker",
    "GraphQL": "broker",
    "custom": "broker"
} as const,
            name: 'broker',
            displayName: 'Broker',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_boundary_broker:broker',
            uniqueFieldId: 'supabase_automation_matrix:automationBoundaryBroker:broker',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'automationBoundaryBroker',
            databaseTable: 'automation_boundary_broker',
            foreignKeyReference: {"table": "broker", "column": "id", "entity": "broker", "field": "id"},
            description: '"Broker" field for automationBoundaryBroker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a broker.',
        },
            sparkSource: {
            fieldNameFormats: {
    "frontend": "sparkSource",
    "backend": "spark_source",
    "database": "spark_source",
    "pretty": "Spark Source",
    "component": "SparkSource",
    "kebab": "spark-source",
    "sqlFunctionRef": "p_spark_source",
    "RestAPI": "sparkSource",
    "GraphQL": "sparkSource",
    "custom": "sparkSource"
} as const,
            name: 'sparkSource',
            displayName: 'Spark Source',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_boundary_broker:spark_source',
            uniqueFieldId: 'supabase_automation_matrix:automationBoundaryBroker:sparkSource',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Api",
            "value": "api"
        },
        {
            "label": "Chance",
            "value": "chance"
        },
        {
            "label": "Database",
            "value": "database"
        },
        {
            "label": "Environment",
            "value": "environment"
        },
        {
            "label": "File",
            "value": "file"
        },
        {
            "label": "Function",
            "value": "function"
        },
        {
            "label": "Generated Data",
            "value": "generated_data"
        },
        {
            "label": "None",
            "value": "none"
        },
        {
            "label": "User Input",
            "value": "user_input"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"api" | "chance" | "database" | "environment" | "file" | "function" | "generated_data" | "none" | "user_input" | undefined>,
            enumValues: ['api', 'chance', 'database', 'environment', 'file', 'function', 'generated_data', 'none', 'user_input'] as const,
            entityName: 'automationBoundaryBroker',
            databaseTable: 'automation_boundary_broker',
            foreignKeyReference: null,
            description: '"Spark Source" field for automationBoundaryBroker. This is an optional field. Your entry must be an string data type.',
        },
            beaconDestination: {
            fieldNameFormats: {
    "frontend": "beaconDestination",
    "backend": "beacon_destination",
    "database": "beacon_destination",
    "pretty": "Beacon Destination",
    "component": "BeaconDestination",
    "kebab": "beacon-destination",
    "sqlFunctionRef": "p_beacon_destination",
    "RestAPI": "beaconDestination",
    "GraphQL": "beaconDestination",
    "custom": "beaconDestination"
} as const,
            name: 'beaconDestination',
            displayName: 'Beacon Destination',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_boundary_broker:beacon_destination',
            uniqueFieldId: 'supabase_automation_matrix:automationBoundaryBroker:beaconDestination',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Api Response",
            "value": "api_response"
        },
        {
            "label": "Database",
            "value": "database"
        },
        {
            "label": "File",
            "value": "file"
        },
        {
            "label": "Function",
            "value": "function"
        },
        {
            "label": "User Output",
            "value": "user_output"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"api_response" | "database" | "file" | "function" | "user_output" | undefined>,
            enumValues: ['api_response', 'database', 'file', 'function', 'user_output'] as const,
            entityName: 'automationBoundaryBroker',
            databaseTable: 'automation_boundary_broker',
            foreignKeyReference: null,
            description: '"Beacon Destination" field for automationBoundaryBroker. This is an optional field. Your entry must be an string data type.',
        },
            brokerReference: {
    fieldNameFormats: {
    "frontend": "brokerReference",
    "backend": "broker_reference",
    "database": "ref_broker",
    "pretty": "Broker Reference",
    "component": "BrokerReference",
    "kebab": "brokerReference",
    "sqlFunctionRef": "p_ref_broker",
    "RestAPI": "brokerReference",
    "GraphQL": "brokerReference",
    "custom": "brokerReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:broker:id',
    uniqueFieldId: 'supabase_automation_matrix:broker:id',
    name: 'brokerReference',
    displayName: 'Broker Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['broker'][]>,
    entityName: 'broker',
    databaseTable: 'broker',
    relationshipMap: {broker: 'id', automation_matrix: 'id'},
},
            automationMatrixReference: {
    fieldNameFormats: {
    "frontend": "automationMatrixReference",
    "backend": "automation_matrix_reference",
    "database": "ref_automation_matrix",
    "pretty": "Automation Matrix Reference",
    "component": "AutomationMatrixReference",
    "kebab": "automation-matrixReference",
    "sqlFunctionRef": "p_ref_automation_matrix",
    "RestAPI": "automationMatrixReference",
    "GraphQL": "automationMatrixReference",
    "custom": "automationMatrixReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:automation_matrix:id',
    uniqueFieldId: 'supabase_automation_matrix:automationMatrix:id',
    name: 'automationMatrixReference',
    displayName: 'Automation Matrix Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['automationMatrix'][]>,
    entityName: 'automationMatrix',
    databaseTable: 'automation_matrix',
    relationshipMap: {broker: 'id', automation_matrix: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "automationBoundaryBroker",
    "backend": "automation_boundary_broker",
    "database": "automation_boundary_broker",
    "pretty": "Automation Boundary Broker",
    "component": "AutomationBoundaryBroker",
    "kebab": "automation-boundary-broker",
    "sqlFunctionRef": "p_automation_boundary_broker",
    "RestAPI": "automationBoundaryBroker",
    "GraphQL": "automationBoundaryBroker",
    "custom": "automationBoundaryBroker"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'broker', relatedTable: 'broker', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'matrix', relatedTable: 'automation_matrix', relatedColumn: 'id', junctionTable: null }
        ],
    },
automationMatrix: {
        schemaType: 'table' as const,
        entityName: 'automationMatrix',
        displayName: 'Automation Matrix',
        uniqueTableId: 'supabase_automation_matrix:public:automation_matrix',
        uniqueEntityId: 'supabase_automation_matrix:automationMatrix',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_matrix:id',
            uniqueFieldId: 'supabase_automation_matrix:automationMatrix:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'automationMatrix',
            databaseTable: 'automation_matrix',
            foreignKeyReference: null,
            description: '"Id" field for automationMatrix. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_matrix:name',
            uniqueFieldId: 'supabase_automation_matrix:automationMatrix:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'automationMatrix',
            databaseTable: 'automation_matrix',
            foreignKeyReference: null,
            description: '"Name" field for automationMatrix. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_matrix:description',
            uniqueFieldId: 'supabase_automation_matrix:automationMatrix:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'automationMatrix',
            databaseTable: 'automation_matrix',
            foreignKeyReference: null,
            description: '"Description" field for automationMatrix. This is an optional field. Your entry must be an string data type.',
        },
            averageSeconds: {
            fieldNameFormats: {
    "frontend": "averageSeconds",
    "backend": "average_seconds",
    "database": "average_seconds",
    "pretty": "Average Seconds",
    "component": "AverageSeconds",
    "kebab": "average-seconds",
    "sqlFunctionRef": "p_average_seconds",
    "RestAPI": "averageSeconds",
    "GraphQL": "averageSeconds",
    "custom": "averageSeconds"
} as const,
            name: 'averageSeconds',
            displayName: 'Average Seconds',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_matrix:average_seconds',
            uniqueFieldId: 'supabase_automation_matrix:automationMatrix:averageSeconds',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'automationMatrix',
            databaseTable: 'automation_matrix',
            foreignKeyReference: null,
            description: '"Average Seconds" field for automationMatrix. This is an optional field. Your entry must be an number data type.',
        },
            isAutomated: {
            fieldNameFormats: {
    "frontend": "isAutomated",
    "backend": "is_automated",
    "database": "is_automated",
    "pretty": "Is Automated",
    "component": "IsAutomated",
    "kebab": "is-automated",
    "sqlFunctionRef": "p_is_automated",
    "RestAPI": "isAutomated",
    "GraphQL": "isAutomated",
    "custom": "isAutomated"
} as const,
            name: 'isAutomated',
            displayName: 'Is Automated',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_matrix:is_automated',
            uniqueFieldId: 'supabase_automation_matrix:automationMatrix:isAutomated',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'automationMatrix',
            databaseTable: 'automation_matrix',
            foreignKeyReference: null,
            description: '"Is Automated" field for automationMatrix. This is an optional field. Your entry must be an boolean data type.',
        },
            cognitionMatrices: {
            fieldNameFormats: {
    "frontend": "cognitionMatrices",
    "backend": "cognition_matrices",
    "database": "cognition_matrices",
    "pretty": "Cognition Matrices",
    "component": "CognitionMatrices",
    "kebab": "cognition-matrices",
    "sqlFunctionRef": "p_cognition_matrices",
    "RestAPI": "cognitionMatrices",
    "GraphQL": "cognitionMatrices",
    "custom": "cognitionMatrices"
} as const,
            name: 'cognitionMatrices',
            displayName: 'Cognition Matrices',

            uniqueColumnId: 'supabase_automation_matrix:public:automation_matrix:cognition_matrices',
            uniqueFieldId: 'supabase_automation_matrix:automationMatrix:cognitionMatrices',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Agent Crew",
            "value": "agent_crew"
        },
        {
            "label": "Agent Mixture",
            "value": "agent_mixture"
        },
        {
            "label": "Conductor",
            "value": "conductor"
        },
        {
            "label": "Hypercluster",
            "value": "hypercluster"
        },
        {
            "label": "Knowledge Matrix",
            "value": "knowledge_matrix"
        },
        {
            "label": "Monte Carlo",
            "value": "monte_carlo"
        },
        {
            "label": "The Matrix",
            "value": "the_matrix"
        },
        {
            "label": "Workflow",
            "value": "workflow"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"agent_crew" | "agent_mixture" | "conductor" | "hypercluster" | "knowledge_matrix" | "monte_carlo" | "the_matrix" | "workflow" | undefined>,
            enumValues: ['agent_crew', 'agent_mixture', 'conductor', 'hypercluster', 'knowledge_matrix', 'monte_carlo', 'the_matrix', 'workflow'] as const,
            entityName: 'automationMatrix',
            databaseTable: 'automation_matrix',
            foreignKeyReference: null,
            description: '"Cognition Matrices" field for automationMatrix. This is an optional field. Your entry must be an string data type.',
        },
            actionInverse: {
    fieldNameFormats: {
    "frontend": "actionInverse",
    "backend": "action_Inverse",
    "database": "ifk_action",
    "pretty": "Action Inverse",
    "component": "ActionInverse",
    "kebab": "actionInverse",
    "sqlFunctionRef": "p_ifk_action",
    "RestAPI": "actionInverse",
    "GraphQL": "actionInverse",
    "custom": "actionInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:action',
    uniqueEntityId: 'supabase_automation_matrix:action',
    name: 'actionInverse',
    displayName: 'Action Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['action'][]>,
    entityName: 'action',
    databaseTable: 'action',
},
            automationBoundaryBrokerInverse: {
    fieldNameFormats: {
    "frontend": "automationBoundaryBrokerInverse",
    "backend": "automation_boundary_broker_Inverse",
    "database": "ifk_automation_boundary_broker",
    "pretty": "Automation Boundary Broker Inverse",
    "component": "AutomationBoundaryBrokerInverse",
    "kebab": "automation-boundary-brokerInverse",
    "sqlFunctionRef": "p_ifk_automation_boundary_broker",
    "RestAPI": "automationBoundaryBrokerInverse",
    "GraphQL": "automationBoundaryBrokerInverse",
    "custom": "automationBoundaryBrokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:automation_boundary_broker',
    uniqueEntityId: 'supabase_automation_matrix:automationBoundaryBroker',
    name: 'automationBoundaryBrokerInverse',
    displayName: 'Automation Boundary Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['automationBoundaryBroker'][]>,
    entityName: 'automationBoundaryBroker',
    databaseTable: 'automation_boundary_broker',
},
        },
        entityNameFormats: {
    "frontend": "automationMatrix",
    "backend": "automation_matrix",
    "database": "automation_matrix",
    "pretty": "Automation Matrix",
    "component": "AutomationMatrix",
    "kebab": "automation-matrix",
    "sqlFunctionRef": "p_automation_matrix",
    "RestAPI": "automationMatrix",
    "GraphQL": "automationMatrix",
    "custom": "automationMatrix"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'action', relatedColumn: 'matrix', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'automation_boundary_broker', relatedColumn: 'matrix', junctionTable: null }
        ],
    },
broker: {
        schemaType: 'table' as const,
        entityName: 'broker',
        displayName: 'Broker',
        uniqueTableId: 'supabase_automation_matrix:public:broker',
        uniqueEntityId: 'supabase_automation_matrix:broker',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:id',
            uniqueFieldId: 'supabase_automation_matrix:broker:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Id" field for broker. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:name',
            uniqueFieldId: 'supabase_automation_matrix:broker:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Name" field for broker. This is a required field. Your entry must be an string data type.',
        },
            value: {
            fieldNameFormats: {
    "frontend": "value",
    "backend": "value",
    "database": "value",
    "pretty": "Value",
    "component": "Value",
    "kebab": "value",
    "sqlFunctionRef": "p_value",
    "RestAPI": "value",
    "GraphQL": "value",
    "custom": "value"
} as const,
            name: 'value',
            displayName: 'Value',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:value',
            uniqueFieldId: 'supabase_automation_matrix:broker:value',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "{'broker_value': None}" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Value" field for broker. This is an optional field. Your entry must be an object data type.',
        },
            dataType: {
            fieldNameFormats: {
    "frontend": "dataType",
    "backend": "data_type",
    "database": "data_type",
    "pretty": "Data Type",
    "component": "DataType",
    "kebab": "data-type",
    "sqlFunctionRef": "p_data_type",
    "RestAPI": "dataType",
    "GraphQL": "dataType",
    "custom": "dataType"
} as const,
            name: 'dataType',
            displayName: 'Data Type',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:data_type',
            uniqueFieldId: 'supabase_automation_matrix:broker:dataType',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "str" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Bool",
            "value": "bool"
        },
        {
            "label": "Dict",
            "value": "dict"
        },
        {
            "label": "Float",
            "value": "float"
        },
        {
            "label": "Int",
            "value": "int"
        },
        {
            "label": "List",
            "value": "list"
        },
        {
            "label": "Str",
            "value": "str"
        },
        {
            "label": "Url",
            "value": "url"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"bool" | "dict" | "float" | "int" | "list" | "str" | "url" | undefined>,
            enumValues: ['bool', 'dict', 'float', 'int', 'list', 'str', 'url'] as const,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Data Type" field for broker. This is a required field. Your entry must be an string data type.',
        },
            ready: {
            fieldNameFormats: {
    "frontend": "ready",
    "backend": "ready",
    "database": "ready",
    "pretty": "Ready",
    "component": "Ready",
    "kebab": "ready",
    "sqlFunctionRef": "p_ready",
    "RestAPI": "ready",
    "GraphQL": "ready",
    "custom": "ready"
} as const,
            name: 'ready',
            displayName: 'Ready',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:ready',
            uniqueFieldId: 'supabase_automation_matrix:broker:ready',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Ready" field for broker. This is an optional field. Your entry must be an boolean data type.',
        },
            defaultSource: {
            fieldNameFormats: {
    "frontend": "defaultSource",
    "backend": "default_source",
    "database": "default_source",
    "pretty": "Default Source",
    "component": "DefaultSource",
    "kebab": "default-source",
    "sqlFunctionRef": "p_default_source",
    "RestAPI": "defaultSource",
    "GraphQL": "defaultSource",
    "custom": "defaultSource"
} as const,
            name: 'defaultSource',
            displayName: 'Default Source',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:default_source',
            uniqueFieldId: 'supabase_automation_matrix:broker:defaultSource',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "none" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Api",
            "value": "api"
        },
        {
            "label": "Chance",
            "value": "chance"
        },
        {
            "label": "Database",
            "value": "database"
        },
        {
            "label": "Environment",
            "value": "environment"
        },
        {
            "label": "File",
            "value": "file"
        },
        {
            "label": "Function",
            "value": "function"
        },
        {
            "label": "Generated Data",
            "value": "generated_data"
        },
        {
            "label": "None",
            "value": "none"
        },
        {
            "label": "User Input",
            "value": "user_input"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"api" | "chance" | "database" | "environment" | "file" | "function" | "generated_data" | "none" | "user_input" | undefined>,
            enumValues: ['api', 'chance', 'database', 'environment', 'file', 'function', 'generated_data', 'none', 'user_input'] as const,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Default Source" field for broker. This is an optional field. Your entry must be an string data type.',
        },
            displayName: {
            fieldNameFormats: {
    "frontend": "displayName",
    "backend": "display_name",
    "database": "display_name",
    "pretty": "Display Name",
    "component": "DisplayName",
    "kebab": "display-name",
    "sqlFunctionRef": "p_display_name",
    "RestAPI": "displayName",
    "GraphQL": "displayName",
    "custom": "displayName"
} as const,
            name: 'displayName',
            displayName: 'Display Name',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:display_name',
            uniqueFieldId: 'supabase_automation_matrix:broker:displayName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Display Name" field for broker. This is an optional field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:description',
            uniqueFieldId: 'supabase_automation_matrix:broker:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Description" field for broker. This is an optional field. Your entry must be an string data type.',
        },
            tooltip: {
            fieldNameFormats: {
    "frontend": "tooltip",
    "backend": "tooltip",
    "database": "tooltip",
    "pretty": "Tooltip",
    "component": "Tooltip",
    "kebab": "tooltip",
    "sqlFunctionRef": "p_tooltip",
    "RestAPI": "tooltip",
    "GraphQL": "tooltip",
    "custom": "tooltip"
} as const,
            name: 'tooltip',
            displayName: 'Tooltip',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:tooltip',
            uniqueFieldId: 'supabase_automation_matrix:broker:tooltip',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Tooltip" field for broker. This is an optional field. Your entry must be an string data type.',
        },
            validationRules: {
            fieldNameFormats: {
    "frontend": "validationRules",
    "backend": "validation_rules",
    "database": "validation_rules",
    "pretty": "Validation Rules",
    "component": "ValidationRules",
    "kebab": "validation-rules",
    "sqlFunctionRef": "p_validation_rules",
    "RestAPI": "validationRules",
    "GraphQL": "validationRules",
    "custom": "validationRules"
} as const,
            name: 'validationRules',
            displayName: 'Validation Rules',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:validation_rules',
            uniqueFieldId: 'supabase_automation_matrix:broker:validationRules',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Validation Rules" field for broker. This is an optional field. Your entry must be an object data type.',
        },
            sampleEntries: {
            fieldNameFormats: {
    "frontend": "sampleEntries",
    "backend": "sample_entries",
    "database": "sample_entries",
    "pretty": "Sample Entries",
    "component": "SampleEntries",
    "kebab": "sample-entries",
    "sqlFunctionRef": "p_sample_entries",
    "RestAPI": "sampleEntries",
    "GraphQL": "sampleEntries",
    "custom": "sampleEntries"
} as const,
            name: 'sampleEntries',
            displayName: 'Sample Entries',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:sample_entries',
            uniqueFieldId: 'supabase_automation_matrix:broker:sampleEntries',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Sample Entries" field for broker. This is an optional field. Your entry must be an string data type.',
        },
            customSourceComponent: {
            fieldNameFormats: {
    "frontend": "customSourceComponent",
    "backend": "custom_source_component",
    "database": "custom_source_component",
    "pretty": "Custom Source Component",
    "component": "CustomSourceComponent",
    "kebab": "custom-source-component",
    "sqlFunctionRef": "p_custom_source_component",
    "RestAPI": "customSourceComponent",
    "GraphQL": "customSourceComponent",
    "custom": "customSourceComponent"
} as const,
            name: 'customSourceComponent',
            displayName: 'Custom Source Component',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:custom_source_component',
            uniqueFieldId: 'supabase_automation_matrix:broker:customSourceComponent',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: {"table": "data_input_component", "column": "id", "entity": "dataInputComponent", "field": "id"},
            description: '"Custom Source Component" field for broker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a dataInputComponent.',
        },
            additionalParams: {
            fieldNameFormats: {
    "frontend": "additionalParams",
    "backend": "additional_params",
    "database": "additional_params",
    "pretty": "Additional Params",
    "component": "AdditionalParams",
    "kebab": "additional-params",
    "sqlFunctionRef": "p_additional_params",
    "RestAPI": "additionalParams",
    "GraphQL": "additionalParams",
    "custom": "additionalParams"
} as const,
            name: 'additionalParams',
            displayName: 'Additional Params',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:additional_params',
            uniqueFieldId: 'supabase_automation_matrix:broker:additionalParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Additional Params" field for broker. This is an optional field. Your entry must be an object data type.',
        },
            otherSourceParams: {
            fieldNameFormats: {
    "frontend": "otherSourceParams",
    "backend": "other_source_params",
    "database": "other_source_params",
    "pretty": "Other Source Params",
    "component": "OtherSourceParams",
    "kebab": "other-source-params",
    "sqlFunctionRef": "p_other_source_params",
    "RestAPI": "otherSourceParams",
    "GraphQL": "otherSourceParams",
    "custom": "otherSourceParams"
} as const,
            name: 'otherSourceParams',
            displayName: 'Other Source Params',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:other_source_params',
            uniqueFieldId: 'supabase_automation_matrix:broker:otherSourceParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Other Source Params" field for broker. This is an optional field. Your entry must be an object data type.',
        },
            defaultDestination: {
            fieldNameFormats: {
    "frontend": "defaultDestination",
    "backend": "default_destination",
    "database": "default_destination",
    "pretty": "Default Destination",
    "component": "DefaultDestination",
    "kebab": "default-destination",
    "sqlFunctionRef": "p_default_destination",
    "RestAPI": "defaultDestination",
    "GraphQL": "defaultDestination",
    "custom": "defaultDestination"
} as const,
            name: 'defaultDestination',
            displayName: 'Default Destination',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:default_destination',
            uniqueFieldId: 'supabase_automation_matrix:broker:defaultDestination',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Api Response",
            "value": "api_response"
        },
        {
            "label": "Database",
            "value": "database"
        },
        {
            "label": "File",
            "value": "file"
        },
        {
            "label": "Function",
            "value": "function"
        },
        {
            "label": "User Output",
            "value": "user_output"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"api_response" | "database" | "file" | "function" | "user_output" | undefined>,
            enumValues: ['api_response', 'database', 'file', 'function', 'user_output'] as const,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Default Destination" field for broker. This is an optional field. Your entry must be an string data type.',
        },
            outputComponent: {
            fieldNameFormats: {
    "frontend": "outputComponent",
    "backend": "output_component",
    "database": "output_component",
    "pretty": "Output Component",
    "component": "OutputComponent",
    "kebab": "output-component",
    "sqlFunctionRef": "p_output_component",
    "RestAPI": "outputComponent",
    "GraphQL": "outputComponent",
    "custom": "outputComponent"
} as const,
            name: 'outputComponent',
            displayName: 'Output Component',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:output_component',
            uniqueFieldId: 'supabase_automation_matrix:broker:outputComponent',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "3 D Model Viewer",
            "value": "3DModelViewer"
        },
        {
            "label": "Audio Output",
            "value": "AudioOutput"
        },
        {
            "label": "Bucket List",
            "value": "BucketList"
        },
        {
            "label": "Budget Visualizer",
            "value": "BudgetVisualizer"
        },
        {
            "label": "Calendar",
            "value": "Calendar"
        },
        {
            "label": "Carousel",
            "value": "Carousel"
        },
        {
            "label": "Checklist",
            "value": "Checklist"
        },
        {
            "label": "Clock",
            "value": "Clock"
        },
        {
            "label": "Code View",
            "value": "CodeView"
        },
        {
            "label": "Complex Multi",
            "value": "ComplexMulti"
        },
        {
            "label": "Data Flow Diagram",
            "value": "DataFlowDiagram"
        },
        {
            "label": "Decision Tree",
            "value": "DecisionTree"
        },
        {
            "label": "Diff Viewer",
            "value": "DiffViewer"
        },
        {
            "label": "File Output",
            "value": "FileOutput"
        },
        {
            "label": "Fitness Tracker",
            "value": "FitnessTracker"
        },
        {
            "label": "Flowchart",
            "value": "Flowchart"
        },
        {
            "label": "Form",
            "value": "Form"
        },
        {
            "label": "Gantt Chart",
            "value": "GanttChart"
        },
        {
            "label": "Geographic Map",
            "value": "GeographicMap"
        },
        {
            "label": "Glossary View",
            "value": "GlossaryView"
        },
        {
            "label": "Heatmap",
            "value": "Heatmap"
        },
        {
            "label": "Horizontal List",
            "value": "HorizontalList"
        },
        {
            "label": "Image View",
            "value": "ImageView"
        },
        {
            "label": "Interactive Chart",
            "value": "InteractiveChart"
        },
        {
            "label": "Json Viewer",
            "value": "JsonViewer"
        },
        {
            "label": "Kanban Board",
            "value": "KanbanBoard"
        },
        {
            "label": "La Te X Renderer",
            "value": "LaTeXRenderer"
        },
        {
            "label": "Live Traffic",
            "value": "LiveTraffic"
        },
        {
            "label": "Local Events",
            "value": "LocalEvents"
        },
        {
            "label": "Markdown Viewer",
            "value": "MarkdownViewer"
        },
        {
            "label": "Meal Planner",
            "value": "MealPlanner"
        },
        {
            "label": "Mind Map",
            "value": "MindMap"
        },
        {
            "label": "Need New Option",
            "value": "NeedNewOption"
        },
        {
            "label": "Network Graph",
            "value": "NetworkGraph"
        },
        {
            "label": "News Aggregator",
            "value": "NewsAggregator"
        },
        {
            "label": "P D F Viewer",
            "value": "PDFViewer"
        },
        {
            "label": "Pivot Table",
            "value": "PivotTable"
        },
        {
            "label": "Plain Text",
            "value": "PlainText"
        },
        {
            "label": "Presentation",
            "value": "Presentation"
        },
        {
            "label": "Public Live Cam",
            "value": "PublicLiveCam"
        },
        {
            "label": "Rich Text Editor",
            "value": "RichTextEditor"
        },
        {
            "label": "Run Code Back",
            "value": "RunCodeBack"
        },
        {
            "label": "Run Code Front",
            "value": "RunCodeFront"
        },
        {
            "label": "S V G Editor",
            "value": "SVGEditor"
        },
        {
            "label": "Sankey Diagram",
            "value": "SankeyDiagram"
        },
        {
            "label": "Satellite View",
            "value": "SatelliteView"
        },
        {
            "label": "Social Media Info",
            "value": "SocialMediaInfo"
        },
        {
            "label": "Spectrum Analyzer",
            "value": "SpectrumAnalyzer"
        },
        {
            "label": "Spreadsheet",
            "value": "Spreadsheet"
        },
        {
            "label": "Table",
            "value": "Table"
        },
        {
            "label": "Task Prioritization",
            "value": "TaskPrioritization"
        },
        {
            "label": "Textarea",
            "value": "Textarea"
        },
        {
            "label": "Thermometer",
            "value": "Thermometer"
        },
        {
            "label": "Timeline",
            "value": "Timeline"
        },
        {
            "label": "Travel Planner",
            "value": "TravelPlanner"
        },
        {
            "label": "Tree View",
            "value": "TreeView"
        },
        {
            "label": "U M L Diagram",
            "value": "UMLDiagram"
        },
        {
            "label": "Vertical List",
            "value": "VerticalList"
        },
        {
            "label": "Voice Sentiment Analysis",
            "value": "VoiceSentimentAnalysis"
        },
        {
            "label": "Weather Dashboard",
            "value": "WeatherDashboard"
        },
        {
            "label": "Weather Map",
            "value": "WeatherMap"
        },
        {
            "label": "Word Highlighter",
            "value": "WordHighlighter"
        },
        {
            "label": "Word Map",
            "value": "WordMap"
        },
        {
            "label": "Chat Response",
            "value": "chatResponse"
        },
        {
            "label": "None",
            "value": "none"
        },
        {
            "label": "Video",
            "value": "video"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"3DModelViewer" | "AudioOutput" | "BucketList" | "BudgetVisualizer" | "Calendar" | "Carousel" | "Checklist" | "Clock" | "CodeView" | "ComplexMulti" | "DataFlowDiagram" | "DecisionTree" | "DiffViewer" | "FileOutput" | "FitnessTracker" | "Flowchart" | "Form" | "GanttChart" | "GeographicMap" | "GlossaryView" | "Heatmap" | "HorizontalList" | "ImageView" | "InteractiveChart" | "JsonViewer" | "KanbanBoard" | "LaTeXRenderer" | "LiveTraffic" | "LocalEvents" | "MarkdownViewer" | "MealPlanner" | "MindMap" | "NeedNewOption" | "NetworkGraph" | "NewsAggregator" | "PDFViewer" | "PivotTable" | "PlainText" | "Presentation" | "PublicLiveCam" | "RichTextEditor" | "RunCodeBack" | "RunCodeFront" | "SVGEditor" | "SankeyDiagram" | "SatelliteView" | "SocialMediaInfo" | "SpectrumAnalyzer" | "Spreadsheet" | "Table" | "TaskPrioritization" | "Textarea" | "Thermometer" | "Timeline" | "TravelPlanner" | "TreeView" | "UMLDiagram" | "VerticalList" | "VoiceSentimentAnalysis" | "WeatherDashboard" | "WeatherMap" | "WordHighlighter" | "WordMap" | "chatResponse" | "none" | "video" | undefined>,
            enumValues: ['3DModelViewer', 'AudioOutput', 'BucketList', 'BudgetVisualizer', 'Calendar', 'Carousel', 'Checklist', 'Clock', 'CodeView', 'ComplexMulti', 'DataFlowDiagram', 'DecisionTree', 'DiffViewer', 'FileOutput', 'FitnessTracker', 'Flowchart', 'Form', 'GanttChart', 'GeographicMap', 'GlossaryView', 'Heatmap', 'HorizontalList', 'ImageView', 'InteractiveChart', 'JsonViewer', 'KanbanBoard', 'LaTeXRenderer', 'LiveTraffic', 'LocalEvents', 'MarkdownViewer', 'MealPlanner', 'MindMap', 'NeedNewOption', 'NetworkGraph', 'NewsAggregator', 'PDFViewer', 'PivotTable', 'PlainText', 'Presentation', 'PublicLiveCam', 'RichTextEditor', 'RunCodeBack', 'RunCodeFront', 'SVGEditor', 'SankeyDiagram', 'SatelliteView', 'SocialMediaInfo', 'SpectrumAnalyzer', 'Spreadsheet', 'Table', 'TaskPrioritization', 'Textarea', 'Thermometer', 'Timeline', 'TravelPlanner', 'TreeView', 'UMLDiagram', 'VerticalList', 'VoiceSentimentAnalysis', 'WeatherDashboard', 'WeatherMap', 'WordHighlighter', 'WordMap', 'chatResponse', 'none', 'video'] as const,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Output Component" field for broker. This is an optional field. Your entry must be an string data type.',
        },
            tags: {
            fieldNameFormats: {
    "frontend": "tags",
    "backend": "tags",
    "database": "tags",
    "pretty": "Tags",
    "component": "Tags",
    "kebab": "tags",
    "sqlFunctionRef": "p_tags",
    "RestAPI": "tags",
    "GraphQL": "tags",
    "custom": "tags"
} as const,
            name: 'tags',
            displayName: 'Tags',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:tags',
            uniqueFieldId: 'supabase_automation_matrix:broker:tags',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "[]" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"Tags" field for broker. This is an optional field. Your entry must be an object data type.',
        },
            stringValue: {
            fieldNameFormats: {
    "frontend": "stringValue",
    "backend": "string_value",
    "database": "string_value",
    "pretty": "String Value",
    "component": "StringValue",
    "kebab": "string-value",
    "sqlFunctionRef": "p_string_value",
    "RestAPI": "stringValue",
    "GraphQL": "stringValue",
    "custom": "stringValue"
} as const,
            name: 'stringValue',
            displayName: 'String Value',

            uniqueColumnId: 'supabase_automation_matrix:public:broker:string_value',
            uniqueFieldId: 'supabase_automation_matrix:broker:stringValue',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'broker',
            databaseTable: 'broker',
            foreignKeyReference: null,
            description: '"String Value" field for broker. This is an optional field. Your entry must be an string data type.',
        },
            dataInputComponentReference: {
    fieldNameFormats: {
    "frontend": "dataInputComponentReference",
    "backend": "data_input_component_reference",
    "database": "ref_data_input_component",
    "pretty": "Data Input Component Reference",
    "component": "DataInputComponentReference",
    "kebab": "data-input-componentReference",
    "sqlFunctionRef": "p_ref_data_input_component",
    "RestAPI": "dataInputComponentReference",
    "GraphQL": "dataInputComponentReference",
    "custom": "dataInputComponentReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:data_input_component:id',
    uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:id',
    name: 'dataInputComponentReference',
    displayName: 'Data Input Component Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['dataInputComponent'][]>,
    entityName: 'dataInputComponent',
    databaseTable: 'data_input_component',
    relationshipMap: {data_input_component: 'id'},
},
            recipeBrokerInverse: {
    fieldNameFormats: {
    "frontend": "recipeBrokerInverse",
    "backend": "recipe_broker_Inverse",
    "database": "ifk_recipe_broker",
    "pretty": "Recipe Broker Inverse",
    "component": "RecipeBrokerInverse",
    "kebab": "recipe-brokerInverse",
    "sqlFunctionRef": "p_ifk_recipe_broker",
    "RestAPI": "recipeBrokerInverse",
    "GraphQL": "recipeBrokerInverse",
    "custom": "recipeBrokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_broker',
    uniqueEntityId: 'supabase_automation_matrix:recipeBroker',
    name: 'recipeBrokerInverse',
    displayName: 'Recipe Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeBroker'][]>,
    entityName: 'recipeBroker',
    databaseTable: 'recipe_broker',
},
            automationBoundaryBrokerInverse: {
    fieldNameFormats: {
    "frontend": "automationBoundaryBrokerInverse",
    "backend": "automation_boundary_broker_Inverse",
    "database": "ifk_automation_boundary_broker",
    "pretty": "Automation Boundary Broker Inverse",
    "component": "AutomationBoundaryBrokerInverse",
    "kebab": "automation-boundary-brokerInverse",
    "sqlFunctionRef": "p_ifk_automation_boundary_broker",
    "RestAPI": "automationBoundaryBrokerInverse",
    "GraphQL": "automationBoundaryBrokerInverse",
    "custom": "automationBoundaryBrokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:automation_boundary_broker',
    uniqueEntityId: 'supabase_automation_matrix:automationBoundaryBroker',
    name: 'automationBoundaryBrokerInverse',
    displayName: 'Automation Boundary Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['automationBoundaryBroker'][]>,
    entityName: 'automationBoundaryBroker',
    databaseTable: 'automation_boundary_broker',
},
        },
        entityNameFormats: {
    "frontend": "broker",
    "backend": "broker",
    "database": "broker",
    "pretty": "Broker",
    "component": "Broker",
    "kebab": "broker",
    "sqlFunctionRef": "p_broker",
    "RestAPI": "broker",
    "GraphQL": "broker",
    "custom": "broker"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'custom_source_component', relatedTable: 'data_input_component', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_broker', relatedColumn: 'broker', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'automation_boundary_broker', relatedColumn: 'broker', junctionTable: null }
        ],
    },
brokerValue: {
        schemaType: 'table' as const,
        entityName: 'brokerValue',
        displayName: 'Broker Value',
        uniqueTableId: 'supabase_automation_matrix:public:broker_value',
        uniqueEntityId: 'supabase_automation_matrix:brokerValue',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:broker_value:id',
            uniqueFieldId: 'supabase_automation_matrix:brokerValue:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'brokerValue',
            databaseTable: 'broker_value',
            foreignKeyReference: null,
            description: '"Id" field for brokerValue. This is a required field. Your entry must be an uuid data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:broker_value:user_id',
            uniqueFieldId: 'supabase_automation_matrix:brokerValue:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'brokerValue',
            databaseTable: 'broker_value',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for brokerValue. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            dataBroker: {
            fieldNameFormats: {
    "frontend": "dataBroker",
    "backend": "data_broker",
    "database": "data_broker",
    "pretty": "Data Broker",
    "component": "DataBroker",
    "kebab": "data-broker",
    "sqlFunctionRef": "p_data_broker",
    "RestAPI": "dataBroker",
    "GraphQL": "dataBroker",
    "custom": "dataBroker"
} as const,
            name: 'dataBroker',
            displayName: 'Data Broker',

            uniqueColumnId: 'supabase_automation_matrix:public:broker_value:data_broker',
            uniqueFieldId: 'supabase_automation_matrix:brokerValue:dataBroker',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'brokerValue',
            databaseTable: 'broker_value',
            foreignKeyReference: {"table": "data_broker", "column": "id", "entity": "dataBroker", "field": "id"},
            description: '"Data Broker" field for brokerValue. This is an optional field. Your entry must be an uuid data type. This field is a reference to a dataBroker.',
        },
            data: {
            fieldNameFormats: {
    "frontend": "data",
    "backend": "data",
    "database": "data",
    "pretty": "Data",
    "component": "Data",
    "kebab": "data",
    "sqlFunctionRef": "p_data",
    "RestAPI": "data",
    "GraphQL": "data",
    "custom": "data"
} as const,
            name: 'data',
            displayName: 'Data',

            uniqueColumnId: 'supabase_automation_matrix:public:broker_value:data',
            uniqueFieldId: 'supabase_automation_matrix:brokerValue:data',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "{'value': None}" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'brokerValue',
            databaseTable: 'broker_value',
            foreignKeyReference: null,
            description: '"Data" field for brokerValue. This is an optional field. Your entry must be an object data type.',
        },
            category: {
            fieldNameFormats: {
    "frontend": "category",
    "backend": "category",
    "database": "category",
    "pretty": "Category",
    "component": "Category",
    "kebab": "category",
    "sqlFunctionRef": "p_category",
    "RestAPI": "category",
    "GraphQL": "category",
    "custom": "category"
} as const,
            name: 'category',
            displayName: 'Category',

            uniqueColumnId: 'supabase_automation_matrix:public:broker_value:category',
            uniqueFieldId: 'supabase_automation_matrix:brokerValue:category',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'brokerValue',
            databaseTable: 'broker_value',
            foreignKeyReference: null,
            description: '"Category" field for brokerValue. This is an optional field. Your entry must be an string data type.',
        },
            subCategory: {
            fieldNameFormats: {
    "frontend": "subCategory",
    "backend": "sub_category",
    "database": "sub_category",
    "pretty": "Sub Category",
    "component": "SubCategory",
    "kebab": "sub-category",
    "sqlFunctionRef": "p_sub_category",
    "RestAPI": "subCategory",
    "GraphQL": "subCategory",
    "custom": "subCategory"
} as const,
            name: 'subCategory',
            displayName: 'Sub Category',

            uniqueColumnId: 'supabase_automation_matrix:public:broker_value:sub_category',
            uniqueFieldId: 'supabase_automation_matrix:brokerValue:subCategory',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'brokerValue',
            databaseTable: 'broker_value',
            foreignKeyReference: null,
            description: '"Sub Category" field for brokerValue. This is an optional field. Your entry must be an string data type.',
        },
            tags: {
            fieldNameFormats: {
    "frontend": "tags",
    "backend": "tags",
    "database": "tags",
    "pretty": "Tags",
    "component": "Tags",
    "kebab": "tags",
    "sqlFunctionRef": "p_tags",
    "RestAPI": "tags",
    "GraphQL": "tags",
    "custom": "tags"
} as const,
            name: 'tags',
            displayName: 'Tags',

            uniqueColumnId: 'supabase_automation_matrix:public:broker_value:tags',
            uniqueFieldId: 'supabase_automation_matrix:brokerValue:tags',

            dataType: 'string[]' as const,
            isRequired: false,
            maxLength: null,
            isArray: true,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXT_ARRAY' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 3,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string[]>,
            enumValues: null,
            entityName: 'brokerValue',
            databaseTable: 'broker_value',
            foreignKeyReference: null,
            description: '"Tags" field for brokerValue. This is an optional field. Your entry must be an string[] data type. You can enter one or more entries.',
        },
            comments: {
            fieldNameFormats: {
    "frontend": "comments",
    "backend": "comments",
    "database": "comments",
    "pretty": "Comments",
    "component": "Comments",
    "kebab": "comments",
    "sqlFunctionRef": "p_comments",
    "RestAPI": "comments",
    "GraphQL": "comments",
    "custom": "comments"
} as const,
            name: 'comments',
            displayName: 'Comments',

            uniqueColumnId: 'supabase_automation_matrix:public:broker_value:comments',
            uniqueFieldId: 'supabase_automation_matrix:brokerValue:comments',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'brokerValue',
            databaseTable: 'broker_value',
            foreignKeyReference: null,
            description: '"Comments" field for brokerValue. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:broker_value:created_at',
            uniqueFieldId: 'supabase_automation_matrix:brokerValue:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'brokerValue',
            databaseTable: 'broker_value',
            foreignKeyReference: null,
            description: '"Created At" field for brokerValue. This is a required field. Your entry must be an date data type.',
        },
            dataBrokerReference: {
    fieldNameFormats: {
    "frontend": "dataBrokerReference",
    "backend": "data_broker_reference",
    "database": "ref_data_broker",
    "pretty": "Data Broker Reference",
    "component": "DataBrokerReference",
    "kebab": "data-brokerReference",
    "sqlFunctionRef": "p_ref_data_broker",
    "RestAPI": "dataBrokerReference",
    "GraphQL": "dataBrokerReference",
    "custom": "dataBrokerReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:data_broker:id',
    uniqueFieldId: 'supabase_automation_matrix:dataBroker:id',
    name: 'dataBrokerReference',
    displayName: 'Data Broker Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['dataBroker'][]>,
    entityName: 'dataBroker',
    databaseTable: 'data_broker',
    relationshipMap: {data_broker: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "brokerValue",
    "backend": "broker_value",
    "database": "broker_value",
    "pretty": "Broker Value",
    "component": "BrokerValue",
    "kebab": "broker-value",
    "sqlFunctionRef": "p_broker_value",
    "RestAPI": "brokerValue",
    "GraphQL": "brokerValue",
    "custom": "brokerValue"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'data_broker', relatedTable: 'data_broker', relatedColumn: 'id', junctionTable: null }
        ],
    },
bucketStructures: {
        schemaType: 'table' as const,
        entityName: 'bucketStructures',
        displayName: 'Bucket Structures',
        uniqueTableId: 'supabase_automation_matrix:public:bucket_structures',
        uniqueEntityId: 'supabase_automation_matrix:bucketStructures',
        primaryKey: 'bucketId',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "bucketId"
    ],
    "database_fields": [
        "bucket_id"
    ],
    "where_template": {
        "bucket_id": null
    }
},
        displayFieldMetadata: { fieldName: 'bucketId', databaseFieldName: 'bucket_id' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            bucketId: {
            fieldNameFormats: {
    "frontend": "bucketId",
    "backend": "bucket_id",
    "database": "bucket_id",
    "pretty": "Bucket Id",
    "component": "BucketId",
    "kebab": "bucket-id",
    "sqlFunctionRef": "p_bucket_id",
    "RestAPI": "bucketId",
    "GraphQL": "bucketId",
    "custom": "bucketId"
} as const,
            name: 'bucketId',
            displayName: 'Bucket Id',

            uniqueColumnId: 'supabase_automation_matrix:public:bucket_structures:bucket_id',
            uniqueFieldId: 'supabase_automation_matrix:bucketStructures:bucketId',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'bucketStructures',
            databaseTable: 'bucket_structures',
            foreignKeyReference: null,
            description: '"Bucket Id" field for bucketStructures. This is a required field. Your entry must be an string data type.',
        },
            structure: {
            fieldNameFormats: {
    "frontend": "structure",
    "backend": "structure",
    "database": "structure",
    "pretty": "Structure",
    "component": "Structure",
    "kebab": "structure",
    "sqlFunctionRef": "p_structure",
    "RestAPI": "structure",
    "GraphQL": "structure",
    "custom": "structure"
} as const,
            name: 'structure',
            displayName: 'Structure',

            uniqueColumnId: 'supabase_automation_matrix:public:bucket_structures:structure',
            uniqueFieldId: 'supabase_automation_matrix:bucketStructures:structure',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'bucketStructures',
            databaseTable: 'bucket_structures',
            foreignKeyReference: null,
            description: '"Structure" field for bucketStructures. This is an optional field. Your entry must be an object data type.',
        },
            lastUpdated: {
            fieldNameFormats: {
    "frontend": "lastUpdated",
    "backend": "last_updated",
    "database": "last_updated",
    "pretty": "Last Updated",
    "component": "LastUpdated",
    "kebab": "last-updated",
    "sqlFunctionRef": "p_last_updated",
    "RestAPI": "lastUpdated",
    "GraphQL": "lastUpdated",
    "custom": "lastUpdated"
} as const,
            name: 'lastUpdated',
            displayName: 'Last Updated',

            uniqueColumnId: 'supabase_automation_matrix:public:bucket_structures:last_updated',
            uniqueFieldId: 'supabase_automation_matrix:bucketStructures:lastUpdated',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'bucketStructures',
            databaseTable: 'bucket_structures',
            foreignKeyReference: null,
            description: '"Last Updated" field for bucketStructures. This is an optional field. Your entry must be an date data type.',
        },
        },
        entityNameFormats: {
    "frontend": "bucketStructures",
    "backend": "bucket_structures",
    "database": "bucket_structures",
    "pretty": "Bucket Structures",
    "component": "BucketStructures",
    "kebab": "bucket-structures",
    "sqlFunctionRef": "p_bucket_structures",
    "RestAPI": "bucketStructures",
    "GraphQL": "bucketStructures",
    "custom": "bucketStructures"
},
        relationships: [
            
        ],
    },
bucketTreeStructures: {
        schemaType: 'table' as const,
        entityName: 'bucketTreeStructures',
        displayName: 'Bucket Tree Structures',
        uniqueTableId: 'supabase_automation_matrix:public:bucket_tree_structures',
        uniqueEntityId: 'supabase_automation_matrix:bucketTreeStructures',
        primaryKey: 'bucketId',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "bucketId"
    ],
    "database_fields": [
        "bucket_id"
    ],
    "where_template": {
        "bucket_id": null
    }
},
        displayFieldMetadata: { fieldName: 'bucketId', databaseFieldName: 'bucket_id' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            bucketId: {
            fieldNameFormats: {
    "frontend": "bucketId",
    "backend": "bucket_id",
    "database": "bucket_id",
    "pretty": "Bucket Id",
    "component": "BucketId",
    "kebab": "bucket-id",
    "sqlFunctionRef": "p_bucket_id",
    "RestAPI": "bucketId",
    "GraphQL": "bucketId",
    "custom": "bucketId"
} as const,
            name: 'bucketId',
            displayName: 'Bucket Id',

            uniqueColumnId: 'supabase_automation_matrix:public:bucket_tree_structures:bucket_id',
            uniqueFieldId: 'supabase_automation_matrix:bucketTreeStructures:bucketId',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'bucketTreeStructures',
            databaseTable: 'bucket_tree_structures',
            foreignKeyReference: null,
            description: '"Bucket Id" field for bucketTreeStructures. This is a required field. Your entry must be an string data type.',
        },
            treeStructure: {
            fieldNameFormats: {
    "frontend": "treeStructure",
    "backend": "tree_structure",
    "database": "tree_structure",
    "pretty": "Tree Structure",
    "component": "TreeStructure",
    "kebab": "tree-structure",
    "sqlFunctionRef": "p_tree_structure",
    "RestAPI": "treeStructure",
    "GraphQL": "treeStructure",
    "custom": "treeStructure"
} as const,
            name: 'treeStructure',
            displayName: 'Tree Structure',

            uniqueColumnId: 'supabase_automation_matrix:public:bucket_tree_structures:tree_structure',
            uniqueFieldId: 'supabase_automation_matrix:bucketTreeStructures:treeStructure',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'bucketTreeStructures',
            databaseTable: 'bucket_tree_structures',
            foreignKeyReference: null,
            description: '"Tree Structure" field for bucketTreeStructures. This is an optional field. Your entry must be an object data type.',
        },
            lastUpdated: {
            fieldNameFormats: {
    "frontend": "lastUpdated",
    "backend": "last_updated",
    "database": "last_updated",
    "pretty": "Last Updated",
    "component": "LastUpdated",
    "kebab": "last-updated",
    "sqlFunctionRef": "p_last_updated",
    "RestAPI": "lastUpdated",
    "GraphQL": "lastUpdated",
    "custom": "lastUpdated"
} as const,
            name: 'lastUpdated',
            displayName: 'Last Updated',

            uniqueColumnId: 'supabase_automation_matrix:public:bucket_tree_structures:last_updated',
            uniqueFieldId: 'supabase_automation_matrix:bucketTreeStructures:lastUpdated',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'bucketTreeStructures',
            databaseTable: 'bucket_tree_structures',
            foreignKeyReference: null,
            description: '"Last Updated" field for bucketTreeStructures. This is an optional field. Your entry must be an date data type.',
        },
        },
        entityNameFormats: {
    "frontend": "bucketTreeStructures",
    "backend": "bucket_tree_structures",
    "database": "bucket_tree_structures",
    "pretty": "Bucket Tree Structures",
    "component": "BucketTreeStructures",
    "kebab": "bucket-tree-structures",
    "sqlFunctionRef": "p_bucket_tree_structures",
    "RestAPI": "bucketTreeStructures",
    "GraphQL": "bucketTreeStructures",
    "custom": "bucketTreeStructures"
},
        relationships: [
            
        ],
    },
category: {
        schemaType: 'table' as const,
        entityName: 'category',
        displayName: 'Category',
        uniqueTableId: 'supabase_automation_matrix:public:category',
        uniqueEntityId: 'supabase_automation_matrix:category',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:category:id',
            uniqueFieldId: 'supabase_automation_matrix:category:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'category',
            databaseTable: 'category',
            foreignKeyReference: null,
            description: '"Id" field for category. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:category:name',
            uniqueFieldId: 'supabase_automation_matrix:category:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'category',
            databaseTable: 'category',
            foreignKeyReference: null,
            description: '"Name" field for category. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:category:description',
            uniqueFieldId: 'supabase_automation_matrix:category:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'category',
            databaseTable: 'category',
            foreignKeyReference: null,
            description: '"Description" field for category. This is an optional field. Your entry must be an string data type.',
        },
            slug: {
            fieldNameFormats: {
    "frontend": "slug",
    "backend": "slug",
    "database": "slug",
    "pretty": "Slug",
    "component": "Slug",
    "kebab": "slug",
    "sqlFunctionRef": "p_slug",
    "RestAPI": "slug",
    "GraphQL": "slug",
    "custom": "slug"
} as const,
            name: 'slug',
            displayName: 'Slug',

            uniqueColumnId: 'supabase_automation_matrix:public:category:slug',
            uniqueFieldId: 'supabase_automation_matrix:category:slug',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'category',
            databaseTable: 'category',
            foreignKeyReference: null,
            description: '"Slug" field for category. This is a required field. Your entry must be an string data type.',
        },
            icon: {
            fieldNameFormats: {
    "frontend": "icon",
    "backend": "icon",
    "database": "icon",
    "pretty": "Icon",
    "component": "Icon",
    "kebab": "icon",
    "sqlFunctionRef": "p_icon",
    "RestAPI": "icon",
    "GraphQL": "icon",
    "custom": "icon"
} as const,
            name: 'icon',
            displayName: 'Icon',

            uniqueColumnId: 'supabase_automation_matrix:public:category:icon',
            uniqueFieldId: 'supabase_automation_matrix:category:icon',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "Briefcase" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'category',
            databaseTable: 'category',
            foreignKeyReference: null,
            description: '"Icon" field for category. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:category:created_at',
            uniqueFieldId: 'supabase_automation_matrix:category:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'category',
            databaseTable: 'category',
            foreignKeyReference: null,
            description: '"Created At" field for category. This is a required field. Your entry must be an date data type.',
        },
            subcategoryInverse: {
    fieldNameFormats: {
    "frontend": "subcategoryInverse",
    "backend": "subcategory_Inverse",
    "database": "ifk_subcategory",
    "pretty": "Subcategory Inverse",
    "component": "SubcategoryInverse",
    "kebab": "subcategoryInverse",
    "sqlFunctionRef": "p_ifk_subcategory",
    "RestAPI": "subcategoryInverse",
    "GraphQL": "subcategoryInverse",
    "custom": "subcategoryInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:subcategory',
    uniqueEntityId: 'supabase_automation_matrix:subcategory',
    name: 'subcategoryInverse',
    displayName: 'Subcategory Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['subcategory'][]>,
    entityName: 'subcategory',
    databaseTable: 'subcategory',
},
        },
        entityNameFormats: {
    "frontend": "category",
    "backend": "category",
    "database": "category",
    "pretty": "Category",
    "component": "Category",
    "kebab": "category",
    "sqlFunctionRef": "p_category",
    "RestAPI": "category",
    "GraphQL": "category",
    "custom": "category"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'subcategory', relatedColumn: 'category_id', junctionTable: null }
        ],
    },
compiledRecipe: {
        schemaType: 'table' as const,
        entityName: 'compiledRecipe',
        displayName: 'Compiled Recipe',
        uniqueTableId: 'supabase_automation_matrix:public:compiled_recipe',
        uniqueEntityId: 'supabase_automation_matrix:compiledRecipe',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:compiled_recipe:id',
            uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'compiledRecipe',
            databaseTable: 'compiled_recipe',
            foreignKeyReference: null,
            description: '"Id" field for compiledRecipe. This is a required field. Your entry must be an uuid data type.',
        },
            recipeId: {
            fieldNameFormats: {
    "frontend": "recipeId",
    "backend": "recipe_id",
    "database": "recipe_id",
    "pretty": "Recipe Id",
    "component": "RecipeId",
    "kebab": "recipe-id",
    "sqlFunctionRef": "p_recipe_id",
    "RestAPI": "recipeId",
    "GraphQL": "recipeId",
    "custom": "recipeId"
} as const,
            name: 'recipeId',
            displayName: 'Recipe Id',

            uniqueColumnId: 'supabase_automation_matrix:public:compiled_recipe:recipe_id',
            uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:recipeId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'compiledRecipe',
            databaseTable: 'compiled_recipe',
            foreignKeyReference: {"table": "recipe", "column": "id", "entity": "recipe", "field": "id"},
            description: '"Recipe Id" field for compiledRecipe. This is an optional field. Your entry must be an uuid data type. This field is a reference to a recipe.',
        },
            version: {
            fieldNameFormats: {
    "frontend": "version",
    "backend": "version",
    "database": "version",
    "pretty": "Version",
    "component": "Version",
    "kebab": "version",
    "sqlFunctionRef": "p_version",
    "RestAPI": "version",
    "GraphQL": "version",
    "custom": "version"
} as const,
            name: 'version',
            displayName: 'Version',

            uniqueColumnId: 'supabase_automation_matrix:public:compiled_recipe:version',
            uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:version',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'compiledRecipe',
            databaseTable: 'compiled_recipe',
            foreignKeyReference: null,
            description: '"Version" field for compiledRecipe. This is an optional field. Your entry must be an number data type.',
        },
            compiledRecipe: {
            fieldNameFormats: {
    "frontend": "compiledRecipe",
    "backend": "compiled_recipe",
    "database": "compiled_recipe",
    "pretty": "Compiled Recipe",
    "component": "CompiledRecipe",
    "kebab": "compiled-recipe",
    "sqlFunctionRef": "p_compiled_recipe",
    "RestAPI": "compiledRecipe",
    "GraphQL": "compiledRecipe",
    "custom": "compiledRecipe"
} as const,
            name: 'compiledRecipe',
            displayName: 'Compiled Recipe',

            uniqueColumnId: 'supabase_automation_matrix:public:compiled_recipe:compiled_recipe',
            uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:compiledRecipe',

            dataType: 'object' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'compiledRecipe',
            databaseTable: 'compiled_recipe',
            foreignKeyReference: null,
            description: '"Compiled Recipe" field for compiledRecipe. This is a required field. Your entry must be an object data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:compiled_recipe:created_at',
            uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'compiledRecipe',
            databaseTable: 'compiled_recipe',
            foreignKeyReference: null,
            description: '"Created At" field for compiledRecipe. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:compiled_recipe:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TIME_PICKER' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'compiledRecipe',
            databaseTable: 'compiled_recipe',
            foreignKeyReference: null,
            description: '"Updated At" field for compiledRecipe. This is a required field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:compiled_recipe:user_id',
            uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'compiledRecipe',
            databaseTable: 'compiled_recipe',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for compiledRecipe. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:compiled_recipe:is_public',
            uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:isPublic',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'compiledRecipe',
            databaseTable: 'compiled_recipe',
            foreignKeyReference: null,
            description: '"Is Public" field for compiledRecipe. This is a required field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:compiled_recipe:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'compiledRecipe',
            databaseTable: 'compiled_recipe',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for compiledRecipe. This is a required field. Your entry must be an boolean data type.',
        },
            recipeReference: {
    fieldNameFormats: {
    "frontend": "recipeReference",
    "backend": "recipe_reference",
    "database": "ref_recipe",
    "pretty": "Recipe Reference",
    "component": "RecipeReference",
    "kebab": "recipeReference",
    "sqlFunctionRef": "p_ref_recipe",
    "RestAPI": "recipeReference",
    "GraphQL": "recipeReference",
    "custom": "recipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:recipe:id',
    name: 'recipeReference',
    displayName: 'Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
    entityName: 'recipe',
    databaseTable: 'recipe',
    relationshipMap: {recipe: 'id'},
},
            appletInverse: {
    fieldNameFormats: {
    "frontend": "appletInverse",
    "backend": "applet_Inverse",
    "database": "ifk_applet",
    "pretty": "Applet Inverse",
    "component": "AppletInverse",
    "kebab": "appletInverse",
    "sqlFunctionRef": "p_ifk_applet",
    "RestAPI": "appletInverse",
    "GraphQL": "appletInverse",
    "custom": "appletInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:applet',
    uniqueEntityId: 'supabase_automation_matrix:applet',
    name: 'appletInverse',
    displayName: 'Applet Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['applet'][]>,
    entityName: 'applet',
    databaseTable: 'applet',
},
            customAppletConfigsInverse: {
    fieldNameFormats: {
    "frontend": "customAppletConfigsInverse",
    "backend": "custom_applet_configs_Inverse",
    "database": "ifk_custom_applet_configs",
    "pretty": "Custom Applet Configs Inverse",
    "component": "CustomAppletConfigsInverse",
    "kebab": "custom-applet-configsInverse",
    "sqlFunctionRef": "p_ifk_custom_applet_configs",
    "RestAPI": "customAppletConfigsInverse",
    "GraphQL": "customAppletConfigsInverse",
    "custom": "customAppletConfigsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:custom_applet_configs',
    uniqueEntityId: 'supabase_automation_matrix:customAppletConfigs',
    name: 'customAppletConfigsInverse',
    displayName: 'Custom Applet Configs Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['customAppletConfigs'][]>,
    entityName: 'customAppletConfigs',
    databaseTable: 'custom_applet_configs',
},
        },
        entityNameFormats: {
    "frontend": "compiledRecipe",
    "backend": "compiled_recipe",
    "database": "compiled_recipe",
    "pretty": "Compiled Recipe",
    "component": "CompiledRecipe",
    "kebab": "compiled-recipe",
    "sqlFunctionRef": "p_compiled_recipe",
    "RestAPI": "compiledRecipe",
    "GraphQL": "compiledRecipe",
    "custom": "compiledRecipe"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'recipe_id', relatedTable: 'recipe', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'applet', relatedColumn: 'compiled_recipe_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'custom_applet_configs', relatedColumn: 'compiled_recipe_id', junctionTable: null }
        ],
    },
componentGroups: {
        schemaType: 'table' as const,
        entityName: 'componentGroups',
        displayName: 'Component Groups',
        uniqueTableId: 'supabase_automation_matrix:public:component_groups',
        uniqueEntityId: 'supabase_automation_matrix:componentGroups',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'label', databaseFieldName: 'label' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:id',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Id" field for componentGroups. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:created_at',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Created At" field for componentGroups. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Updated At" field for componentGroups. This is an optional field. Your entry must be an date data type.',
        },
            label: {
            fieldNameFormats: {
    "frontend": "label",
    "backend": "label",
    "database": "label",
    "pretty": "Label",
    "component": "Label",
    "kebab": "label",
    "sqlFunctionRef": "p_label",
    "RestAPI": "label",
    "GraphQL": "label",
    "custom": "label"
} as const,
            name: 'label',
            displayName: 'Label',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:label',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:label',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Label" field for componentGroups. This is a required field. Your entry must be an string data type.',
        },
            shortLabel: {
            fieldNameFormats: {
    "frontend": "shortLabel",
    "backend": "short_label",
    "database": "short_label",
    "pretty": "Short Label",
    "component": "ShortLabel",
    "kebab": "short-label",
    "sqlFunctionRef": "p_short_label",
    "RestAPI": "shortLabel",
    "GraphQL": "shortLabel",
    "custom": "shortLabel"
} as const,
            name: 'shortLabel',
            displayName: 'Short Label',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:short_label',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:shortLabel',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Short Label" field for componentGroups. This is an optional field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:description',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Description" field for componentGroups. This is an optional field. Your entry must be an string data type.',
        },
            hideDescription: {
            fieldNameFormats: {
    "frontend": "hideDescription",
    "backend": "hide_description",
    "database": "hide_description",
    "pretty": "Hide Description",
    "component": "HideDescription",
    "kebab": "hide-description",
    "sqlFunctionRef": "p_hide_description",
    "RestAPI": "hideDescription",
    "GraphQL": "hideDescription",
    "custom": "hideDescription"
} as const,
            name: 'hideDescription',
            displayName: 'Hide Description',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:hide_description',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:hideDescription',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Hide Description" field for componentGroups. This is an optional field. Your entry must be an boolean data type.',
        },
            helpText: {
            fieldNameFormats: {
    "frontend": "helpText",
    "backend": "help_text",
    "database": "help_text",
    "pretty": "Help Text",
    "component": "HelpText",
    "kebab": "help-text",
    "sqlFunctionRef": "p_help_text",
    "RestAPI": "helpText",
    "GraphQL": "helpText",
    "custom": "helpText"
} as const,
            name: 'helpText',
            displayName: 'Help Text',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:help_text',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:helpText',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Help Text" field for componentGroups. This is an optional field. Your entry must be an string data type.',
        },
            fields: {
            fieldNameFormats: {
    "frontend": "fields",
    "backend": "fields",
    "database": "fields",
    "pretty": "Fields",
    "component": "Fields",
    "kebab": "fields",
    "sqlFunctionRef": "p_fields",
    "RestAPI": "fields",
    "GraphQL": "fields",
    "custom": "fields"
} as const,
            name: 'fields',
            displayName: 'Fields',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:fields',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:fields',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "[]" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Fields" field for componentGroups. This is an optional field. Your entry must be an object data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:user_id',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for componentGroups. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:is_public',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Is Public" field for componentGroups. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for componentGroups. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:component_groups:public_read',
            uniqueFieldId: 'supabase_automation_matrix:componentGroups:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'componentGroups',
            databaseTable: 'component_groups',
            foreignKeyReference: null,
            description: '"Public Read" field for componentGroups. This is an optional field. Your entry must be an boolean data type.',
        },
            appletContainersInverse: {
    fieldNameFormats: {
    "frontend": "appletContainersInverse",
    "backend": "applet_containers_Inverse",
    "database": "ifk_applet_containers",
    "pretty": "Applet Containers Inverse",
    "component": "AppletContainersInverse",
    "kebab": "applet-containersInverse",
    "sqlFunctionRef": "p_ifk_applet_containers",
    "RestAPI": "appletContainersInverse",
    "GraphQL": "appletContainersInverse",
    "custom": "appletContainersInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:applet_containers',
    uniqueEntityId: 'supabase_automation_matrix:appletContainers',
    name: 'appletContainersInverse',
    displayName: 'Applet Containers Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['appletContainers'][]>,
    entityName: 'appletContainers',
    databaseTable: 'applet_containers',
},
            containerFieldsInverse: {
    fieldNameFormats: {
    "frontend": "containerFieldsInverse",
    "backend": "container_fields_Inverse",
    "database": "ifk_container_fields",
    "pretty": "Container Fields Inverse",
    "component": "ContainerFieldsInverse",
    "kebab": "container-fieldsInverse",
    "sqlFunctionRef": "p_ifk_container_fields",
    "RestAPI": "containerFieldsInverse",
    "GraphQL": "containerFieldsInverse",
    "custom": "containerFieldsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:container_fields',
    uniqueEntityId: 'supabase_automation_matrix:containerFields',
    name: 'containerFieldsInverse',
    displayName: 'Container Fields Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['containerFields'][]>,
    entityName: 'containerFields',
    databaseTable: 'container_fields',
},
        },
        entityNameFormats: {
    "frontend": "componentGroups",
    "backend": "component_groups",
    "database": "component_groups",
    "pretty": "Component Groups",
    "component": "ComponentGroups",
    "kebab": "component-groups",
    "sqlFunctionRef": "p_component_groups",
    "RestAPI": "componentGroups",
    "GraphQL": "componentGroups",
    "custom": "componentGroups"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'applet_containers', relatedColumn: 'container_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'container_fields', relatedColumn: 'container_id', junctionTable: null }
        ],
    },
containerFields: {
        schemaType: 'table' as const,
        entityName: 'containerFields',
        displayName: 'Container Fields',
        uniqueTableId: 'supabase_automation_matrix:public:container_fields',
        uniqueEntityId: 'supabase_automation_matrix:containerFields',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:container_fields:id',
            uniqueFieldId: 'supabase_automation_matrix:containerFields:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'containerFields',
            databaseTable: 'container_fields',
            foreignKeyReference: null,
            description: '"Id" field for containerFields. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:container_fields:created_at',
            uniqueFieldId: 'supabase_automation_matrix:containerFields:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'containerFields',
            databaseTable: 'container_fields',
            foreignKeyReference: null,
            description: '"Created At" field for containerFields. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:container_fields:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:containerFields:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'containerFields',
            databaseTable: 'container_fields',
            foreignKeyReference: null,
            description: '"Updated At" field for containerFields. This is an optional field. Your entry must be an date data type.',
        },
            fieldId: {
            fieldNameFormats: {
    "frontend": "fieldId",
    "backend": "field_id",
    "database": "field_id",
    "pretty": "Field Id",
    "component": "FieldId",
    "kebab": "field-id",
    "sqlFunctionRef": "p_field_id",
    "RestAPI": "fieldId",
    "GraphQL": "fieldId",
    "custom": "fieldId"
} as const,
            name: 'fieldId',
            displayName: 'Field Id',

            uniqueColumnId: 'supabase_automation_matrix:public:container_fields:field_id',
            uniqueFieldId: 'supabase_automation_matrix:containerFields:fieldId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'containerFields',
            databaseTable: 'container_fields',
            foreignKeyReference: {"table": "field_components", "column": "id", "entity": "fieldComponents", "field": "id"},
            description: '"Field Id" field for containerFields. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a fieldComponents.',
        },
            containerId: {
            fieldNameFormats: {
    "frontend": "containerId",
    "backend": "container_id",
    "database": "container_id",
    "pretty": "Container Id",
    "component": "ContainerId",
    "kebab": "container-id",
    "sqlFunctionRef": "p_container_id",
    "RestAPI": "containerId",
    "GraphQL": "containerId",
    "custom": "containerId"
} as const,
            name: 'containerId',
            displayName: 'Container Id',

            uniqueColumnId: 'supabase_automation_matrix:public:container_fields:container_id',
            uniqueFieldId: 'supabase_automation_matrix:containerFields:containerId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'containerFields',
            databaseTable: 'container_fields',
            foreignKeyReference: {"table": "component_groups", "column": "id", "entity": "componentGroups", "field": "id"},
            description: '"Container Id" field for containerFields. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a componentGroups.',
        },
            order: {
            fieldNameFormats: {
    "frontend": "order",
    "backend": "order",
    "database": "order",
    "pretty": "Order",
    "component": "Order",
    "kebab": "order",
    "sqlFunctionRef": "p_order",
    "RestAPI": "order",
    "GraphQL": "order",
    "custom": "order"
} as const,
            name: 'order',
            displayName: 'Order',

            uniqueColumnId: 'supabase_automation_matrix:public:container_fields:order',
            uniqueFieldId: 'supabase_automation_matrix:containerFields:order',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "1" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'containerFields',
            databaseTable: 'container_fields',
            foreignKeyReference: null,
            description: '"Order" field for containerFields. This is a required field. Your entry must be an number data type. This must be a unique value.',
        },
            componentGroupsReference: {
    fieldNameFormats: {
    "frontend": "componentGroupsReference",
    "backend": "component_groups_reference",
    "database": "ref_component_groups",
    "pretty": "Component Groups Reference",
    "component": "ComponentGroupsReference",
    "kebab": "component-groupsReference",
    "sqlFunctionRef": "p_ref_component_groups",
    "RestAPI": "componentGroupsReference",
    "GraphQL": "componentGroupsReference",
    "custom": "componentGroupsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:component_groups:id',
    uniqueFieldId: 'supabase_automation_matrix:componentGroups:id',
    name: 'componentGroupsReference',
    displayName: 'Component Groups Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['componentGroups'][]>,
    entityName: 'componentGroups',
    databaseTable: 'component_groups',
    relationshipMap: {component_groups: 'id', field_components: 'id'},
},
            fieldComponentsReference: {
    fieldNameFormats: {
    "frontend": "fieldComponentsReference",
    "backend": "field_components_reference",
    "database": "ref_field_components",
    "pretty": "Field Components Reference",
    "component": "FieldComponentsReference",
    "kebab": "field-componentsReference",
    "sqlFunctionRef": "p_ref_field_components",
    "RestAPI": "fieldComponentsReference",
    "GraphQL": "fieldComponentsReference",
    "custom": "fieldComponentsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:field_components:id',
    uniqueFieldId: 'supabase_automation_matrix:fieldComponents:id',
    name: 'fieldComponentsReference',
    displayName: 'Field Components Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['fieldComponents'][]>,
    entityName: 'fieldComponents',
    databaseTable: 'field_components',
    relationshipMap: {component_groups: 'id', field_components: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "containerFields",
    "backend": "container_fields",
    "database": "container_fields",
    "pretty": "Container Fields",
    "component": "ContainerFields",
    "kebab": "container-fields",
    "sqlFunctionRef": "p_container_fields",
    "RestAPI": "containerFields",
    "GraphQL": "containerFields",
    "custom": "containerFields"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'container_id', relatedTable: 'component_groups', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'field_id', relatedTable: 'field_components', relatedColumn: 'id', junctionTable: null }
        ],
    },
conversation: {
        schemaType: 'table' as const,
        entityName: 'conversation',
        displayName: 'Conversation',
        uniqueTableId: 'supabase_automation_matrix:public:conversation',
        uniqueEntityId: 'supabase_automation_matrix:conversation',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'label', databaseFieldName: 'label' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:conversation:id',
            uniqueFieldId: 'supabase_automation_matrix:conversation:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'conversation',
            databaseTable: 'conversation',
            foreignKeyReference: null,
            description: '"Id" field for conversation. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:conversation:created_at',
            uniqueFieldId: 'supabase_automation_matrix:conversation:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'conversation',
            databaseTable: 'conversation',
            foreignKeyReference: null,
            description: '"Created At" field for conversation. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:conversation:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:conversation:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TIME_PICKER' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'conversation',
            databaseTable: 'conversation',
            foreignKeyReference: null,
            description: '"Updated At" field for conversation. This is an optional field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:conversation:user_id',
            uniqueFieldId: 'supabase_automation_matrix:conversation:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'conversation',
            databaseTable: 'conversation',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for conversation. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:conversation:metadata',
            uniqueFieldId: 'supabase_automation_matrix:conversation:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'conversation',
            databaseTable: 'conversation',
            foreignKeyReference: null,
            description: '"Metadata" field for conversation. This is an optional field. Your entry must be an object data type.',
        },
            label: {
            fieldNameFormats: {
    "frontend": "label",
    "backend": "label",
    "database": "label",
    "pretty": "Label",
    "component": "Label",
    "kebab": "label",
    "sqlFunctionRef": "p_label",
    "RestAPI": "label",
    "GraphQL": "label",
    "custom": "label"
} as const,
            name: 'label',
            displayName: 'Label',

            uniqueColumnId: 'supabase_automation_matrix:public:conversation:label',
            uniqueFieldId: 'supabase_automation_matrix:conversation:label',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "New Conversation" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'conversation',
            databaseTable: 'conversation',
            foreignKeyReference: null,
            description: '"Label" field for conversation. This is an optional field. Your entry must be an string data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:conversation:is_public',
            uniqueFieldId: 'supabase_automation_matrix:conversation:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'conversation',
            databaseTable: 'conversation',
            foreignKeyReference: null,
            description: '"Is Public" field for conversation. This is an optional field. Your entry must be an boolean data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:conversation:description',
            uniqueFieldId: 'supabase_automation_matrix:conversation:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'conversation',
            databaseTable: 'conversation',
            foreignKeyReference: null,
            description: '"Description" field for conversation. This is an optional field. Your entry must be an string data type.',
        },
            keywords: {
            fieldNameFormats: {
    "frontend": "keywords",
    "backend": "keywords",
    "database": "keywords",
    "pretty": "Keywords",
    "component": "Keywords",
    "kebab": "keywords",
    "sqlFunctionRef": "p_keywords",
    "RestAPI": "keywords",
    "GraphQL": "keywords",
    "custom": "keywords"
} as const,
            name: 'keywords',
            displayName: 'Keywords',

            uniqueColumnId: 'supabase_automation_matrix:public:conversation:keywords',
            uniqueFieldId: 'supabase_automation_matrix:conversation:keywords',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'conversation',
            databaseTable: 'conversation',
            foreignKeyReference: null,
            description: '"Keywords" field for conversation. This is an optional field. Your entry must be an object data type.',
        },
            group: {
            fieldNameFormats: {
    "frontend": "group",
    "backend": "group",
    "database": "group",
    "pretty": "Group",
    "component": "Group",
    "kebab": "group",
    "sqlFunctionRef": "p_group",
    "RestAPI": "group",
    "GraphQL": "group",
    "custom": "group"
} as const,
            name: 'group',
            displayName: 'Group',

            uniqueColumnId: 'supabase_automation_matrix:public:conversation:group',
            uniqueFieldId: 'supabase_automation_matrix:conversation:group',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'conversation',
            databaseTable: 'conversation',
            foreignKeyReference: null,
            description: '"Group" field for conversation. This is an optional field. Your entry must be an string data type.',
        },
            messageInverse: {
    fieldNameFormats: {
    "frontend": "messageInverse",
    "backend": "message_Inverse",
    "database": "ifk_message",
    "pretty": "Message Inverse",
    "component": "MessageInverse",
    "kebab": "messageInverse",
    "sqlFunctionRef": "p_ifk_message",
    "RestAPI": "messageInverse",
    "GraphQL": "messageInverse",
    "custom": "messageInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:message',
    uniqueEntityId: 'supabase_automation_matrix:message',
    name: 'messageInverse',
    displayName: 'Message Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['message'][]>,
    entityName: 'message',
    databaseTable: 'message',
},
        },
        entityNameFormats: {
    "frontend": "conversation",
    "backend": "conversation",
    "database": "conversation",
    "pretty": "Conversation",
    "component": "Conversation",
    "kebab": "conversation",
    "sqlFunctionRef": "p_conversation",
    "RestAPI": "conversation",
    "GraphQL": "conversation",
    "custom": "conversation"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'message', relatedColumn: 'conversation_id', junctionTable: null }
        ],
    },
customAppConfigs: {
        schemaType: 'table' as const,
        entityName: 'customAppConfigs',
        displayName: 'Custom App Configs',
        uniqueTableId: 'supabase_automation_matrix:public:custom_app_configs',
        uniqueEntityId: 'supabase_automation_matrix:customAppConfigs',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:id',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Id" field for customAppConfigs. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:created_at',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Created At" field for customAppConfigs. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Updated At" field for customAppConfigs. This is an optional field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:user_id',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for customAppConfigs. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:is_public',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Is Public" field for customAppConfigs. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for customAppConfigs. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:public_read',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Public Read" field for customAppConfigs. This is an optional field. Your entry must be an boolean data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:name',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Name" field for customAppConfigs. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:description',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Description" field for customAppConfigs. This is an optional field. Your entry must be an string data type.',
        },
            slug: {
            fieldNameFormats: {
    "frontend": "slug",
    "backend": "slug",
    "database": "slug",
    "pretty": "Slug",
    "component": "Slug",
    "kebab": "slug",
    "sqlFunctionRef": "p_slug",
    "RestAPI": "slug",
    "GraphQL": "slug",
    "custom": "slug"
} as const,
            name: 'slug',
            displayName: 'Slug',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:slug',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:slug',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Slug" field for customAppConfigs. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            mainAppIcon: {
            fieldNameFormats: {
    "frontend": "mainAppIcon",
    "backend": "main_app_icon",
    "database": "main_app_icon",
    "pretty": "Main App Icon",
    "component": "MainAppIcon",
    "kebab": "main-app-icon",
    "sqlFunctionRef": "p_main_app_icon",
    "RestAPI": "mainAppIcon",
    "GraphQL": "mainAppIcon",
    "custom": "mainAppIcon"
} as const,
            name: 'mainAppIcon',
            displayName: 'Main App Icon',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:main_app_icon',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:mainAppIcon',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "LayoutTemplate" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Main App Icon" field for customAppConfigs. This is an optional field. Your entry must be an string data type.',
        },
            mainAppSubmitIcon: {
            fieldNameFormats: {
    "frontend": "mainAppSubmitIcon",
    "backend": "main_app_submit_icon",
    "database": "main_app_submit_icon",
    "pretty": "Main App Submit Icon",
    "component": "MainAppSubmitIcon",
    "kebab": "main-app-submit-icon",
    "sqlFunctionRef": "p_main_app_submit_icon",
    "RestAPI": "mainAppSubmitIcon",
    "GraphQL": "mainAppSubmitIcon",
    "custom": "mainAppSubmitIcon"
} as const,
            name: 'mainAppSubmitIcon',
            displayName: 'Main App Submit Icon',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:main_app_submit_icon',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:mainAppSubmitIcon',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "Search" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Main App Submit Icon" field for customAppConfigs. This is an optional field. Your entry must be an string data type.',
        },
            creator: {
            fieldNameFormats: {
    "frontend": "creator",
    "backend": "creator",
    "database": "creator",
    "pretty": "Creator",
    "component": "Creator",
    "kebab": "creator",
    "sqlFunctionRef": "p_creator",
    "RestAPI": "creator",
    "GraphQL": "creator",
    "custom": "creator"
} as const,
            name: 'creator',
            displayName: 'Creator',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:creator',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:creator',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Creator" field for customAppConfigs. This is an optional field. Your entry must be an string data type.',
        },
            primaryColor: {
            fieldNameFormats: {
    "frontend": "primaryColor",
    "backend": "primary_color",
    "database": "primary_color",
    "pretty": "Primary Color",
    "component": "PrimaryColor",
    "kebab": "primary-color",
    "sqlFunctionRef": "p_primary_color",
    "RestAPI": "primaryColor",
    "GraphQL": "primaryColor",
    "custom": "primaryColor"
} as const,
            name: 'primaryColor',
            displayName: 'Primary Color',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:primary_color',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:primaryColor',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "gray" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Primary Color" field for customAppConfigs. This is an optional field. Your entry must be an string data type.',
        },
            accentColor: {
            fieldNameFormats: {
    "frontend": "accentColor",
    "backend": "accent_color",
    "database": "accent_color",
    "pretty": "Accent Color",
    "component": "AccentColor",
    "kebab": "accent-color",
    "sqlFunctionRef": "p_accent_color",
    "RestAPI": "accentColor",
    "GraphQL": "accentColor",
    "custom": "accentColor"
} as const,
            name: 'accentColor',
            displayName: 'Accent Color',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:accent_color',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:accentColor',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "rose" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Accent Color" field for customAppConfigs. This is an optional field. Your entry must be an string data type.',
        },
            appletList: {
            fieldNameFormats: {
    "frontend": "appletList",
    "backend": "applet_list",
    "database": "applet_list",
    "pretty": "Applet List",
    "component": "AppletList",
    "kebab": "applet-list",
    "sqlFunctionRef": "p_applet_list",
    "RestAPI": "appletList",
    "GraphQL": "appletList",
    "custom": "appletList"
} as const,
            name: 'appletList',
            displayName: 'Applet List',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:applet_list',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:appletList',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Applet List" field for customAppConfigs. This is an optional field. Your entry must be an object data type.',
        },
            extraButtons: {
            fieldNameFormats: {
    "frontend": "extraButtons",
    "backend": "extra_buttons",
    "database": "extra_buttons",
    "pretty": "Extra Buttons",
    "component": "ExtraButtons",
    "kebab": "extra-buttons",
    "sqlFunctionRef": "p_extra_buttons",
    "RestAPI": "extraButtons",
    "GraphQL": "extraButtons",
    "custom": "extraButtons"
} as const,
            name: 'extraButtons',
            displayName: 'Extra Buttons',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:extra_buttons',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:extraButtons',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Extra Buttons" field for customAppConfigs. This is an optional field. Your entry must be an object data type.',
        },
            layoutType: {
            fieldNameFormats: {
    "frontend": "layoutType",
    "backend": "layout_type",
    "database": "layout_type",
    "pretty": "Layout Type",
    "component": "LayoutType",
    "kebab": "layout-type",
    "sqlFunctionRef": "p_layout_type",
    "RestAPI": "layoutType",
    "GraphQL": "layoutType",
    "custom": "layoutType"
} as const,
            name: 'layoutType',
            displayName: 'Layout Type',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:layout_type',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:layoutType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "open" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Layout Type" field for customAppConfigs. This is an optional field. Your entry must be an string data type.',
        },
            imageUrl: {
            fieldNameFormats: {
    "frontend": "imageUrl",
    "backend": "image_url",
    "database": "image_url",
    "pretty": "Image Url",
    "component": "ImageUrl",
    "kebab": "image-url",
    "sqlFunctionRef": "p_image_url",
    "RestAPI": "imageUrl",
    "GraphQL": "imageUrl",
    "custom": "imageUrl"
} as const,
            name: 'imageUrl',
            displayName: 'Image Url',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:image_url',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:imageUrl',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"Image Url" field for customAppConfigs. This is an optional field. Your entry must be an string data type.',
        },
            appDataContext: {
            fieldNameFormats: {
    "frontend": "appDataContext",
    "backend": "app_data_context",
    "database": "app_data_context",
    "pretty": "App Data Context",
    "component": "AppDataContext",
    "kebab": "app-data-context",
    "sqlFunctionRef": "p_app_data_context",
    "RestAPI": "appDataContext",
    "GraphQL": "appDataContext",
    "custom": "appDataContext"
} as const,
            name: 'appDataContext',
            displayName: 'App Data Context',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_app_configs:app_data_context',
            uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:appDataContext',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'customAppConfigs',
            databaseTable: 'custom_app_configs',
            foreignKeyReference: null,
            description: '"App Data Context" field for customAppConfigs. This is an optional field. Your entry must be an object data type.',
        },
            customAppletConfigsInverse: {
    fieldNameFormats: {
    "frontend": "customAppletConfigsInverse",
    "backend": "custom_applet_configs_Inverse",
    "database": "ifk_custom_applet_configs",
    "pretty": "Custom Applet Configs Inverse",
    "component": "CustomAppletConfigsInverse",
    "kebab": "custom-applet-configsInverse",
    "sqlFunctionRef": "p_ifk_custom_applet_configs",
    "RestAPI": "customAppletConfigsInverse",
    "GraphQL": "customAppletConfigsInverse",
    "custom": "customAppletConfigsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:custom_applet_configs',
    uniqueEntityId: 'supabase_automation_matrix:customAppletConfigs',
    name: 'customAppletConfigsInverse',
    displayName: 'Custom Applet Configs Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['customAppletConfigs'][]>,
    entityName: 'customAppletConfigs',
    databaseTable: 'custom_applet_configs',
},
        },
        entityNameFormats: {
    "frontend": "customAppConfigs",
    "backend": "custom_app_configs",
    "database": "custom_app_configs",
    "pretty": "Custom App Configs",
    "component": "CustomAppConfigs",
    "kebab": "custom-app-configs",
    "sqlFunctionRef": "p_custom_app_configs",
    "RestAPI": "customAppConfigs",
    "GraphQL": "customAppConfigs",
    "custom": "customAppConfigs"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'custom_applet_configs', relatedColumn: 'app_id', junctionTable: null }
        ],
    },
customAppletConfigs: {
        schemaType: 'table' as const,
        entityName: 'customAppletConfigs',
        displayName: 'Custom Applet Configs',
        uniqueTableId: 'supabase_automation_matrix:public:custom_applet_configs',
        uniqueEntityId: 'supabase_automation_matrix:customAppletConfigs',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:id',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Id" field for customAppletConfigs. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:created_at',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Created At" field for customAppletConfigs. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Updated At" field for customAppletConfigs. This is an optional field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:user_id',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for customAppletConfigs. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:is_public',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Is Public" field for customAppletConfigs. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for customAppletConfigs. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:public_read',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Public Read" field for customAppletConfigs. This is an optional field. Your entry must be an boolean data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:name',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Name" field for customAppletConfigs. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:description',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Description" field for customAppletConfigs. This is an optional field. Your entry must be an string data type.',
        },
            slug: {
            fieldNameFormats: {
    "frontend": "slug",
    "backend": "slug",
    "database": "slug",
    "pretty": "Slug",
    "component": "Slug",
    "kebab": "slug",
    "sqlFunctionRef": "p_slug",
    "RestAPI": "slug",
    "GraphQL": "slug",
    "custom": "slug"
} as const,
            name: 'slug',
            displayName: 'Slug',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:slug',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:slug',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Slug" field for customAppletConfigs. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            appletIcon: {
            fieldNameFormats: {
    "frontend": "appletIcon",
    "backend": "applet_icon",
    "database": "applet_icon",
    "pretty": "Applet Icon",
    "component": "AppletIcon",
    "kebab": "applet-icon",
    "sqlFunctionRef": "p_applet_icon",
    "RestAPI": "appletIcon",
    "GraphQL": "appletIcon",
    "custom": "appletIcon"
} as const,
            name: 'appletIcon',
            displayName: 'Applet Icon',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:applet_icon',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:appletIcon',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Applet Icon" field for customAppletConfigs. This is an optional field. Your entry must be an string data type.',
        },
            appletSubmitText: {
            fieldNameFormats: {
    "frontend": "appletSubmitText",
    "backend": "applet_submit_text",
    "database": "applet_submit_text",
    "pretty": "Applet Submit Text",
    "component": "AppletSubmitText",
    "kebab": "applet-submit-text",
    "sqlFunctionRef": "p_applet_submit_text",
    "RestAPI": "appletSubmitText",
    "GraphQL": "appletSubmitText",
    "custom": "appletSubmitText"
} as const,
            name: 'appletSubmitText',
            displayName: 'Applet Submit Text',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:applet_submit_text',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:appletSubmitText',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Applet Submit Text" field for customAppletConfigs. This is an optional field. Your entry must be an string data type.',
        },
            creator: {
            fieldNameFormats: {
    "frontend": "creator",
    "backend": "creator",
    "database": "creator",
    "pretty": "Creator",
    "component": "Creator",
    "kebab": "creator",
    "sqlFunctionRef": "p_creator",
    "RestAPI": "creator",
    "GraphQL": "creator",
    "custom": "creator"
} as const,
            name: 'creator',
            displayName: 'Creator',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:creator',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:creator',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Creator" field for customAppletConfigs. This is an optional field. Your entry must be an string data type.',
        },
            primaryColor: {
            fieldNameFormats: {
    "frontend": "primaryColor",
    "backend": "primary_color",
    "database": "primary_color",
    "pretty": "Primary Color",
    "component": "PrimaryColor",
    "kebab": "primary-color",
    "sqlFunctionRef": "p_primary_color",
    "RestAPI": "primaryColor",
    "GraphQL": "primaryColor",
    "custom": "primaryColor"
} as const,
            name: 'primaryColor',
            displayName: 'Primary Color',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:primary_color',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:primaryColor',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Primary Color" field for customAppletConfigs. This is an optional field. Your entry must be an string data type.',
        },
            accentColor: {
            fieldNameFormats: {
    "frontend": "accentColor",
    "backend": "accent_color",
    "database": "accent_color",
    "pretty": "Accent Color",
    "component": "AccentColor",
    "kebab": "accent-color",
    "sqlFunctionRef": "p_accent_color",
    "RestAPI": "accentColor",
    "GraphQL": "accentColor",
    "custom": "accentColor"
} as const,
            name: 'accentColor',
            displayName: 'Accent Color',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:accent_color',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:accentColor',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Accent Color" field for customAppletConfigs. This is an optional field. Your entry must be an string data type.',
        },
            layoutType: {
            fieldNameFormats: {
    "frontend": "layoutType",
    "backend": "layout_type",
    "database": "layout_type",
    "pretty": "Layout Type",
    "component": "LayoutType",
    "kebab": "layout-type",
    "sqlFunctionRef": "p_layout_type",
    "RestAPI": "layoutType",
    "GraphQL": "layoutType",
    "custom": "layoutType"
} as const,
            name: 'layoutType',
            displayName: 'Layout Type',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:layout_type',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:layoutType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Layout Type" field for customAppletConfigs. This is an optional field. Your entry must be an string data type.',
        },
            containers: {
            fieldNameFormats: {
    "frontend": "containers",
    "backend": "containers",
    "database": "containers",
    "pretty": "Containers",
    "component": "Containers",
    "kebab": "containers",
    "sqlFunctionRef": "p_containers",
    "RestAPI": "containers",
    "GraphQL": "containers",
    "custom": "containers"
} as const,
            name: 'containers',
            displayName: 'Containers',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:containers',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:containers',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Containers" field for customAppletConfigs. This is an optional field. Your entry must be an object data type.',
        },
            dataSourceConfig: {
            fieldNameFormats: {
    "frontend": "dataSourceConfig",
    "backend": "data_source_config",
    "database": "data_source_config",
    "pretty": "Data Source Config",
    "component": "DataSourceConfig",
    "kebab": "data-source-config",
    "sqlFunctionRef": "p_data_source_config",
    "RestAPI": "dataSourceConfig",
    "GraphQL": "dataSourceConfig",
    "custom": "dataSourceConfig"
} as const,
            name: 'dataSourceConfig',
            displayName: 'Data Source Config',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:data_source_config',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:dataSourceConfig',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Data Source Config" field for customAppletConfigs. This is an optional field. Your entry must be an object data type.',
        },
            resultComponentConfig: {
            fieldNameFormats: {
    "frontend": "resultComponentConfig",
    "backend": "result_component_config",
    "database": "result_component_config",
    "pretty": "Result Component Config",
    "component": "ResultComponentConfig",
    "kebab": "result-component-config",
    "sqlFunctionRef": "p_result_component_config",
    "RestAPI": "resultComponentConfig",
    "GraphQL": "resultComponentConfig",
    "custom": "resultComponentConfig"
} as const,
            name: 'resultComponentConfig',
            displayName: 'Result Component Config',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:result_component_config',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:resultComponentConfig',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Result Component Config" field for customAppletConfigs. This is an optional field. Your entry must be an object data type.',
        },
            nextStepConfig: {
            fieldNameFormats: {
    "frontend": "nextStepConfig",
    "backend": "next_step_config",
    "database": "next_step_config",
    "pretty": "Next Step Config",
    "component": "NextStepConfig",
    "kebab": "next-step-config",
    "sqlFunctionRef": "p_next_step_config",
    "RestAPI": "nextStepConfig",
    "GraphQL": "nextStepConfig",
    "custom": "nextStepConfig"
} as const,
            name: 'nextStepConfig',
            displayName: 'Next Step Config',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:next_step_config',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:nextStepConfig',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Next Step Config" field for customAppletConfigs. This is an optional field. Your entry must be an object data type.',
        },
            compiledRecipeId: {
            fieldNameFormats: {
    "frontend": "compiledRecipeId",
    "backend": "compiled_recipe_id",
    "database": "compiled_recipe_id",
    "pretty": "Compiled Recipe Id",
    "component": "CompiledRecipeId",
    "kebab": "compiled-recipe-id",
    "sqlFunctionRef": "p_compiled_recipe_id",
    "RestAPI": "compiledRecipeId",
    "GraphQL": "compiledRecipeId",
    "custom": "compiledRecipeId"
} as const,
            name: 'compiledRecipeId',
            displayName: 'Compiled Recipe Id',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:compiled_recipe_id',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:compiledRecipeId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: {"table": "compiled_recipe", "column": "id", "entity": "compiledRecipe", "field": "id"},
            description: '"Compiled Recipe Id" field for customAppletConfigs. This is an optional field. Your entry must be an uuid data type. This field is a reference to a compiledRecipe.',
        },
            subcategoryId: {
            fieldNameFormats: {
    "frontend": "subcategoryId",
    "backend": "subcategory_id",
    "database": "subcategory_id",
    "pretty": "Subcategory Id",
    "component": "SubcategoryId",
    "kebab": "subcategory-id",
    "sqlFunctionRef": "p_subcategory_id",
    "RestAPI": "subcategoryId",
    "GraphQL": "subcategoryId",
    "custom": "subcategoryId"
} as const,
            name: 'subcategoryId',
            displayName: 'Subcategory Id',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:subcategory_id',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:subcategoryId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: {"table": "subcategory", "column": "id", "entity": "subcategory", "field": "id"},
            description: '"Subcategory Id" field for customAppletConfigs. This is an optional field. Your entry must be an uuid data type. This field is a reference to a subcategory.',
        },
            imageUrl: {
            fieldNameFormats: {
    "frontend": "imageUrl",
    "backend": "image_url",
    "database": "image_url",
    "pretty": "Image Url",
    "component": "ImageUrl",
    "kebab": "image-url",
    "sqlFunctionRef": "p_image_url",
    "RestAPI": "imageUrl",
    "GraphQL": "imageUrl",
    "custom": "imageUrl"
} as const,
            name: 'imageUrl',
            displayName: 'Image Url',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:image_url',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:imageUrl',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Image Url" field for customAppletConfigs. This is an optional field. Your entry must be an string data type.',
        },
            appId: {
            fieldNameFormats: {
    "frontend": "appId",
    "backend": "app_id",
    "database": "app_id",
    "pretty": "App Id",
    "component": "AppId",
    "kebab": "app-id",
    "sqlFunctionRef": "p_app_id",
    "RestAPI": "appId",
    "GraphQL": "appId",
    "custom": "appId"
} as const,
            name: 'appId',
            displayName: 'App Id',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:app_id',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:appId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: {"table": "custom_app_configs", "column": "id", "entity": "customAppConfigs", "field": "id"},
            description: '"App Id" field for customAppletConfigs. This is an optional field. Your entry must be an uuid data type. This field is a reference to a customAppConfigs.',
        },
            brokerMap: {
            fieldNameFormats: {
    "frontend": "brokerMap",
    "backend": "broker_map",
    "database": "broker_map",
    "pretty": "Broker Map",
    "component": "BrokerMap",
    "kebab": "broker-map",
    "sqlFunctionRef": "p_broker_map",
    "RestAPI": "brokerMap",
    "GraphQL": "brokerMap",
    "custom": "brokerMap"
} as const,
            name: 'brokerMap',
            displayName: 'Broker Map',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:broker_map',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:brokerMap',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Broker Map" field for customAppletConfigs. This is an optional field. Your entry must be an object data type.',
        },
            overviewLabel: {
            fieldNameFormats: {
    "frontend": "overviewLabel",
    "backend": "overview_label",
    "database": "overview_label",
    "pretty": "Overview Label",
    "component": "OverviewLabel",
    "kebab": "overview-label",
    "sqlFunctionRef": "p_overview_label",
    "RestAPI": "overviewLabel",
    "GraphQL": "overviewLabel",
    "custom": "overviewLabel"
} as const,
            name: 'overviewLabel',
            displayName: 'Overview Label',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:overview_label',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:overviewLabel',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Overview Label" field for customAppletConfigs. This is an optional field. Your entry must be an string data type.',
        },
            dataDestinationConfig: {
            fieldNameFormats: {
    "frontend": "dataDestinationConfig",
    "backend": "data_destination_config",
    "database": "data_destination_config",
    "pretty": "Data Destination Config",
    "component": "DataDestinationConfig",
    "kebab": "data-destination-config",
    "sqlFunctionRef": "p_data_destination_config",
    "RestAPI": "dataDestinationConfig",
    "GraphQL": "dataDestinationConfig",
    "custom": "dataDestinationConfig"
} as const,
            name: 'dataDestinationConfig',
            displayName: 'Data Destination Config',

            uniqueColumnId: 'supabase_automation_matrix:public:custom_applet_configs:data_destination_config',
            uniqueFieldId: 'supabase_automation_matrix:customAppletConfigs:dataDestinationConfig',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'customAppletConfigs',
            databaseTable: 'custom_applet_configs',
            foreignKeyReference: null,
            description: '"Data Destination Config" field for customAppletConfigs. This is an optional field. Your entry must be an object data type.',
        },
            customAppConfigsReference: {
    fieldNameFormats: {
    "frontend": "customAppConfigsReference",
    "backend": "custom_app_configs_reference",
    "database": "ref_custom_app_configs",
    "pretty": "Custom App Configs Reference",
    "component": "CustomAppConfigsReference",
    "kebab": "custom-app-configsReference",
    "sqlFunctionRef": "p_ref_custom_app_configs",
    "RestAPI": "customAppConfigsReference",
    "GraphQL": "customAppConfigsReference",
    "custom": "customAppConfigsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:custom_app_configs:id',
    uniqueFieldId: 'supabase_automation_matrix:customAppConfigs:id',
    name: 'customAppConfigsReference',
    displayName: 'Custom App Configs Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['customAppConfigs'][]>,
    entityName: 'customAppConfigs',
    databaseTable: 'custom_app_configs',
    relationshipMap: {custom_app_configs: 'id', compiled_recipe: 'id', subcategory: 'id'},
},
            compiledRecipeReference: {
    fieldNameFormats: {
    "frontend": "compiledRecipeReference",
    "backend": "compiled_recipe_reference",
    "database": "ref_compiled_recipe",
    "pretty": "Compiled Recipe Reference",
    "component": "CompiledRecipeReference",
    "kebab": "compiled-recipeReference",
    "sqlFunctionRef": "p_ref_compiled_recipe",
    "RestAPI": "compiledRecipeReference",
    "GraphQL": "compiledRecipeReference",
    "custom": "compiledRecipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:compiled_recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:compiledRecipe:id',
    name: 'compiledRecipeReference',
    displayName: 'Compiled Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['compiledRecipe'][]>,
    entityName: 'compiledRecipe',
    databaseTable: 'compiled_recipe',
    relationshipMap: {custom_app_configs: 'id', compiled_recipe: 'id', subcategory: 'id'},
},
            subcategoryReference: {
    fieldNameFormats: {
    "frontend": "subcategoryReference",
    "backend": "subcategory_reference",
    "database": "ref_subcategory",
    "pretty": "Subcategory Reference",
    "component": "SubcategoryReference",
    "kebab": "subcategoryReference",
    "sqlFunctionRef": "p_ref_subcategory",
    "RestAPI": "subcategoryReference",
    "GraphQL": "subcategoryReference",
    "custom": "subcategoryReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:subcategory:id',
    uniqueFieldId: 'supabase_automation_matrix:subcategory:id',
    name: 'subcategoryReference',
    displayName: 'Subcategory Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['subcategory'][]>,
    entityName: 'subcategory',
    databaseTable: 'subcategory',
    relationshipMap: {custom_app_configs: 'id', compiled_recipe: 'id', subcategory: 'id'},
},
            appletContainersInverse: {
    fieldNameFormats: {
    "frontend": "appletContainersInverse",
    "backend": "applet_containers_Inverse",
    "database": "ifk_applet_containers",
    "pretty": "Applet Containers Inverse",
    "component": "AppletContainersInverse",
    "kebab": "applet-containersInverse",
    "sqlFunctionRef": "p_ifk_applet_containers",
    "RestAPI": "appletContainersInverse",
    "GraphQL": "appletContainersInverse",
    "custom": "appletContainersInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:applet_containers',
    uniqueEntityId: 'supabase_automation_matrix:appletContainers',
    name: 'appletContainersInverse',
    displayName: 'Applet Containers Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['appletContainers'][]>,
    entityName: 'appletContainers',
    databaseTable: 'applet_containers',
},
        },
        entityNameFormats: {
    "frontend": "customAppletConfigs",
    "backend": "custom_applet_configs",
    "database": "custom_applet_configs",
    "pretty": "Custom Applet Configs",
    "component": "CustomAppletConfigs",
    "kebab": "custom-applet-configs",
    "sqlFunctionRef": "p_custom_applet_configs",
    "RestAPI": "customAppletConfigs",
    "GraphQL": "customAppletConfigs",
    "custom": "customAppletConfigs"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'app_id', relatedTable: 'custom_app_configs', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'compiled_recipe_id', relatedTable: 'compiled_recipe', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'subcategory_id', relatedTable: 'subcategory', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'applet_containers', relatedColumn: 'applet_id', junctionTable: null }
        ],
    },
dataBroker: {
        schemaType: 'table' as const,
        entityName: 'dataBroker',
        displayName: 'Data Broker',
        uniqueTableId: 'supabase_automation_matrix:public:data_broker',
        uniqueEntityId: 'supabase_automation_matrix:dataBroker',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:id',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Id" field for dataBroker. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:name',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Name" field for dataBroker. This is a required field. Your entry must be an string data type.',
        },
            dataType: {
            fieldNameFormats: {
    "frontend": "dataType",
    "backend": "data_type",
    "database": "data_type",
    "pretty": "Data Type",
    "component": "DataType",
    "kebab": "data-type",
    "sqlFunctionRef": "p_data_type",
    "RestAPI": "dataType",
    "GraphQL": "dataType",
    "custom": "dataType"
} as const,
            name: 'dataType',
            displayName: 'Data Type',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:data_type',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:dataType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "str" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Bool",
            "value": "bool"
        },
        {
            "label": "Dict",
            "value": "dict"
        },
        {
            "label": "Float",
            "value": "float"
        },
        {
            "label": "Int",
            "value": "int"
        },
        {
            "label": "List",
            "value": "list"
        },
        {
            "label": "Str",
            "value": "str"
        },
        {
            "label": "Url",
            "value": "url"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"bool" | "dict" | "float" | "int" | "list" | "str" | "url" | undefined>,
            enumValues: ['bool', 'dict', 'float', 'int', 'list', 'str', 'url'] as const,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Data Type" field for dataBroker. This is an optional field. Your entry must be an string data type.',
        },
            defaultValue: {
            fieldNameFormats: {
    "frontend": "defaultValue",
    "backend": "default_value",
    "database": "default_value",
    "pretty": "Default Value",
    "component": "DefaultValue",
    "kebab": "default-value",
    "sqlFunctionRef": "p_default_value",
    "RestAPI": "defaultValue",
    "GraphQL": "defaultValue",
    "custom": "defaultValue"
} as const,
            name: 'defaultValue',
            displayName: 'Default Value',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:default_value',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:defaultValue',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Default Value" field for dataBroker. This is an optional field. Your entry must be an string data type.',
        },
            inputComponent: {
            fieldNameFormats: {
    "frontend": "inputComponent",
    "backend": "input_component",
    "database": "input_component",
    "pretty": "Input Component",
    "component": "InputComponent",
    "kebab": "input-component",
    "sqlFunctionRef": "p_input_component",
    "RestAPI": "inputComponent",
    "GraphQL": "inputComponent",
    "custom": "inputComponent"
} as const,
            name: 'inputComponent',
            displayName: 'Input Component',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:input_component',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:inputComponent',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: {"table": "data_input_component", "column": "id", "entity": "dataInputComponent", "field": "id"},
            description: '"Input Component" field for dataBroker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a dataInputComponent.',
        },
            color: {
            fieldNameFormats: {
    "frontend": "color",
    "backend": "color",
    "database": "color",
    "pretty": "Color",
    "component": "Color",
    "kebab": "color",
    "sqlFunctionRef": "p_color",
    "RestAPI": "color",
    "GraphQL": "color",
    "custom": "color"
} as const,
            name: 'color',
            displayName: 'Color',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:color',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:color',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "blue" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Amber",
            "value": "amber"
        },
        {
            "label": "Blue",
            "value": "blue"
        },
        {
            "label": "Cyan",
            "value": "cyan"
        },
        {
            "label": "Emerald",
            "value": "emerald"
        },
        {
            "label": "Fuchsia",
            "value": "fuchsia"
        },
        {
            "label": "Gray",
            "value": "gray"
        },
        {
            "label": "Green",
            "value": "green"
        },
        {
            "label": "Indigo",
            "value": "indigo"
        },
        {
            "label": "Lime",
            "value": "lime"
        },
        {
            "label": "Neutral",
            "value": "neutral"
        },
        {
            "label": "Orange",
            "value": "orange"
        },
        {
            "label": "Pink",
            "value": "pink"
        },
        {
            "label": "Purple",
            "value": "purple"
        },
        {
            "label": "Red",
            "value": "red"
        },
        {
            "label": "Rose",
            "value": "rose"
        },
        {
            "label": "Sky",
            "value": "sky"
        },
        {
            "label": "Slate",
            "value": "slate"
        },
        {
            "label": "Stone",
            "value": "stone"
        },
        {
            "label": "Teal",
            "value": "teal"
        },
        {
            "label": "Violet",
            "value": "violet"
        },
        {
            "label": "Yellow",
            "value": "yellow"
        },
        {
            "label": "Zinc",
            "value": "zinc"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"amber" | "blue" | "cyan" | "emerald" | "fuchsia" | "gray" | "green" | "indigo" | "lime" | "neutral" | "orange" | "pink" | "purple" | "red" | "rose" | "sky" | "slate" | "stone" | "teal" | "violet" | "yellow" | "zinc" | undefined>,
            enumValues: ['amber', 'blue', 'cyan', 'emerald', 'fuchsia', 'gray', 'green', 'indigo', 'lime', 'neutral', 'orange', 'pink', 'purple', 'red', 'rose', 'sky', 'slate', 'stone', 'teal', 'violet', 'yellow', 'zinc'] as const,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Color" field for dataBroker. This is an optional field. Your entry must be an string data type.',
        },
            outputComponent: {
            fieldNameFormats: {
    "frontend": "outputComponent",
    "backend": "output_component",
    "database": "output_component",
    "pretty": "Output Component",
    "component": "OutputComponent",
    "kebab": "output-component",
    "sqlFunctionRef": "p_output_component",
    "RestAPI": "outputComponent",
    "GraphQL": "outputComponent",
    "custom": "outputComponent"
} as const,
            name: 'outputComponent',
            displayName: 'Output Component',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:output_component',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:outputComponent',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: {"table": "data_output_component", "column": "id", "entity": "dataOutputComponent", "field": "id"},
            description: '"Output Component" field for dataBroker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a dataOutputComponent.',
        },
            fieldComponentId: {
            fieldNameFormats: {
    "frontend": "fieldComponentId",
    "backend": "field_component_id",
    "database": "field_component_id",
    "pretty": "Field Component Id",
    "component": "FieldComponentId",
    "kebab": "field-component-id",
    "sqlFunctionRef": "p_field_component_id",
    "RestAPI": "fieldComponentId",
    "GraphQL": "fieldComponentId",
    "custom": "fieldComponentId"
} as const,
            name: 'fieldComponentId',
            displayName: 'Field Component Id',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:field_component_id',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:fieldComponentId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: {"table": "field_components", "column": "id", "entity": "fieldComponents", "field": "id"},
            description: '"Field Component Id" field for dataBroker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a fieldComponents.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:user_id',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for dataBroker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:created_at',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Created At" field for dataBroker. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Updated At" field for dataBroker. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:is_public',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Is Public" field for dataBroker. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for dataBroker. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:public_read',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Public Read" field for dataBroker. This is an optional field. Your entry must be an boolean data type.',
        },
            defaultScope: {
            fieldNameFormats: {
    "frontend": "defaultScope",
    "backend": "default_scope",
    "database": "default_scope",
    "pretty": "Default Scope",
    "component": "DefaultScope",
    "kebab": "default-scope",
    "sqlFunctionRef": "p_default_scope",
    "RestAPI": "defaultScope",
    "GraphQL": "defaultScope",
    "custom": "defaultScope"
} as const,
            name: 'defaultScope',
            displayName: 'Default Scope',

            uniqueColumnId: 'supabase_automation_matrix:public:data_broker:default_scope',
            uniqueFieldId: 'supabase_automation_matrix:dataBroker:defaultScope',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataBroker',
            databaseTable: 'data_broker',
            foreignKeyReference: null,
            description: '"Default Scope" field for dataBroker. This is an optional field. Your entry must be an string data type.',
        },
            dataInputComponentReference: {
    fieldNameFormats: {
    "frontend": "dataInputComponentReference",
    "backend": "data_input_component_reference",
    "database": "ref_data_input_component",
    "pretty": "Data Input Component Reference",
    "component": "DataInputComponentReference",
    "kebab": "data-input-componentReference",
    "sqlFunctionRef": "p_ref_data_input_component",
    "RestAPI": "dataInputComponentReference",
    "GraphQL": "dataInputComponentReference",
    "custom": "dataInputComponentReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:data_input_component:id',
    uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:id',
    name: 'dataInputComponentReference',
    displayName: 'Data Input Component Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['dataInputComponent'][]>,
    entityName: 'dataInputComponent',
    databaseTable: 'data_input_component',
    relationshipMap: {data_input_component: 'id', field_components: 'id', data_output_component: 'id'},
},
            fieldComponentsReference: {
    fieldNameFormats: {
    "frontend": "fieldComponentsReference",
    "backend": "field_components_reference",
    "database": "ref_field_components",
    "pretty": "Field Components Reference",
    "component": "FieldComponentsReference",
    "kebab": "field-componentsReference",
    "sqlFunctionRef": "p_ref_field_components",
    "RestAPI": "fieldComponentsReference",
    "GraphQL": "fieldComponentsReference",
    "custom": "fieldComponentsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:field_components:id',
    uniqueFieldId: 'supabase_automation_matrix:fieldComponents:id',
    name: 'fieldComponentsReference',
    displayName: 'Field Components Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['fieldComponents'][]>,
    entityName: 'fieldComponents',
    databaseTable: 'field_components',
    relationshipMap: {data_input_component: 'id', field_components: 'id', data_output_component: 'id'},
},
            dataOutputComponentReference: {
    fieldNameFormats: {
    "frontend": "dataOutputComponentReference",
    "backend": "data_output_component_reference",
    "database": "ref_data_output_component",
    "pretty": "Data Output Component Reference",
    "component": "DataOutputComponentReference",
    "kebab": "data-output-componentReference",
    "sqlFunctionRef": "p_ref_data_output_component",
    "RestAPI": "dataOutputComponentReference",
    "GraphQL": "dataOutputComponentReference",
    "custom": "dataOutputComponentReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:data_output_component:id',
    uniqueFieldId: 'supabase_automation_matrix:dataOutputComponent:id',
    name: 'dataOutputComponentReference',
    displayName: 'Data Output Component Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['dataOutputComponent'][]>,
    entityName: 'dataOutputComponent',
    databaseTable: 'data_output_component',
    relationshipMap: {data_input_component: 'id', field_components: 'id', data_output_component: 'id'},
},
            brokerValueInverse: {
    fieldNameFormats: {
    "frontend": "brokerValueInverse",
    "backend": "broker_value_Inverse",
    "database": "ifk_broker_value",
    "pretty": "Broker Value Inverse",
    "component": "BrokerValueInverse",
    "kebab": "broker-valueInverse",
    "sqlFunctionRef": "p_ifk_broker_value",
    "RestAPI": "brokerValueInverse",
    "GraphQL": "brokerValueInverse",
    "custom": "brokerValueInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:broker_value',
    uniqueEntityId: 'supabase_automation_matrix:brokerValue',
    name: 'brokerValueInverse',
    displayName: 'Broker Value Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['brokerValue'][]>,
    entityName: 'brokerValue',
    databaseTable: 'broker_value',
},
            messageBrokerInverse: {
    fieldNameFormats: {
    "frontend": "messageBrokerInverse",
    "backend": "message_broker_Inverse",
    "database": "ifk_message_broker",
    "pretty": "Message Broker Inverse",
    "component": "MessageBrokerInverse",
    "kebab": "message-brokerInverse",
    "sqlFunctionRef": "p_ifk_message_broker",
    "RestAPI": "messageBrokerInverse",
    "GraphQL": "messageBrokerInverse",
    "custom": "messageBrokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:message_broker',
    uniqueEntityId: 'supabase_automation_matrix:messageBroker',
    name: 'messageBrokerInverse',
    displayName: 'Message Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['messageBroker'][]>,
    entityName: 'messageBroker',
    databaseTable: 'message_broker',
},
            registeredFunctionInverse: {
    fieldNameFormats: {
    "frontend": "registeredFunctionInverse",
    "backend": "registered_function_Inverse",
    "database": "ifk_registered_function",
    "pretty": "Registered Function Inverse",
    "component": "RegisteredFunctionInverse",
    "kebab": "registered-functionInverse",
    "sqlFunctionRef": "p_ifk_registered_function",
    "RestAPI": "registeredFunctionInverse",
    "GraphQL": "registeredFunctionInverse",
    "custom": "registeredFunctionInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:registered_function',
    uniqueEntityId: 'supabase_automation_matrix:registeredFunction',
    name: 'registeredFunctionInverse',
    displayName: 'Registered Function Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['registeredFunction'][]>,
    entityName: 'registeredFunction',
    databaseTable: 'registered_function',
},
        },
        entityNameFormats: {
    "frontend": "dataBroker",
    "backend": "data_broker",
    "database": "data_broker",
    "pretty": "Data Broker",
    "component": "DataBroker",
    "kebab": "data-broker",
    "sqlFunctionRef": "p_data_broker",
    "RestAPI": "dataBroker",
    "GraphQL": "dataBroker",
    "custom": "dataBroker"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'input_component', relatedTable: 'data_input_component', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'field_component_id', relatedTable: 'field_components', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'output_component', relatedTable: 'data_output_component', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'broker_value', relatedColumn: 'data_broker', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'message_broker', relatedColumn: 'broker_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'registered_function', relatedColumn: 'return_broker', junctionTable: null }
        ],
    },
dataInputComponent: {
        schemaType: 'table' as const,
        entityName: 'dataInputComponent',
        displayName: 'Data Input Component',
        uniqueTableId: 'supabase_automation_matrix:public:data_input_component',
        uniqueEntityId: 'supabase_automation_matrix:dataInputComponent',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:id',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Id" field for dataInputComponent. This is a required field. Your entry must be an uuid data type.',
        },
            options: {
            fieldNameFormats: {
    "frontend": "options",
    "backend": "options",
    "database": "options",
    "pretty": "Options",
    "component": "Options",
    "kebab": "options",
    "sqlFunctionRef": "p_options",
    "RestAPI": "options",
    "GraphQL": "options",
    "custom": "options"
} as const,
            name: 'options',
            displayName: 'Options',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:options',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:options',

            dataType: 'string[]' as const,
            isRequired: false,
            maxLength: null,
            isArray: true,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXT_ARRAY' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 3,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string[]>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Options" field for dataInputComponent. This is an optional field. Your entry must be an string[] data type. You can enter one or more entries.',
        },
            includeOther: {
            fieldNameFormats: {
    "frontend": "includeOther",
    "backend": "include_other",
    "database": "include_other",
    "pretty": "Include Other",
    "component": "IncludeOther",
    "kebab": "include-other",
    "sqlFunctionRef": "p_include_other",
    "RestAPI": "includeOther",
    "GraphQL": "includeOther",
    "custom": "includeOther"
} as const,
            name: 'includeOther',
            displayName: 'Include Other',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:include_other',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:includeOther',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Include Other" field for dataInputComponent. This is an optional field. Your entry must be an boolean data type.',
        },
            min: {
            fieldNameFormats: {
    "frontend": "min",
    "backend": "min",
    "database": "min",
    "pretty": "Min",
    "component": "Min",
    "kebab": "min",
    "sqlFunctionRef": "p_min",
    "RestAPI": "min",
    "GraphQL": "min",
    "custom": "min"
} as const,
            name: 'min',
            displayName: 'Min',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:min',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:min',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "real",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Min" field for dataInputComponent. This is an optional field. Your entry must be an number data type.',
        },
            max: {
            fieldNameFormats: {
    "frontend": "max",
    "backend": "max",
    "database": "max",
    "pretty": "Max",
    "component": "Max",
    "kebab": "max",
    "sqlFunctionRef": "p_max",
    "RestAPI": "max",
    "GraphQL": "max",
    "custom": "max"
} as const,
            name: 'max',
            displayName: 'Max',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:max',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:max',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "real",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Max" field for dataInputComponent. This is an optional field. Your entry must be an number data type.',
        },
            step: {
            fieldNameFormats: {
    "frontend": "step",
    "backend": "step",
    "database": "step",
    "pretty": "Step",
    "component": "Step",
    "kebab": "step",
    "sqlFunctionRef": "p_step",
    "RestAPI": "step",
    "GraphQL": "step",
    "custom": "step"
} as const,
            name: 'step',
            displayName: 'Step',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:step',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:step',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Step" field for dataInputComponent. This is an optional field. Your entry must be an number data type.',
        },
            acceptableFiletypes: {
            fieldNameFormats: {
    "frontend": "acceptableFiletypes",
    "backend": "acceptable_filetypes",
    "database": "acceptable_filetypes",
    "pretty": "Acceptable Filetypes",
    "component": "AcceptableFiletypes",
    "kebab": "acceptable-filetypes",
    "sqlFunctionRef": "p_acceptable_filetypes",
    "RestAPI": "acceptableFiletypes",
    "GraphQL": "acceptableFiletypes",
    "custom": "acceptableFiletypes"
} as const,
            name: 'acceptableFiletypes',
            displayName: 'Acceptable Filetypes',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:acceptable_filetypes',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:acceptableFiletypes',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Acceptable Filetypes" field for dataInputComponent. This is an optional field. Your entry must be an object data type.',
        },
            src: {
            fieldNameFormats: {
    "frontend": "src",
    "backend": "src",
    "database": "src",
    "pretty": "Src",
    "component": "Src",
    "kebab": "src",
    "sqlFunctionRef": "p_src",
    "RestAPI": "src",
    "GraphQL": "src",
    "custom": "src"
} as const,
            name: 'src',
            displayName: 'Src',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:src',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:src',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Src" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            colorOverrides: {
            fieldNameFormats: {
    "frontend": "colorOverrides",
    "backend": "color_overrides",
    "database": "color_overrides",
    "pretty": "Color Overrides",
    "component": "ColorOverrides",
    "kebab": "color-overrides",
    "sqlFunctionRef": "p_color_overrides",
    "RestAPI": "colorOverrides",
    "GraphQL": "colorOverrides",
    "custom": "colorOverrides"
} as const,
            name: 'colorOverrides',
            displayName: 'Color Overrides',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:color_overrides',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:colorOverrides',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Color Overrides" field for dataInputComponent. This is an optional field. Your entry must be an object data type.',
        },
            additionalParams: {
            fieldNameFormats: {
    "frontend": "additionalParams",
    "backend": "additional_params",
    "database": "additional_params",
    "pretty": "Additional Params",
    "component": "AdditionalParams",
    "kebab": "additional-params",
    "sqlFunctionRef": "p_additional_params",
    "RestAPI": "additionalParams",
    "GraphQL": "additionalParams",
    "custom": "additionalParams"
} as const,
            name: 'additionalParams',
            displayName: 'Additional Params',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:additional_params',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:additionalParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Additional Params" field for dataInputComponent. This is an optional field. Your entry must be an object data type.',
        },
            subComponent: {
            fieldNameFormats: {
    "frontend": "subComponent",
    "backend": "sub_component",
    "database": "sub_component",
    "pretty": "Sub Component",
    "component": "SubComponent",
    "kebab": "sub-component",
    "sqlFunctionRef": "p_sub_component",
    "RestAPI": "subComponent",
    "GraphQL": "subComponent",
    "custom": "subComponent"
} as const,
            name: 'subComponent',
            displayName: 'Sub Component',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:sub_component',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:subComponent',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Sub Component" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            component: {
            fieldNameFormats: {
    "frontend": "component",
    "backend": "component",
    "database": "component",
    "pretty": "Component",
    "component": "Component",
    "kebab": "component",
    "sqlFunctionRef": "p_component",
    "RestAPI": "component",
    "GraphQL": "component",
    "custom": "component"
} as const,
            name: 'component',
            displayName: 'Component',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:component',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:component',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "BrokerTextarea" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Accordion Selected",
            "value": "Accordion_Selected"
        },
        {
            "label": "Accordion View",
            "value": "Accordion_View"
        },
        {
            "label": "Accordion View Add Edit",
            "value": "Accordion_View_Add_Edit"
        },
        {
            "label": "Broker Checkbox",
            "value": "BrokerCheckbox"
        },
        {
            "label": "Broker Color Picker",
            "value": "BrokerColorPicker"
        },
        {
            "label": "Broker Custom Input",
            "value": "BrokerCustomInput"
        },
        {
            "label": "Broker Custom Select",
            "value": "BrokerCustomSelect"
        },
        {
            "label": "Broker Input",
            "value": "BrokerInput"
        },
        {
            "label": "Broker Number Input",
            "value": "BrokerNumberInput"
        },
        {
            "label": "Broker Number Picker",
            "value": "BrokerNumberPicker"
        },
        {
            "label": "Broker Radio",
            "value": "BrokerRadio"
        },
        {
            "label": "Broker Radio Group",
            "value": "BrokerRadioGroup"
        },
        {
            "label": "Broker Select",
            "value": "BrokerSelect"
        },
        {
            "label": "Broker Slider",
            "value": "BrokerSlider"
        },
        {
            "label": "Broker Switch",
            "value": "BrokerSwitch"
        },
        {
            "label": "Broker Tailwind Color Picker",
            "value": "BrokerTailwindColorPicker"
        },
        {
            "label": "Broker Text Array Input",
            "value": "BrokerTextArrayInput"
        },
        {
            "label": "Broker Textarea",
            "value": "BrokerTextarea"
        },
        {
            "label": "Broker Textarea Grow",
            "value": "BrokerTextareaGrow"
        },
        {
            "label": "Button",
            "value": "Button"
        },
        {
            "label": "Checkbox",
            "value": "Checkbox"
        },
        {
            "label": "Chip",
            "value": "Chip"
        },
        {
            "label": "Color Picker",
            "value": "Color_Picker"
        },
        {
            "label": "Date Picker",
            "value": "Date_Picker"
        },
        {
            "label": "Drawer",
            "value": "Drawer"
        },
        {
            "label": "File Upload",
            "value": "File_Upload"
        },
        {
            "label": "Image Display",
            "value": "Image_Display"
        },
        {
            "label": "Input",
            "value": "Input"
        },
        {
            "label": "Json Editor",
            "value": "Json_Editor"
        },
        {
            "label": "Menu",
            "value": "Menu"
        },
        {
            "label": "Number Input",
            "value": "Number_Input"
        },
        {
            "label": "Phone Input",
            "value": "Phone_Input"
        },
        {
            "label": "Radio Group",
            "value": "Radio_Group"
        },
        {
            "label": "Relational Button",
            "value": "Relational_Button"
        },
        {
            "label": "Relational Input",
            "value": "Relational_Input"
        },
        {
            "label": "Search Input",
            "value": "Search_Input"
        },
        {
            "label": "Select",
            "value": "Select"
        },
        {
            "label": "Sheet",
            "value": "Sheet"
        },
        {
            "label": "Slider",
            "value": "Slider"
        },
        {
            "label": "Star Rating",
            "value": "Star_Rating"
        },
        {
            "label": "Switch",
            "value": "Switch"
        },
        {
            "label": "Textarea",
            "value": "Textarea"
        },
        {
            "label": "Time Picker",
            "value": "Time_Picker"
        },
        {
            "label": "U U I D Array",
            "value": "UUID_Array"
        },
        {
            "label": "U U I D Field",
            "value": "UUID_Field"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"Accordion_Selected" | "Accordion_View" | "Accordion_View_Add_Edit" | "BrokerCheckbox" | "BrokerColorPicker" | "BrokerCustomInput" | "BrokerCustomSelect" | "BrokerInput" | "BrokerNumberInput" | "BrokerNumberPicker" | "BrokerRadio" | "BrokerRadioGroup" | "BrokerSelect" | "BrokerSlider" | "BrokerSwitch" | "BrokerTailwindColorPicker" | "BrokerTextArrayInput" | "BrokerTextarea" | "BrokerTextareaGrow" | "Button" | "Checkbox" | "Chip" | "Color_Picker" | "Date_Picker" | "Drawer" | "File_Upload" | "Image_Display" | "Input" | "Json_Editor" | "Menu" | "Number_Input" | "Phone_Input" | "Radio_Group" | "Relational_Button" | "Relational_Input" | "Search_Input" | "Select" | "Sheet" | "Slider" | "Star_Rating" | "Switch" | "Textarea" | "Time_Picker" | "UUID_Array" | "UUID_Field" | undefined>,
            enumValues: ['Accordion_Selected', 'Accordion_View', 'Accordion_View_Add_Edit', 'BrokerCheckbox', 'BrokerColorPicker', 'BrokerCustomInput', 'BrokerCustomSelect', 'BrokerInput', 'BrokerNumberInput', 'BrokerNumberPicker', 'BrokerRadio', 'BrokerRadioGroup', 'BrokerSelect', 'BrokerSlider', 'BrokerSwitch', 'BrokerTailwindColorPicker', 'BrokerTextArrayInput', 'BrokerTextarea', 'BrokerTextareaGrow', 'Button', 'Checkbox', 'Chip', 'Color_Picker', 'Date_Picker', 'Drawer', 'File_Upload', 'Image_Display', 'Input', 'Json_Editor', 'Menu', 'Number_Input', 'Phone_Input', 'Radio_Group', 'Relational_Button', 'Relational_Input', 'Search_Input', 'Select', 'Sheet', 'Slider', 'Star_Rating', 'Switch', 'Textarea', 'Time_Picker', 'UUID_Array', 'UUID_Field'] as const,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Component" field for dataInputComponent. This is a required field. Your entry must be an string data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:name',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:name',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Name" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:description',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Description" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            placeholder: {
            fieldNameFormats: {
    "frontend": "placeholder",
    "backend": "placeholder",
    "database": "placeholder",
    "pretty": "Placeholder",
    "component": "Placeholder",
    "kebab": "placeholder",
    "sqlFunctionRef": "p_placeholder",
    "RestAPI": "placeholder",
    "GraphQL": "placeholder",
    "custom": "placeholder"
} as const,
            name: 'placeholder',
            displayName: 'Placeholder',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:placeholder',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:placeholder',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Placeholder" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            containerClassName: {
            fieldNameFormats: {
    "frontend": "containerClassName",
    "backend": "container_class_name",
    "database": "container_class_name",
    "pretty": "Container Class Name",
    "component": "ContainerClassName",
    "kebab": "container-class-name",
    "sqlFunctionRef": "p_container_class_name",
    "RestAPI": "containerClassName",
    "GraphQL": "containerClassName",
    "custom": "containerClassName"
} as const,
            name: 'containerClassName',
            displayName: 'Container Class Name',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:container_class_name',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:containerClassName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Container Class Name" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            collapsibleClassName: {
            fieldNameFormats: {
    "frontend": "collapsibleClassName",
    "backend": "collapsible_class_name",
    "database": "collapsible_class_name",
    "pretty": "Collapsible Class Name",
    "component": "CollapsibleClassName",
    "kebab": "collapsible-class-name",
    "sqlFunctionRef": "p_collapsible_class_name",
    "RestAPI": "collapsibleClassName",
    "GraphQL": "collapsibleClassName",
    "custom": "collapsibleClassName"
} as const,
            name: 'collapsibleClassName',
            displayName: 'Collapsible Class Name',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:collapsible_class_name',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:collapsibleClassName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Collapsible Class Name" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            labelClassName: {
            fieldNameFormats: {
    "frontend": "labelClassName",
    "backend": "label_class_name",
    "database": "label_class_name",
    "pretty": "Label Class Name",
    "component": "LabelClassName",
    "kebab": "label-class-name",
    "sqlFunctionRef": "p_label_class_name",
    "RestAPI": "labelClassName",
    "GraphQL": "labelClassName",
    "custom": "labelClassName"
} as const,
            name: 'labelClassName',
            displayName: 'Label Class Name',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:label_class_name',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:labelClassName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Label Class Name" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            descriptionClassName: {
            fieldNameFormats: {
    "frontend": "descriptionClassName",
    "backend": "description_class_name",
    "database": "description_class_name",
    "pretty": "Description Class Name",
    "component": "DescriptionClassName",
    "kebab": "description-class-name",
    "sqlFunctionRef": "p_description_class_name",
    "RestAPI": "descriptionClassName",
    "GraphQL": "descriptionClassName",
    "custom": "descriptionClassName"
} as const,
            name: 'descriptionClassName',
            displayName: 'Description Class Name',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:description_class_name',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:descriptionClassName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Description Class Name" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            componentClassName: {
            fieldNameFormats: {
    "frontend": "componentClassName",
    "backend": "component_class_name",
    "database": "component_class_name",
    "pretty": "Component Class Name",
    "component": "ComponentClassName",
    "kebab": "component-class-name",
    "sqlFunctionRef": "p_component_class_name",
    "RestAPI": "componentClassName",
    "GraphQL": "componentClassName",
    "custom": "componentClassName"
} as const,
            name: 'componentClassName',
            displayName: 'Component Class Name',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:component_class_name',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:componentClassName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Component Class Name" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            size: {
            fieldNameFormats: {
    "frontend": "size",
    "backend": "size",
    "database": "size",
    "pretty": "Size",
    "component": "Size",
    "kebab": "size",
    "sqlFunctionRef": "p_size",
    "RestAPI": "size",
    "GraphQL": "size",
    "custom": "size"
} as const,
            name: 'size',
            displayName: 'Size',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:size',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:size',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "2Xl",
            "value": "2xl"
        },
        {
            "label": "2Xs",
            "value": "2xs"
        },
        {
            "label": "3Xl",
            "value": "3xl"
        },
        {
            "label": "3Xs",
            "value": "3xs"
        },
        {
            "label": "4Xl",
            "value": "4xl"
        },
        {
            "label": "5Xl",
            "value": "5xl"
        },
        {
            "label": "Default",
            "value": "default"
        },
        {
            "label": "L",
            "value": "l"
        },
        {
            "label": "M",
            "value": "m"
        },
        {
            "label": "S",
            "value": "s"
        },
        {
            "label": "Xl",
            "value": "xl"
        },
        {
            "label": "Xs",
            "value": "xs"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"2xl" | "2xs" | "3xl" | "3xs" | "4xl" | "5xl" | "default" | "l" | "m" | "s" | "xl" | "xs" | undefined>,
            enumValues: ['2xl', '2xs', '3xl', '3xs', '4xl', '5xl', 'default', 'l', 'm', 's', 'xl', 'xs'] as const,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Size" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            height: {
            fieldNameFormats: {
    "frontend": "height",
    "backend": "height",
    "database": "height",
    "pretty": "Height",
    "component": "Height",
    "kebab": "height",
    "sqlFunctionRef": "p_height",
    "RestAPI": "height",
    "GraphQL": "height",
    "custom": "height"
} as const,
            name: 'height',
            displayName: 'Height',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:height',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:height',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "2Xl",
            "value": "2xl"
        },
        {
            "label": "2Xs",
            "value": "2xs"
        },
        {
            "label": "3Xl",
            "value": "3xl"
        },
        {
            "label": "3Xs",
            "value": "3xs"
        },
        {
            "label": "4Xl",
            "value": "4xl"
        },
        {
            "label": "5Xl",
            "value": "5xl"
        },
        {
            "label": "Default",
            "value": "default"
        },
        {
            "label": "L",
            "value": "l"
        },
        {
            "label": "M",
            "value": "m"
        },
        {
            "label": "S",
            "value": "s"
        },
        {
            "label": "Xl",
            "value": "xl"
        },
        {
            "label": "Xs",
            "value": "xs"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"2xl" | "2xs" | "3xl" | "3xs" | "4xl" | "5xl" | "default" | "l" | "m" | "s" | "xl" | "xs" | undefined>,
            enumValues: ['2xl', '2xs', '3xl', '3xs', '4xl', '5xl', 'default', 'l', 'm', 's', 'xl', 'xs'] as const,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Height" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            width: {
            fieldNameFormats: {
    "frontend": "width",
    "backend": "width",
    "database": "width",
    "pretty": "Width",
    "component": "Width",
    "kebab": "width",
    "sqlFunctionRef": "p_width",
    "RestAPI": "width",
    "GraphQL": "width",
    "custom": "width"
} as const,
            name: 'width',
            displayName: 'Width',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:width',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:width',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "2Xl",
            "value": "2xl"
        },
        {
            "label": "2Xs",
            "value": "2xs"
        },
        {
            "label": "3Xl",
            "value": "3xl"
        },
        {
            "label": "3Xs",
            "value": "3xs"
        },
        {
            "label": "4Xl",
            "value": "4xl"
        },
        {
            "label": "5Xl",
            "value": "5xl"
        },
        {
            "label": "Default",
            "value": "default"
        },
        {
            "label": "L",
            "value": "l"
        },
        {
            "label": "M",
            "value": "m"
        },
        {
            "label": "S",
            "value": "s"
        },
        {
            "label": "Xl",
            "value": "xl"
        },
        {
            "label": "Xs",
            "value": "xs"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"2xl" | "2xs" | "3xl" | "3xs" | "4xl" | "5xl" | "default" | "l" | "m" | "s" | "xl" | "xs" | undefined>,
            enumValues: ['2xl', '2xs', '3xl', '3xs', '4xl', '5xl', 'default', 'l', 'm', 's', 'xl', 'xs'] as const,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Width" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            minHeight: {
            fieldNameFormats: {
    "frontend": "minHeight",
    "backend": "min_height",
    "database": "min_height",
    "pretty": "Min Height",
    "component": "MinHeight",
    "kebab": "min-height",
    "sqlFunctionRef": "p_min_height",
    "RestAPI": "minHeight",
    "GraphQL": "minHeight",
    "custom": "minHeight"
} as const,
            name: 'minHeight',
            displayName: 'Min Height',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:min_height',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:minHeight',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "2Xl",
            "value": "2xl"
        },
        {
            "label": "2Xs",
            "value": "2xs"
        },
        {
            "label": "3Xl",
            "value": "3xl"
        },
        {
            "label": "3Xs",
            "value": "3xs"
        },
        {
            "label": "4Xl",
            "value": "4xl"
        },
        {
            "label": "5Xl",
            "value": "5xl"
        },
        {
            "label": "Default",
            "value": "default"
        },
        {
            "label": "L",
            "value": "l"
        },
        {
            "label": "M",
            "value": "m"
        },
        {
            "label": "S",
            "value": "s"
        },
        {
            "label": "Xl",
            "value": "xl"
        },
        {
            "label": "Xs",
            "value": "xs"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"2xl" | "2xs" | "3xl" | "3xs" | "4xl" | "5xl" | "default" | "l" | "m" | "s" | "xl" | "xs" | undefined>,
            enumValues: ['2xl', '2xs', '3xl', '3xs', '4xl', '5xl', 'default', 'l', 'm', 's', 'xl', 'xs'] as const,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Min Height" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            maxHeight: {
            fieldNameFormats: {
    "frontend": "maxHeight",
    "backend": "max_height",
    "database": "max_height",
    "pretty": "Max Height",
    "component": "MaxHeight",
    "kebab": "max-height",
    "sqlFunctionRef": "p_max_height",
    "RestAPI": "maxHeight",
    "GraphQL": "maxHeight",
    "custom": "maxHeight"
} as const,
            name: 'maxHeight',
            displayName: 'Max Height',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:max_height',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:maxHeight',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "2Xl",
            "value": "2xl"
        },
        {
            "label": "2Xs",
            "value": "2xs"
        },
        {
            "label": "3Xl",
            "value": "3xl"
        },
        {
            "label": "3Xs",
            "value": "3xs"
        },
        {
            "label": "4Xl",
            "value": "4xl"
        },
        {
            "label": "5Xl",
            "value": "5xl"
        },
        {
            "label": "Default",
            "value": "default"
        },
        {
            "label": "L",
            "value": "l"
        },
        {
            "label": "M",
            "value": "m"
        },
        {
            "label": "S",
            "value": "s"
        },
        {
            "label": "Xl",
            "value": "xl"
        },
        {
            "label": "Xs",
            "value": "xs"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"2xl" | "2xs" | "3xl" | "3xs" | "4xl" | "5xl" | "default" | "l" | "m" | "s" | "xl" | "xs" | undefined>,
            enumValues: ['2xl', '2xs', '3xl', '3xs', '4xl', '5xl', 'default', 'l', 'm', 's', 'xl', 'xs'] as const,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Max Height" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            minWidth: {
            fieldNameFormats: {
    "frontend": "minWidth",
    "backend": "min_width",
    "database": "min_width",
    "pretty": "Min Width",
    "component": "MinWidth",
    "kebab": "min-width",
    "sqlFunctionRef": "p_min_width",
    "RestAPI": "minWidth",
    "GraphQL": "minWidth",
    "custom": "minWidth"
} as const,
            name: 'minWidth',
            displayName: 'Min Width',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:min_width',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:minWidth',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "2Xl",
            "value": "2xl"
        },
        {
            "label": "2Xs",
            "value": "2xs"
        },
        {
            "label": "3Xl",
            "value": "3xl"
        },
        {
            "label": "3Xs",
            "value": "3xs"
        },
        {
            "label": "4Xl",
            "value": "4xl"
        },
        {
            "label": "5Xl",
            "value": "5xl"
        },
        {
            "label": "Default",
            "value": "default"
        },
        {
            "label": "L",
            "value": "l"
        },
        {
            "label": "M",
            "value": "m"
        },
        {
            "label": "S",
            "value": "s"
        },
        {
            "label": "Xl",
            "value": "xl"
        },
        {
            "label": "Xs",
            "value": "xs"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"2xl" | "2xs" | "3xl" | "3xs" | "4xl" | "5xl" | "default" | "l" | "m" | "s" | "xl" | "xs" | undefined>,
            enumValues: ['2xl', '2xs', '3xl', '3xs', '4xl', '5xl', 'default', 'l', 'm', 's', 'xl', 'xs'] as const,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Min Width" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            maxWidth: {
            fieldNameFormats: {
    "frontend": "maxWidth",
    "backend": "max_width",
    "database": "max_width",
    "pretty": "Max Width",
    "component": "MaxWidth",
    "kebab": "max-width",
    "sqlFunctionRef": "p_max_width",
    "RestAPI": "maxWidth",
    "GraphQL": "maxWidth",
    "custom": "maxWidth"
} as const,
            name: 'maxWidth',
            displayName: 'Max Width',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:max_width',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:maxWidth',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "2Xl",
            "value": "2xl"
        },
        {
            "label": "2Xs",
            "value": "2xs"
        },
        {
            "label": "3Xl",
            "value": "3xl"
        },
        {
            "label": "3Xs",
            "value": "3xs"
        },
        {
            "label": "4Xl",
            "value": "4xl"
        },
        {
            "label": "5Xl",
            "value": "5xl"
        },
        {
            "label": "Default",
            "value": "default"
        },
        {
            "label": "L",
            "value": "l"
        },
        {
            "label": "M",
            "value": "m"
        },
        {
            "label": "S",
            "value": "s"
        },
        {
            "label": "Xl",
            "value": "xl"
        },
        {
            "label": "Xs",
            "value": "xs"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"2xl" | "2xs" | "3xl" | "3xs" | "4xl" | "5xl" | "default" | "l" | "m" | "s" | "xl" | "xs" | undefined>,
            enumValues: ['2xl', '2xs', '3xl', '3xs', '4xl', '5xl', 'default', 'l', 'm', 's', 'xl', 'xs'] as const,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Max Width" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            orientation: {
            fieldNameFormats: {
    "frontend": "orientation",
    "backend": "orientation",
    "database": "orientation",
    "pretty": "Orientation",
    "component": "Orientation",
    "kebab": "orientation",
    "sqlFunctionRef": "p_orientation",
    "RestAPI": "orientation",
    "GraphQL": "orientation",
    "custom": "orientation"
} as const,
            name: 'orientation',
            displayName: 'Orientation',

            uniqueColumnId: 'supabase_automation_matrix:public:data_input_component:orientation',
            uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:orientation',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "vertical" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Default",
            "value": "default"
        },
        {
            "label": "Horizontal",
            "value": "horizontal"
        },
        {
            "label": "Vertical",
            "value": "vertical"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"default" | "horizontal" | "vertical" | undefined>,
            enumValues: ['default', 'horizontal', 'vertical'] as const,
            entityName: 'dataInputComponent',
            databaseTable: 'data_input_component',
            foreignKeyReference: null,
            description: '"Orientation" field for dataInputComponent. This is an optional field. Your entry must be an string data type.',
        },
            messageBrokerInverse: {
    fieldNameFormats: {
    "frontend": "messageBrokerInverse",
    "backend": "message_broker_Inverse",
    "database": "ifk_message_broker",
    "pretty": "Message Broker Inverse",
    "component": "MessageBrokerInverse",
    "kebab": "message-brokerInverse",
    "sqlFunctionRef": "p_ifk_message_broker",
    "RestAPI": "messageBrokerInverse",
    "GraphQL": "messageBrokerInverse",
    "custom": "messageBrokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:message_broker',
    uniqueEntityId: 'supabase_automation_matrix:messageBroker',
    name: 'messageBrokerInverse',
    displayName: 'Message Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['messageBroker'][]>,
    entityName: 'messageBroker',
    databaseTable: 'message_broker',
},
            brokerInverse: {
    fieldNameFormats: {
    "frontend": "brokerInverse",
    "backend": "broker_Inverse",
    "database": "ifk_broker",
    "pretty": "Broker Inverse",
    "component": "BrokerInverse",
    "kebab": "brokerInverse",
    "sqlFunctionRef": "p_ifk_broker",
    "RestAPI": "brokerInverse",
    "GraphQL": "brokerInverse",
    "custom": "brokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:broker',
    uniqueEntityId: 'supabase_automation_matrix:broker',
    name: 'brokerInverse',
    displayName: 'Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['broker'][]>,
    entityName: 'broker',
    databaseTable: 'broker',
},
            dataBrokerInverse: {
    fieldNameFormats: {
    "frontend": "dataBrokerInverse",
    "backend": "data_broker_Inverse",
    "database": "ifk_data_broker",
    "pretty": "Data Broker Inverse",
    "component": "DataBrokerInverse",
    "kebab": "data-brokerInverse",
    "sqlFunctionRef": "p_ifk_data_broker",
    "RestAPI": "dataBrokerInverse",
    "GraphQL": "dataBrokerInverse",
    "custom": "dataBrokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:data_broker',
    uniqueEntityId: 'supabase_automation_matrix:dataBroker',
    name: 'dataBrokerInverse',
    displayName: 'Data Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['dataBroker'][]>,
    entityName: 'dataBroker',
    databaseTable: 'data_broker',
},
        },
        entityNameFormats: {
    "frontend": "dataInputComponent",
    "backend": "data_input_component",
    "database": "data_input_component",
    "pretty": "Data Input Component",
    "component": "DataInputComponent",
    "kebab": "data-input-component",
    "sqlFunctionRef": "p_data_input_component",
    "RestAPI": "dataInputComponent",
    "GraphQL": "dataInputComponent",
    "custom": "dataInputComponent"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'message_broker', relatedColumn: 'default_component', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'broker', relatedColumn: 'custom_source_component', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'data_broker', relatedColumn: 'input_component', junctionTable: null }
        ],
    },
dataOutputComponent: {
        schemaType: 'table' as const,
        entityName: 'dataOutputComponent',
        displayName: 'Data Output Component',
        uniqueTableId: 'supabase_automation_matrix:public:data_output_component',
        uniqueEntityId: 'supabase_automation_matrix:dataOutputComponent',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:data_output_component:id',
            uniqueFieldId: 'supabase_automation_matrix:dataOutputComponent:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataOutputComponent',
            databaseTable: 'data_output_component',
            foreignKeyReference: null,
            description: '"Id" field for dataOutputComponent. This is a required field. Your entry must be an uuid data type.',
        },
            componentType: {
            fieldNameFormats: {
    "frontend": "componentType",
    "backend": "component_type",
    "database": "component_type",
    "pretty": "Component Type",
    "component": "ComponentType",
    "kebab": "component-type",
    "sqlFunctionRef": "p_component_type",
    "RestAPI": "componentType",
    "GraphQL": "componentType",
    "custom": "componentType"
} as const,
            name: 'componentType',
            displayName: 'Component Type',

            uniqueColumnId: 'supabase_automation_matrix:public:data_output_component:component_type',
            uniqueFieldId: 'supabase_automation_matrix:dataOutputComponent:componentType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "3 D Model Viewer",
            "value": "3DModelViewer"
        },
        {
            "label": "Audio Output",
            "value": "AudioOutput"
        },
        {
            "label": "Bucket List",
            "value": "BucketList"
        },
        {
            "label": "Budget Visualizer",
            "value": "BudgetVisualizer"
        },
        {
            "label": "Calendar",
            "value": "Calendar"
        },
        {
            "label": "Carousel",
            "value": "Carousel"
        },
        {
            "label": "Checklist",
            "value": "Checklist"
        },
        {
            "label": "Clock",
            "value": "Clock"
        },
        {
            "label": "Code View",
            "value": "CodeView"
        },
        {
            "label": "Complex Multi",
            "value": "ComplexMulti"
        },
        {
            "label": "Data Flow Diagram",
            "value": "DataFlowDiagram"
        },
        {
            "label": "Decision Tree",
            "value": "DecisionTree"
        },
        {
            "label": "Diff Viewer",
            "value": "DiffViewer"
        },
        {
            "label": "File Output",
            "value": "FileOutput"
        },
        {
            "label": "Fitness Tracker",
            "value": "FitnessTracker"
        },
        {
            "label": "Flowchart",
            "value": "Flowchart"
        },
        {
            "label": "Form",
            "value": "Form"
        },
        {
            "label": "Gantt Chart",
            "value": "GanttChart"
        },
        {
            "label": "Geographic Map",
            "value": "GeographicMap"
        },
        {
            "label": "Glossary View",
            "value": "GlossaryView"
        },
        {
            "label": "Heatmap",
            "value": "Heatmap"
        },
        {
            "label": "Horizontal List",
            "value": "HorizontalList"
        },
        {
            "label": "Image View",
            "value": "ImageView"
        },
        {
            "label": "Interactive Chart",
            "value": "InteractiveChart"
        },
        {
            "label": "Json Viewer",
            "value": "JsonViewer"
        },
        {
            "label": "Kanban Board",
            "value": "KanbanBoard"
        },
        {
            "label": "La Te X Renderer",
            "value": "LaTeXRenderer"
        },
        {
            "label": "Live Traffic",
            "value": "LiveTraffic"
        },
        {
            "label": "Local Events",
            "value": "LocalEvents"
        },
        {
            "label": "Markdown Viewer",
            "value": "MarkdownViewer"
        },
        {
            "label": "Meal Planner",
            "value": "MealPlanner"
        },
        {
            "label": "Mind Map",
            "value": "MindMap"
        },
        {
            "label": "Need New Option",
            "value": "NeedNewOption"
        },
        {
            "label": "Network Graph",
            "value": "NetworkGraph"
        },
        {
            "label": "News Aggregator",
            "value": "NewsAggregator"
        },
        {
            "label": "P D F Viewer",
            "value": "PDFViewer"
        },
        {
            "label": "Pivot Table",
            "value": "PivotTable"
        },
        {
            "label": "Plain Text",
            "value": "PlainText"
        },
        {
            "label": "Presentation",
            "value": "Presentation"
        },
        {
            "label": "Public Live Cam",
            "value": "PublicLiveCam"
        },
        {
            "label": "Rich Text Editor",
            "value": "RichTextEditor"
        },
        {
            "label": "Run Code Back",
            "value": "RunCodeBack"
        },
        {
            "label": "Run Code Front",
            "value": "RunCodeFront"
        },
        {
            "label": "S V G Editor",
            "value": "SVGEditor"
        },
        {
            "label": "Sankey Diagram",
            "value": "SankeyDiagram"
        },
        {
            "label": "Satellite View",
            "value": "SatelliteView"
        },
        {
            "label": "Social Media Info",
            "value": "SocialMediaInfo"
        },
        {
            "label": "Spectrum Analyzer",
            "value": "SpectrumAnalyzer"
        },
        {
            "label": "Spreadsheet",
            "value": "Spreadsheet"
        },
        {
            "label": "Table",
            "value": "Table"
        },
        {
            "label": "Task Prioritization",
            "value": "TaskPrioritization"
        },
        {
            "label": "Textarea",
            "value": "Textarea"
        },
        {
            "label": "Thermometer",
            "value": "Thermometer"
        },
        {
            "label": "Timeline",
            "value": "Timeline"
        },
        {
            "label": "Travel Planner",
            "value": "TravelPlanner"
        },
        {
            "label": "Tree View",
            "value": "TreeView"
        },
        {
            "label": "U M L Diagram",
            "value": "UMLDiagram"
        },
        {
            "label": "Vertical List",
            "value": "VerticalList"
        },
        {
            "label": "Voice Sentiment Analysis",
            "value": "VoiceSentimentAnalysis"
        },
        {
            "label": "Weather Dashboard",
            "value": "WeatherDashboard"
        },
        {
            "label": "Weather Map",
            "value": "WeatherMap"
        },
        {
            "label": "Word Highlighter",
            "value": "WordHighlighter"
        },
        {
            "label": "Word Map",
            "value": "WordMap"
        },
        {
            "label": "Chat Response",
            "value": "chatResponse"
        },
        {
            "label": "None",
            "value": "none"
        },
        {
            "label": "Video",
            "value": "video"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"3DModelViewer" | "AudioOutput" | "BucketList" | "BudgetVisualizer" | "Calendar" | "Carousel" | "Checklist" | "Clock" | "CodeView" | "ComplexMulti" | "DataFlowDiagram" | "DecisionTree" | "DiffViewer" | "FileOutput" | "FitnessTracker" | "Flowchart" | "Form" | "GanttChart" | "GeographicMap" | "GlossaryView" | "Heatmap" | "HorizontalList" | "ImageView" | "InteractiveChart" | "JsonViewer" | "KanbanBoard" | "LaTeXRenderer" | "LiveTraffic" | "LocalEvents" | "MarkdownViewer" | "MealPlanner" | "MindMap" | "NeedNewOption" | "NetworkGraph" | "NewsAggregator" | "PDFViewer" | "PivotTable" | "PlainText" | "Presentation" | "PublicLiveCam" | "RichTextEditor" | "RunCodeBack" | "RunCodeFront" | "SVGEditor" | "SankeyDiagram" | "SatelliteView" | "SocialMediaInfo" | "SpectrumAnalyzer" | "Spreadsheet" | "Table" | "TaskPrioritization" | "Textarea" | "Thermometer" | "Timeline" | "TravelPlanner" | "TreeView" | "UMLDiagram" | "VerticalList" | "VoiceSentimentAnalysis" | "WeatherDashboard" | "WeatherMap" | "WordHighlighter" | "WordMap" | "chatResponse" | "none" | "video" | undefined>,
            enumValues: ['3DModelViewer', 'AudioOutput', 'BucketList', 'BudgetVisualizer', 'Calendar', 'Carousel', 'Checklist', 'Clock', 'CodeView', 'ComplexMulti', 'DataFlowDiagram', 'DecisionTree', 'DiffViewer', 'FileOutput', 'FitnessTracker', 'Flowchart', 'Form', 'GanttChart', 'GeographicMap', 'GlossaryView', 'Heatmap', 'HorizontalList', 'ImageView', 'InteractiveChart', 'JsonViewer', 'KanbanBoard', 'LaTeXRenderer', 'LiveTraffic', 'LocalEvents', 'MarkdownViewer', 'MealPlanner', 'MindMap', 'NeedNewOption', 'NetworkGraph', 'NewsAggregator', 'PDFViewer', 'PivotTable', 'PlainText', 'Presentation', 'PublicLiveCam', 'RichTextEditor', 'RunCodeBack', 'RunCodeFront', 'SVGEditor', 'SankeyDiagram', 'SatelliteView', 'SocialMediaInfo', 'SpectrumAnalyzer', 'Spreadsheet', 'Table', 'TaskPrioritization', 'Textarea', 'Thermometer', 'Timeline', 'TravelPlanner', 'TreeView', 'UMLDiagram', 'VerticalList', 'VoiceSentimentAnalysis', 'WeatherDashboard', 'WeatherMap', 'WordHighlighter', 'WordMap', 'chatResponse', 'none', 'video'] as const,
            entityName: 'dataOutputComponent',
            databaseTable: 'data_output_component',
            foreignKeyReference: null,
            description: '"Component Type" field for dataOutputComponent. This is an optional field. Your entry must be an string data type.',
        },
            uiComponent: {
            fieldNameFormats: {
    "frontend": "uiComponent",
    "backend": "ui_component",
    "database": "ui_component",
    "pretty": "Ui Component",
    "component": "UiComponent",
    "kebab": "ui-component",
    "sqlFunctionRef": "p_ui_component",
    "RestAPI": "uiComponent",
    "GraphQL": "uiComponent",
    "custom": "uiComponent"
} as const,
            name: 'uiComponent',
            displayName: 'Ui Component',

            uniqueColumnId: 'supabase_automation_matrix:public:data_output_component:ui_component',
            uniqueFieldId: 'supabase_automation_matrix:dataOutputComponent:uiComponent',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'dataOutputComponent',
            databaseTable: 'data_output_component',
            foreignKeyReference: null,
            description: '"Ui Component" field for dataOutputComponent. This is an optional field. Your entry must be an string data type.',
        },
            props: {
            fieldNameFormats: {
    "frontend": "props",
    "backend": "props",
    "database": "props",
    "pretty": "Props",
    "component": "Props",
    "kebab": "props",
    "sqlFunctionRef": "p_props",
    "RestAPI": "props",
    "GraphQL": "props",
    "custom": "props"
} as const,
            name: 'props',
            displayName: 'Props',

            uniqueColumnId: 'supabase_automation_matrix:public:data_output_component:props',
            uniqueFieldId: 'supabase_automation_matrix:dataOutputComponent:props',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'dataOutputComponent',
            databaseTable: 'data_output_component',
            foreignKeyReference: null,
            description: '"Props" field for dataOutputComponent. This is an optional field. Your entry must be an object data type.',
        },
            additionalParams: {
            fieldNameFormats: {
    "frontend": "additionalParams",
    "backend": "additional_params",
    "database": "additional_params",
    "pretty": "Additional Params",
    "component": "AdditionalParams",
    "kebab": "additional-params",
    "sqlFunctionRef": "p_additional_params",
    "RestAPI": "additionalParams",
    "GraphQL": "additionalParams",
    "custom": "additionalParams"
} as const,
            name: 'additionalParams',
            displayName: 'Additional Params',

            uniqueColumnId: 'supabase_automation_matrix:public:data_output_component:additional_params',
            uniqueFieldId: 'supabase_automation_matrix:dataOutputComponent:additionalParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'dataOutputComponent',
            databaseTable: 'data_output_component',
            foreignKeyReference: null,
            description: '"Additional Params" field for dataOutputComponent. This is an optional field. Your entry must be an object data type.',
        },
            dataBrokerInverse: {
    fieldNameFormats: {
    "frontend": "dataBrokerInverse",
    "backend": "data_broker_Inverse",
    "database": "ifk_data_broker",
    "pretty": "Data Broker Inverse",
    "component": "DataBrokerInverse",
    "kebab": "data-brokerInverse",
    "sqlFunctionRef": "p_ifk_data_broker",
    "RestAPI": "dataBrokerInverse",
    "GraphQL": "dataBrokerInverse",
    "custom": "dataBrokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:data_broker',
    uniqueEntityId: 'supabase_automation_matrix:dataBroker',
    name: 'dataBrokerInverse',
    displayName: 'Data Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['dataBroker'][]>,
    entityName: 'dataBroker',
    databaseTable: 'data_broker',
},
        },
        entityNameFormats: {
    "frontend": "dataOutputComponent",
    "backend": "data_output_component",
    "database": "data_output_component",
    "pretty": "Data Output Component",
    "component": "DataOutputComponent",
    "kebab": "data-output-component",
    "sqlFunctionRef": "p_data_output_component",
    "RestAPI": "dataOutputComponent",
    "GraphQL": "dataOutputComponent",
    "custom": "dataOutputComponent"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'data_broker', relatedColumn: 'output_component', junctionTable: null }
        ],
    },
displayOption: {
        schemaType: 'table' as const,
        entityName: 'displayOption',
        displayName: 'Display Option',
        uniqueTableId: 'supabase_automation_matrix:public:display_option',
        uniqueEntityId: 'supabase_automation_matrix:displayOption',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:display_option:id',
            uniqueFieldId: 'supabase_automation_matrix:displayOption:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'displayOption',
            databaseTable: 'display_option',
            foreignKeyReference: null,
            description: '"Id" field for displayOption. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:display_option:name',
            uniqueFieldId: 'supabase_automation_matrix:displayOption:name',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'displayOption',
            databaseTable: 'display_option',
            foreignKeyReference: null,
            description: '"Name" field for displayOption. This is an optional field. Your entry must be an string data type.',
        },
            defaultParams: {
            fieldNameFormats: {
    "frontend": "defaultParams",
    "backend": "default_params",
    "database": "default_params",
    "pretty": "Default Params",
    "component": "DefaultParams",
    "kebab": "default-params",
    "sqlFunctionRef": "p_default_params",
    "RestAPI": "defaultParams",
    "GraphQL": "defaultParams",
    "custom": "defaultParams"
} as const,
            name: 'defaultParams',
            displayName: 'Default Params',

            uniqueColumnId: 'supabase_automation_matrix:public:display_option:default_params',
            uniqueFieldId: 'supabase_automation_matrix:displayOption:defaultParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'displayOption',
            databaseTable: 'display_option',
            foreignKeyReference: null,
            description: '"Default Params" field for displayOption. This is an optional field. Your entry must be an object data type.',
        },
            customizableParams: {
            fieldNameFormats: {
    "frontend": "customizableParams",
    "backend": "customizable_params",
    "database": "customizable_params",
    "pretty": "Customizable Params",
    "component": "CustomizableParams",
    "kebab": "customizable-params",
    "sqlFunctionRef": "p_customizable_params",
    "RestAPI": "customizableParams",
    "GraphQL": "customizableParams",
    "custom": "customizableParams"
} as const,
            name: 'customizableParams',
            displayName: 'Customizable Params',

            uniqueColumnId: 'supabase_automation_matrix:public:display_option:customizable_params',
            uniqueFieldId: 'supabase_automation_matrix:displayOption:customizableParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'displayOption',
            databaseTable: 'display_option',
            foreignKeyReference: null,
            description: '"Customizable Params" field for displayOption. This is an optional field. Your entry must be an object data type.',
        },
            additionalParams: {
            fieldNameFormats: {
    "frontend": "additionalParams",
    "backend": "additional_params",
    "database": "additional_params",
    "pretty": "Additional Params",
    "component": "AdditionalParams",
    "kebab": "additional-params",
    "sqlFunctionRef": "p_additional_params",
    "RestAPI": "additionalParams",
    "GraphQL": "additionalParams",
    "custom": "additionalParams"
} as const,
            name: 'additionalParams',
            displayName: 'Additional Params',

            uniqueColumnId: 'supabase_automation_matrix:public:display_option:additional_params',
            uniqueFieldId: 'supabase_automation_matrix:displayOption:additionalParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'displayOption',
            databaseTable: 'display_option',
            foreignKeyReference: null,
            description: '"Additional Params" field for displayOption. This is an optional field. Your entry must be an object data type.',
        },
            recipeDisplayInverse: {
    fieldNameFormats: {
    "frontend": "recipeDisplayInverse",
    "backend": "recipe_display_Inverse",
    "database": "ifk_recipe_display",
    "pretty": "Recipe Display Inverse",
    "component": "RecipeDisplayInverse",
    "kebab": "recipe-displayInverse",
    "sqlFunctionRef": "p_ifk_recipe_display",
    "RestAPI": "recipeDisplayInverse",
    "GraphQL": "recipeDisplayInverse",
    "custom": "recipeDisplayInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_display',
    uniqueEntityId: 'supabase_automation_matrix:recipeDisplay',
    name: 'recipeDisplayInverse',
    displayName: 'Recipe Display Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeDisplay'][]>,
    entityName: 'recipeDisplay',
    databaseTable: 'recipe_display',
},
        },
        entityNameFormats: {
    "frontend": "displayOption",
    "backend": "display_option",
    "database": "display_option",
    "pretty": "Display Option",
    "component": "DisplayOption",
    "kebab": "display-option",
    "sqlFunctionRef": "p_display_option",
    "RestAPI": "displayOption",
    "GraphQL": "displayOption",
    "custom": "displayOption"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_display', relatedColumn: 'display', junctionTable: null }
        ],
    },
emails: {
        schemaType: 'table' as const,
        entityName: 'emails',
        displayName: 'Emails',
        uniqueTableId: 'supabase_automation_matrix:public:emails',
        uniqueEntityId: 'supabase_automation_matrix:emails',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'subject', databaseFieldName: 'subject' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:emails:id',
            uniqueFieldId: 'supabase_automation_matrix:emails:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'emails',
            databaseTable: 'emails',
            foreignKeyReference: null,
            description: '"Id" field for emails. This is a required field. Your entry must be an uuid data type.',
        },
            sender: {
            fieldNameFormats: {
    "frontend": "sender",
    "backend": "sender",
    "database": "sender",
    "pretty": "Sender",
    "component": "Sender",
    "kebab": "sender",
    "sqlFunctionRef": "p_sender",
    "RestAPI": "sender",
    "GraphQL": "sender",
    "custom": "sender"
} as const,
            name: 'sender',
            displayName: 'Sender',

            uniqueColumnId: 'supabase_automation_matrix:public:emails:sender',
            uniqueFieldId: 'supabase_automation_matrix:emails:sender',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'emails',
            databaseTable: 'emails',
            foreignKeyReference: null,
            description: '"Sender" field for emails. This is a required field. Your entry must be an string data type.',
        },
            recipient: {
            fieldNameFormats: {
    "frontend": "recipient",
    "backend": "recipient",
    "database": "recipient",
    "pretty": "Recipient",
    "component": "Recipient",
    "kebab": "recipient",
    "sqlFunctionRef": "p_recipient",
    "RestAPI": "recipient",
    "GraphQL": "recipient",
    "custom": "recipient"
} as const,
            name: 'recipient',
            displayName: 'Recipient',

            uniqueColumnId: 'supabase_automation_matrix:public:emails:recipient',
            uniqueFieldId: 'supabase_automation_matrix:emails:recipient',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'emails',
            databaseTable: 'emails',
            foreignKeyReference: null,
            description: '"Recipient" field for emails. This is a required field. Your entry must be an string data type.',
        },
            subject: {
            fieldNameFormats: {
    "frontend": "subject",
    "backend": "subject",
    "database": "subject",
    "pretty": "Subject",
    "component": "Subject",
    "kebab": "subject",
    "sqlFunctionRef": "p_subject",
    "RestAPI": "subject",
    "GraphQL": "subject",
    "custom": "subject"
} as const,
            name: 'subject',
            displayName: 'Subject',

            uniqueColumnId: 'supabase_automation_matrix:public:emails:subject',
            uniqueFieldId: 'supabase_automation_matrix:emails:subject',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'emails',
            databaseTable: 'emails',
            foreignKeyReference: null,
            description: '"Subject" field for emails. This is a required field. Your entry must be an string data type.',
        },
            body: {
            fieldNameFormats: {
    "frontend": "body",
    "backend": "body",
    "database": "body",
    "pretty": "Body",
    "component": "Body",
    "kebab": "body",
    "sqlFunctionRef": "p_body",
    "RestAPI": "body",
    "GraphQL": "body",
    "custom": "body"
} as const,
            name: 'body',
            displayName: 'Body',

            uniqueColumnId: 'supabase_automation_matrix:public:emails:body',
            uniqueFieldId: 'supabase_automation_matrix:emails:body',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'emails',
            databaseTable: 'emails',
            foreignKeyReference: null,
            description: '"Body" field for emails. This is a required field. Your entry must be an string data type.',
        },
            timestamp: {
            fieldNameFormats: {
    "frontend": "timestamp",
    "backend": "timestamp",
    "database": "timestamp",
    "pretty": "Timestamp",
    "component": "Timestamp",
    "kebab": "timestamp",
    "sqlFunctionRef": "p_timestamp",
    "RestAPI": "timestamp",
    "GraphQL": "timestamp",
    "custom": "timestamp"
} as const,
            name: 'timestamp',
            displayName: 'Timestamp',

            uniqueColumnId: 'supabase_automation_matrix:public:emails:timestamp',
            uniqueFieldId: 'supabase_automation_matrix:emails:timestamp',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'emails',
            databaseTable: 'emails',
            foreignKeyReference: null,
            description: '"Timestamp" field for emails. This is an optional field. Your entry must be an date data type.',
        },
            isRead: {
            fieldNameFormats: {
    "frontend": "isRead",
    "backend": "is_read",
    "database": "is_read",
    "pretty": "Is Read",
    "component": "IsRead",
    "kebab": "is-read",
    "sqlFunctionRef": "p_is_read",
    "RestAPI": "isRead",
    "GraphQL": "isRead",
    "custom": "isRead"
} as const,
            name: 'isRead',
            displayName: 'Is Read',

            uniqueColumnId: 'supabase_automation_matrix:public:emails:is_read',
            uniqueFieldId: 'supabase_automation_matrix:emails:isRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'emails',
            databaseTable: 'emails',
            foreignKeyReference: null,
            description: '"Is Read" field for emails. This is an optional field. Your entry must be an boolean data type.',
        },
        },
        entityNameFormats: {
    "frontend": "emails",
    "backend": "emails",
    "database": "emails",
    "pretty": "Emails",
    "component": "Emails",
    "kebab": "emails",
    "sqlFunctionRef": "p_emails",
    "RestAPI": "emails",
    "GraphQL": "emails",
    "custom": "emails"
},
        relationships: [
            
        ],
    },
extractor: {
        schemaType: 'table' as const,
        entityName: 'extractor',
        displayName: 'Extractor',
        uniqueTableId: 'supabase_automation_matrix:public:extractor',
        uniqueEntityId: 'supabase_automation_matrix:extractor',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:extractor:id',
            uniqueFieldId: 'supabase_automation_matrix:extractor:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'extractor',
            databaseTable: 'extractor',
            foreignKeyReference: null,
            description: '"Id" field for extractor. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:extractor:name',
            uniqueFieldId: 'supabase_automation_matrix:extractor:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'extractor',
            databaseTable: 'extractor',
            foreignKeyReference: null,
            description: '"Name" field for extractor. This is a required field. Your entry must be an string data type.',
        },
            outputType: {
            fieldNameFormats: {
    "frontend": "outputType",
    "backend": "output_type",
    "database": "output_type",
    "pretty": "Output Type",
    "component": "OutputType",
    "kebab": "output-type",
    "sqlFunctionRef": "p_output_type",
    "RestAPI": "outputType",
    "GraphQL": "outputType",
    "custom": "outputType"
} as const,
            name: 'outputType',
            displayName: 'Output Type',

            uniqueColumnId: 'supabase_automation_matrix:public:extractor:output_type',
            uniqueFieldId: 'supabase_automation_matrix:extractor:outputType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Bool",
            "value": "bool"
        },
        {
            "label": "Dict",
            "value": "dict"
        },
        {
            "label": "Float",
            "value": "float"
        },
        {
            "label": "Int",
            "value": "int"
        },
        {
            "label": "List",
            "value": "list"
        },
        {
            "label": "Str",
            "value": "str"
        },
        {
            "label": "Url",
            "value": "url"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"bool" | "dict" | "float" | "int" | "list" | "str" | "url" | undefined>,
            enumValues: ['bool', 'dict', 'float', 'int', 'list', 'str', 'url'] as const,
            entityName: 'extractor',
            databaseTable: 'extractor',
            foreignKeyReference: null,
            description: '"Output Type" field for extractor. This is an optional field. Your entry must be an string data type.',
        },
            defaultIdentifier: {
            fieldNameFormats: {
    "frontend": "defaultIdentifier",
    "backend": "default_identifier",
    "database": "default_identifier",
    "pretty": "Default Identifier",
    "component": "DefaultIdentifier",
    "kebab": "default-identifier",
    "sqlFunctionRef": "p_default_identifier",
    "RestAPI": "defaultIdentifier",
    "GraphQL": "defaultIdentifier",
    "custom": "defaultIdentifier"
} as const,
            name: 'defaultIdentifier',
            displayName: 'Default Identifier',

            uniqueColumnId: 'supabase_automation_matrix:public:extractor:default_identifier',
            uniqueFieldId: 'supabase_automation_matrix:extractor:defaultIdentifier',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'extractor',
            databaseTable: 'extractor',
            foreignKeyReference: null,
            description: '"Default Identifier" field for extractor. This is an optional field. Your entry must be an string data type.',
        },
            defaultIndex: {
            fieldNameFormats: {
    "frontend": "defaultIndex",
    "backend": "default_index",
    "database": "default_index",
    "pretty": "Default Index",
    "component": "DefaultIndex",
    "kebab": "default-index",
    "sqlFunctionRef": "p_default_index",
    "RestAPI": "defaultIndex",
    "GraphQL": "defaultIndex",
    "custom": "defaultIndex"
} as const,
            name: 'defaultIndex',
            displayName: 'Default Index',

            uniqueColumnId: 'supabase_automation_matrix:public:extractor:default_index',
            uniqueFieldId: 'supabase_automation_matrix:extractor:defaultIndex',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'extractor',
            databaseTable: 'extractor',
            foreignKeyReference: null,
            description: '"Default Index" field for extractor. This is an optional field. Your entry must be an number data type.',
        },
        },
        entityNameFormats: {
    "frontend": "extractor",
    "backend": "extractor",
    "database": "extractor",
    "pretty": "Extractor",
    "component": "Extractor",
    "kebab": "extractor",
    "sqlFunctionRef": "p_extractor",
    "RestAPI": "extractor",
    "GraphQL": "extractor",
    "custom": "extractor"
},
        relationships: [
            
        ],
    },
fieldComponents: {
        schemaType: 'table' as const,
        entityName: 'fieldComponents',
        displayName: 'Field Components',
        uniqueTableId: 'supabase_automation_matrix:public:field_components',
        uniqueEntityId: 'supabase_automation_matrix:fieldComponents',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'label', databaseFieldName: 'label' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:id',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Id" field for fieldComponents. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:created_at',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Created At" field for fieldComponents. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Updated At" field for fieldComponents. This is an optional field. Your entry must be an date data type.',
        },
            label: {
            fieldNameFormats: {
    "frontend": "label",
    "backend": "label",
    "database": "label",
    "pretty": "Label",
    "component": "Label",
    "kebab": "label",
    "sqlFunctionRef": "p_label",
    "RestAPI": "label",
    "GraphQL": "label",
    "custom": "label"
} as const,
            name: 'label',
            displayName: 'Label',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:label',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:label',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Label" field for fieldComponents. This is an optional field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:description',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Description" field for fieldComponents. This is an optional field. Your entry must be an string data type.',
        },
            helpText: {
            fieldNameFormats: {
    "frontend": "helpText",
    "backend": "help_text",
    "database": "help_text",
    "pretty": "Help Text",
    "component": "HelpText",
    "kebab": "help-text",
    "sqlFunctionRef": "p_help_text",
    "RestAPI": "helpText",
    "GraphQL": "helpText",
    "custom": "helpText"
} as const,
            name: 'helpText',
            displayName: 'Help Text',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:help_text',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:helpText',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Help Text" field for fieldComponents. This is an optional field. Your entry must be an string data type.',
        },
            componentGroup: {
            fieldNameFormats: {
    "frontend": "componentGroup",
    "backend": "component_group",
    "database": "component_group",
    "pretty": "Component Group",
    "component": "ComponentGroup",
    "kebab": "component-group",
    "sqlFunctionRef": "p_component_group",
    "RestAPI": "componentGroup",
    "GraphQL": "componentGroup",
    "custom": "componentGroup"
} as const,
            name: 'componentGroup',
            displayName: 'Component Group',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:component_group',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:componentGroup',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "default" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Component Group" field for fieldComponents. This is an optional field. Your entry must be an string data type.',
        },
            iconName: {
            fieldNameFormats: {
    "frontend": "iconName",
    "backend": "icon_name",
    "database": "icon_name",
    "pretty": "Icon Name",
    "component": "IconName",
    "kebab": "icon-name",
    "sqlFunctionRef": "p_icon_name",
    "RestAPI": "iconName",
    "GraphQL": "iconName",
    "custom": "iconName"
} as const,
            name: 'iconName',
            displayName: 'Icon Name',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:icon_name',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:iconName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Icon Name" field for fieldComponents. This is an optional field. Your entry must be an string data type.',
        },
            component: {
            fieldNameFormats: {
    "frontend": "component",
    "backend": "component",
    "database": "component",
    "pretty": "Component",
    "component": "Component",
    "kebab": "component",
    "sqlFunctionRef": "p_component",
    "RestAPI": "component",
    "GraphQL": "component",
    "custom": "component"
} as const,
            name: 'component',
            displayName: 'Component',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:component',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:component',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "textarea" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Component" field for fieldComponents. This is an optional field. Your entry must be an string data type.',
        },
            required: {
            fieldNameFormats: {
    "frontend": "required",
    "backend": "required",
    "database": "required",
    "pretty": "Required",
    "component": "Required",
    "kebab": "required",
    "sqlFunctionRef": "p_required",
    "RestAPI": "required",
    "GraphQL": "required",
    "custom": "required"
} as const,
            name: 'required',
            displayName: 'Required',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:required',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:required',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Required" field for fieldComponents. This is an optional field. Your entry must be an boolean data type.',
        },
            placeholder: {
            fieldNameFormats: {
    "frontend": "placeholder",
    "backend": "placeholder",
    "database": "placeholder",
    "pretty": "Placeholder",
    "component": "Placeholder",
    "kebab": "placeholder",
    "sqlFunctionRef": "p_placeholder",
    "RestAPI": "placeholder",
    "GraphQL": "placeholder",
    "custom": "placeholder"
} as const,
            name: 'placeholder',
            displayName: 'Placeholder',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:placeholder',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:placeholder',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Placeholder" field for fieldComponents. This is an optional field. Your entry must be an string data type.',
        },
            defaultValue: {
            fieldNameFormats: {
    "frontend": "defaultValue",
    "backend": "default_value",
    "database": "default_value",
    "pretty": "Default Value",
    "component": "DefaultValue",
    "kebab": "default-value",
    "sqlFunctionRef": "p_default_value",
    "RestAPI": "defaultValue",
    "GraphQL": "defaultValue",
    "custom": "defaultValue"
} as const,
            name: 'defaultValue',
            displayName: 'Default Value',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:default_value',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:defaultValue',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Default Value" field for fieldComponents. This is an optional field. Your entry must be an string data type.',
        },
            includeOther: {
            fieldNameFormats: {
    "frontend": "includeOther",
    "backend": "include_other",
    "database": "include_other",
    "pretty": "Include Other",
    "component": "IncludeOther",
    "kebab": "include-other",
    "sqlFunctionRef": "p_include_other",
    "RestAPI": "includeOther",
    "GraphQL": "includeOther",
    "custom": "includeOther"
} as const,
            name: 'includeOther',
            displayName: 'Include Other',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:include_other',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:includeOther',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Include Other" field for fieldComponents. This is an optional field. Your entry must be an boolean data type.',
        },
            options: {
            fieldNameFormats: {
    "frontend": "options",
    "backend": "options",
    "database": "options",
    "pretty": "Options",
    "component": "Options",
    "kebab": "options",
    "sqlFunctionRef": "p_options",
    "RestAPI": "options",
    "GraphQL": "options",
    "custom": "options"
} as const,
            name: 'options',
            displayName: 'Options',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:options',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:options',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "[]" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Options" field for fieldComponents. This is an optional field. Your entry must be an object data type.',
        },
            componentProps: {
            fieldNameFormats: {
    "frontend": "componentProps",
    "backend": "component_props",
    "database": "component_props",
    "pretty": "Component Props",
    "component": "ComponentProps",
    "kebab": "component-props",
    "sqlFunctionRef": "p_component_props",
    "RestAPI": "componentProps",
    "GraphQL": "componentProps",
    "custom": "componentProps"
} as const,
            name: 'componentProps',
            displayName: 'Component Props',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:component_props',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:componentProps',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "{'max': 100, 'min': 0, 'rows': 3, 'step': 1, 'width': 'w-full', 'maxDate': None, 'minDate': None, 'onLabel': 'Yes', 'gridCols': 'grid-cols-1', 'maxItems': 99999, 'minItems': 0, 'offLabel': 'No', 'direction': 'vertical', 'maxLength': 999999, 'spellCheck': False, 'tableRules': {'canAddRows': True, 'canSortRows': True, 'canEditCells': True, 'canAddColumns': True, 'canDeleteRows': True, 'canSortColumns': True, 'canDeleteColumns': True, 'canRenameColumns': True}, 'multiSelect': False, 'valuePrefix': '', 'valueSuffix': '', 'autoComplete': 'off', 'customContent': '', 'showSelectAll': False}" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Component Props" field for fieldComponents. This is an optional field. Your entry must be an object data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:user_id',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for fieldComponents. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:is_public',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Is Public" field for fieldComponents. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for fieldComponents. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:field_components:public_read',
            uniqueFieldId: 'supabase_automation_matrix:fieldComponents:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'fieldComponents',
            databaseTable: 'field_components',
            foreignKeyReference: null,
            description: '"Public Read" field for fieldComponents. This is an optional field. Your entry must be an boolean data type.',
        },
            dataBrokerInverse: {
    fieldNameFormats: {
    "frontend": "dataBrokerInverse",
    "backend": "data_broker_Inverse",
    "database": "ifk_data_broker",
    "pretty": "Data Broker Inverse",
    "component": "DataBrokerInverse",
    "kebab": "data-brokerInverse",
    "sqlFunctionRef": "p_ifk_data_broker",
    "RestAPI": "dataBrokerInverse",
    "GraphQL": "dataBrokerInverse",
    "custom": "dataBrokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:data_broker',
    uniqueEntityId: 'supabase_automation_matrix:dataBroker',
    name: 'dataBrokerInverse',
    displayName: 'Data Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['dataBroker'][]>,
    entityName: 'dataBroker',
    databaseTable: 'data_broker',
},
            containerFieldsInverse: {
    fieldNameFormats: {
    "frontend": "containerFieldsInverse",
    "backend": "container_fields_Inverse",
    "database": "ifk_container_fields",
    "pretty": "Container Fields Inverse",
    "component": "ContainerFieldsInverse",
    "kebab": "container-fieldsInverse",
    "sqlFunctionRef": "p_ifk_container_fields",
    "RestAPI": "containerFieldsInverse",
    "GraphQL": "containerFieldsInverse",
    "custom": "containerFieldsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:container_fields',
    uniqueEntityId: 'supabase_automation_matrix:containerFields',
    name: 'containerFieldsInverse',
    displayName: 'Container Fields Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['containerFields'][]>,
    entityName: 'containerFields',
    databaseTable: 'container_fields',
},
            workflowUserInputInverse: {
    fieldNameFormats: {
    "frontend": "workflowUserInputInverse",
    "backend": "workflow_user_input_Inverse",
    "database": "ifk_workflow_user_input",
    "pretty": "Workflow User Input Inverse",
    "component": "WorkflowUserInputInverse",
    "kebab": "workflow-user-inputInverse",
    "sqlFunctionRef": "p_ifk_workflow_user_input",
    "RestAPI": "workflowUserInputInverse",
    "GraphQL": "workflowUserInputInverse",
    "custom": "workflowUserInputInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:workflow_user_input',
    uniqueEntityId: 'supabase_automation_matrix:workflowUserInput',
    name: 'workflowUserInputInverse',
    displayName: 'Workflow User Input Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflowUserInput'][]>,
    entityName: 'workflowUserInput',
    databaseTable: 'workflow_user_input',
},
        },
        entityNameFormats: {
    "frontend": "fieldComponents",
    "backend": "field_components",
    "database": "field_components",
    "pretty": "Field Components",
    "component": "FieldComponents",
    "kebab": "field-components",
    "sqlFunctionRef": "p_field_components",
    "RestAPI": "fieldComponents",
    "GraphQL": "fieldComponents",
    "custom": "fieldComponents"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'data_broker', relatedColumn: 'field_component_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'container_fields', relatedColumn: 'field_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'workflow_user_input', relatedColumn: 'field_component_id', junctionTable: null }
        ],
    },
fileStructure: {
        schemaType: 'table' as const,
        entityName: 'fileStructure',
        displayName: 'File Structure',
        uniqueTableId: 'supabase_automation_matrix:public:file_structure',
        uniqueEntityId: 'supabase_automation_matrix:fileStructure',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:file_structure:id',
            uniqueFieldId: 'supabase_automation_matrix:fileStructure:id',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "file_structure_id_seq" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'fileStructure',
            databaseTable: 'file_structure',
            foreignKeyReference: null,
            description: '"Id" field for fileStructure. This is a required field. Your entry must be an number data type.',
        },
            bucketId: {
            fieldNameFormats: {
    "frontend": "bucketId",
    "backend": "bucket_id",
    "database": "bucket_id",
    "pretty": "Bucket Id",
    "component": "BucketId",
    "kebab": "bucket-id",
    "sqlFunctionRef": "p_bucket_id",
    "RestAPI": "bucketId",
    "GraphQL": "bucketId",
    "custom": "bucketId"
} as const,
            name: 'bucketId',
            displayName: 'Bucket Id',

            uniqueColumnId: 'supabase_automation_matrix:public:file_structure:bucket_id',
            uniqueFieldId: 'supabase_automation_matrix:fileStructure:bucketId',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fileStructure',
            databaseTable: 'file_structure',
            foreignKeyReference: null,
            description: '"Bucket Id" field for fileStructure. This is a required field. Your entry must be an string data type.',
        },
            path: {
            fieldNameFormats: {
    "frontend": "path",
    "backend": "path",
    "database": "path",
    "pretty": "Path",
    "component": "Path",
    "kebab": "path",
    "sqlFunctionRef": "p_path",
    "RestAPI": "path",
    "GraphQL": "path",
    "custom": "path"
} as const,
            name: 'path',
            displayName: 'Path',

            uniqueColumnId: 'supabase_automation_matrix:public:file_structure:path',
            uniqueFieldId: 'supabase_automation_matrix:fileStructure:path',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fileStructure',
            databaseTable: 'file_structure',
            foreignKeyReference: null,
            description: '"Path" field for fileStructure. This is a required field. Your entry must be an string data type.',
        },
            isFolder: {
            fieldNameFormats: {
    "frontend": "isFolder",
    "backend": "is_folder",
    "database": "is_folder",
    "pretty": "Is Folder",
    "component": "IsFolder",
    "kebab": "is-folder",
    "sqlFunctionRef": "p_is_folder",
    "RestAPI": "isFolder",
    "GraphQL": "isFolder",
    "custom": "isFolder"
} as const,
            name: 'isFolder',
            displayName: 'Is Folder',

            uniqueColumnId: 'supabase_automation_matrix:public:file_structure:is_folder',
            uniqueFieldId: 'supabase_automation_matrix:fileStructure:isFolder',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'fileStructure',
            databaseTable: 'file_structure',
            foreignKeyReference: null,
            description: '"Is Folder" field for fileStructure. This is a required field. Your entry must be an boolean data type.',
        },
            fileId: {
            fieldNameFormats: {
    "frontend": "fileId",
    "backend": "file_id",
    "database": "file_id",
    "pretty": "File Id",
    "component": "FileId",
    "kebab": "file-id",
    "sqlFunctionRef": "p_file_id",
    "RestAPI": "fileId",
    "GraphQL": "fileId",
    "custom": "fileId"
} as const,
            name: 'fileId',
            displayName: 'File Id',

            uniqueColumnId: 'supabase_automation_matrix:public:file_structure:file_id',
            uniqueFieldId: 'supabase_automation_matrix:fileStructure:fileId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fileStructure',
            databaseTable: 'file_structure',
            foreignKeyReference: null,
            description: '"File Id" field for fileStructure. This is an optional field. Your entry must be an uuid data type.',
        },
            parentPath: {
            fieldNameFormats: {
    "frontend": "parentPath",
    "backend": "parent_path",
    "database": "parent_path",
    "pretty": "Parent Path",
    "component": "ParentPath",
    "kebab": "parent-path",
    "sqlFunctionRef": "p_parent_path",
    "RestAPI": "parentPath",
    "GraphQL": "parentPath",
    "custom": "parentPath"
} as const,
            name: 'parentPath',
            displayName: 'Parent Path',

            uniqueColumnId: 'supabase_automation_matrix:public:file_structure:parent_path',
            uniqueFieldId: 'supabase_automation_matrix:fileStructure:parentPath',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fileStructure',
            databaseTable: 'file_structure',
            foreignKeyReference: null,
            description: '"Parent Path" field for fileStructure. This is an optional field. Your entry must be an string data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:file_structure:name',
            uniqueFieldId: 'supabase_automation_matrix:fileStructure:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fileStructure',
            databaseTable: 'file_structure',
            foreignKeyReference: null,
            description: '"Name" field for fileStructure. This is a required field. Your entry must be an string data type.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:file_structure:metadata',
            uniqueFieldId: 'supabase_automation_matrix:fileStructure:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'fileStructure',
            databaseTable: 'file_structure',
            foreignKeyReference: null,
            description: '"Metadata" field for fileStructure. This is an optional field. Your entry must be an object data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:file_structure:created_at',
            uniqueFieldId: 'supabase_automation_matrix:fileStructure:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'fileStructure',
            databaseTable: 'file_structure',
            foreignKeyReference: null,
            description: '"Created At" field for fileStructure. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:file_structure:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:fileStructure:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'fileStructure',
            databaseTable: 'file_structure',
            foreignKeyReference: null,
            description: '"Updated At" field for fileStructure. This is an optional field. Your entry must be an date data type.',
        },
        },
        entityNameFormats: {
    "frontend": "fileStructure",
    "backend": "file_structure",
    "database": "file_structure",
    "pretty": "File Structure",
    "component": "FileStructure",
    "kebab": "file-structure",
    "sqlFunctionRef": "p_file_structure",
    "RestAPI": "fileStructure",
    "GraphQL": "fileStructure",
    "custom": "fileStructure"
},
        relationships: [
            
        ],
    },
flashcardData: {
        schemaType: 'table' as const,
        entityName: 'flashcardData',
        displayName: 'Flashcard Data',
        uniqueTableId: 'supabase_automation_matrix:public:flashcard_data',
        uniqueEntityId: 'supabase_automation_matrix:flashcardData',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Id" field for flashcardData. This is a required field. Your entry must be an uuid data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:user_id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:userId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for flashcardData. This is a required field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            topic: {
            fieldNameFormats: {
    "frontend": "topic",
    "backend": "topic",
    "database": "topic",
    "pretty": "Topic",
    "component": "Topic",
    "kebab": "topic",
    "sqlFunctionRef": "p_topic",
    "RestAPI": "topic",
    "GraphQL": "topic",
    "custom": "topic"
} as const,
            name: 'topic',
            displayName: 'Topic',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:topic',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:topic',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Topic" field for flashcardData. This is an optional field. Your entry must be an string data type.',
        },
            lesson: {
            fieldNameFormats: {
    "frontend": "lesson",
    "backend": "lesson",
    "database": "lesson",
    "pretty": "Lesson",
    "component": "Lesson",
    "kebab": "lesson",
    "sqlFunctionRef": "p_lesson",
    "RestAPI": "lesson",
    "GraphQL": "lesson",
    "custom": "lesson"
} as const,
            name: 'lesson',
            displayName: 'Lesson',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:lesson',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:lesson',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Lesson" field for flashcardData. This is an optional field. Your entry must be an string data type.',
        },
            difficulty: {
            fieldNameFormats: {
    "frontend": "difficulty",
    "backend": "difficulty",
    "database": "difficulty",
    "pretty": "Difficulty",
    "component": "Difficulty",
    "kebab": "difficulty",
    "sqlFunctionRef": "p_difficulty",
    "RestAPI": "difficulty",
    "GraphQL": "difficulty",
    "custom": "difficulty"
} as const,
            name: 'difficulty',
            displayName: 'Difficulty',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:difficulty',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:difficulty',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Difficulty" field for flashcardData. This is an optional field. Your entry must be an string data type.',
        },
            front: {
            fieldNameFormats: {
    "frontend": "front",
    "backend": "front",
    "database": "front",
    "pretty": "Front",
    "component": "Front",
    "kebab": "front",
    "sqlFunctionRef": "p_front",
    "RestAPI": "front",
    "GraphQL": "front",
    "custom": "front"
} as const,
            name: 'front',
            displayName: 'Front',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:front',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:front',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Front" field for flashcardData. This is a required field. Your entry must be an string data type.',
        },
            back: {
            fieldNameFormats: {
    "frontend": "back",
    "backend": "back",
    "database": "back",
    "pretty": "Back",
    "component": "Back",
    "kebab": "back",
    "sqlFunctionRef": "p_back",
    "RestAPI": "back",
    "GraphQL": "back",
    "custom": "back"
} as const,
            name: 'back',
            displayName: 'Back',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:back',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:back',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Back" field for flashcardData. This is a required field. Your entry must be an string data type.',
        },
            example: {
            fieldNameFormats: {
    "frontend": "example",
    "backend": "example",
    "database": "example",
    "pretty": "Example",
    "component": "Example",
    "kebab": "example",
    "sqlFunctionRef": "p_example",
    "RestAPI": "example",
    "GraphQL": "example",
    "custom": "example"
} as const,
            name: 'example',
            displayName: 'Example',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:example',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:example',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Example" field for flashcardData. This is an optional field. Your entry must be an string data type.',
        },
            detailedExplanation: {
            fieldNameFormats: {
    "frontend": "detailedExplanation",
    "backend": "detailed_explanation",
    "database": "detailed_explanation",
    "pretty": "Detailed Explanation",
    "component": "DetailedExplanation",
    "kebab": "detailed-explanation",
    "sqlFunctionRef": "p_detailed_explanation",
    "RestAPI": "detailedExplanation",
    "GraphQL": "detailedExplanation",
    "custom": "detailedExplanation"
} as const,
            name: 'detailedExplanation',
            displayName: 'Detailed Explanation',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:detailed_explanation',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:detailedExplanation',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Detailed Explanation" field for flashcardData. This is an optional field. Your entry must be an string data type.',
        },
            audioExplanation: {
            fieldNameFormats: {
    "frontend": "audioExplanation",
    "backend": "audio_explanation",
    "database": "audio_explanation",
    "pretty": "Audio Explanation",
    "component": "AudioExplanation",
    "kebab": "audio-explanation",
    "sqlFunctionRef": "p_audio_explanation",
    "RestAPI": "audioExplanation",
    "GraphQL": "audioExplanation",
    "custom": "audioExplanation"
} as const,
            name: 'audioExplanation',
            displayName: 'Audio Explanation',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:audio_explanation',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:audioExplanation',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Audio Explanation" field for flashcardData. This is an optional field. Your entry must be an string data type.',
        },
            personalNotes: {
            fieldNameFormats: {
    "frontend": "personalNotes",
    "backend": "personal_notes",
    "database": "personal_notes",
    "pretty": "Personal Notes",
    "component": "PersonalNotes",
    "kebab": "personal-notes",
    "sqlFunctionRef": "p_personal_notes",
    "RestAPI": "personalNotes",
    "GraphQL": "personalNotes",
    "custom": "personalNotes"
} as const,
            name: 'personalNotes',
            displayName: 'Personal Notes',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:personal_notes',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:personalNotes',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Personal Notes" field for flashcardData. This is an optional field. Your entry must be an string data type.',
        },
            isDeleted: {
            fieldNameFormats: {
    "frontend": "isDeleted",
    "backend": "is_deleted",
    "database": "is_deleted",
    "pretty": "Is Deleted",
    "component": "IsDeleted",
    "kebab": "is-deleted",
    "sqlFunctionRef": "p_is_deleted",
    "RestAPI": "isDeleted",
    "GraphQL": "isDeleted",
    "custom": "isDeleted"
} as const,
            name: 'isDeleted',
            displayName: 'Is Deleted',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:is_deleted',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:isDeleted',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Is Deleted" field for flashcardData. This is an optional field. Your entry must be an boolean data type.',
        },
            public: {
            fieldNameFormats: {
    "frontend": "public",
    "backend": "public",
    "database": "public",
    "pretty": "Public",
    "component": "Public",
    "kebab": "public",
    "sqlFunctionRef": "p_public",
    "RestAPI": "public",
    "GraphQL": "public",
    "custom": "public"
} as const,
            name: 'public',
            displayName: 'Public',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:public',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:public',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Public" field for flashcardData. This is an optional field. Your entry must be an boolean data type.',
        },
            sharedWith: {
            fieldNameFormats: {
    "frontend": "sharedWith",
    "backend": "shared_with",
    "database": "shared_with",
    "pretty": "Shared With",
    "component": "SharedWith",
    "kebab": "shared-with",
    "sqlFunctionRef": "p_shared_with",
    "RestAPI": "sharedWith",
    "GraphQL": "sharedWith",
    "custom": "sharedWith"
} as const,
            name: 'sharedWith',
            displayName: 'Shared With',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:shared_with',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:sharedWith',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: true,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_ARRAY' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string[]>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Shared With" field for flashcardData. This is an optional field. Your entry must be an uuid data type. You can enter one or more entries.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:created_at',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Created At" field for flashcardData. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_data:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:flashcardData:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'flashcardData',
            databaseTable: 'flashcard_data',
            foreignKeyReference: null,
            description: '"Updated At" field for flashcardData. This is an optional field. Your entry must be an date data type.',
        },
            flashcardHistoryInverse: {
    fieldNameFormats: {
    "frontend": "flashcardHistoryInverse",
    "backend": "flashcard_history_Inverse",
    "database": "ifk_flashcard_history",
    "pretty": "Flashcard History Inverse",
    "component": "FlashcardHistoryInverse",
    "kebab": "flashcard-historyInverse",
    "sqlFunctionRef": "p_ifk_flashcard_history",
    "RestAPI": "flashcardHistoryInverse",
    "GraphQL": "flashcardHistoryInverse",
    "custom": "flashcardHistoryInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:flashcard_history',
    uniqueEntityId: 'supabase_automation_matrix:flashcardHistory',
    name: 'flashcardHistoryInverse',
    displayName: 'Flashcard History Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['flashcardHistory'][]>,
    entityName: 'flashcardHistory',
    databaseTable: 'flashcard_history',
},
            flashcardSetRelationsInverse: {
    fieldNameFormats: {
    "frontend": "flashcardSetRelationsInverse",
    "backend": "flashcard_set_relations_Inverse",
    "database": "ifk_flashcard_set_relations",
    "pretty": "Flashcard Set Relations Inverse",
    "component": "FlashcardSetRelationsInverse",
    "kebab": "flashcard-set-relationsInverse",
    "sqlFunctionRef": "p_ifk_flashcard_set_relations",
    "RestAPI": "flashcardSetRelationsInverse",
    "GraphQL": "flashcardSetRelationsInverse",
    "custom": "flashcardSetRelationsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:flashcard_set_relations',
    uniqueEntityId: 'supabase_automation_matrix:flashcardSetRelations',
    name: 'flashcardSetRelationsInverse',
    displayName: 'Flashcard Set Relations Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['flashcardSetRelations'][]>,
    entityName: 'flashcardSetRelations',
    databaseTable: 'flashcard_set_relations',
},
            flashcardImagesInverse: {
    fieldNameFormats: {
    "frontend": "flashcardImagesInverse",
    "backend": "flashcard_images_Inverse",
    "database": "ifk_flashcard_images",
    "pretty": "Flashcard Images Inverse",
    "component": "FlashcardImagesInverse",
    "kebab": "flashcard-imagesInverse",
    "sqlFunctionRef": "p_ifk_flashcard_images",
    "RestAPI": "flashcardImagesInverse",
    "GraphQL": "flashcardImagesInverse",
    "custom": "flashcardImagesInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:flashcard_images',
    uniqueEntityId: 'supabase_automation_matrix:flashcardImages',
    name: 'flashcardImagesInverse',
    displayName: 'Flashcard Images Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['flashcardImages'][]>,
    entityName: 'flashcardImages',
    databaseTable: 'flashcard_images',
},
        },
        entityNameFormats: {
    "frontend": "flashcardData",
    "backend": "flashcard_data",
    "database": "flashcard_data",
    "pretty": "Flashcard Data",
    "component": "FlashcardData",
    "kebab": "flashcard-data",
    "sqlFunctionRef": "p_flashcard_data",
    "RestAPI": "flashcardData",
    "GraphQL": "flashcardData",
    "custom": "flashcardData"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'flashcard_history', relatedColumn: 'flashcard_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'flashcard_set_relations', relatedColumn: 'flashcard_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'flashcard_images', relatedColumn: 'flashcard_id', junctionTable: null }
        ],
    },
flashcardHistory: {
        schemaType: 'table' as const,
        entityName: 'flashcardHistory',
        displayName: 'Flashcard History',
        uniqueTableId: 'supabase_automation_matrix:public:flashcard_history',
        uniqueEntityId: 'supabase_automation_matrix:flashcardHistory',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_history:id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardHistory:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardHistory',
            databaseTable: 'flashcard_history',
            foreignKeyReference: null,
            description: '"Id" field for flashcardHistory. This is a required field. Your entry must be an uuid data type.',
        },
            flashcardId: {
            fieldNameFormats: {
    "frontend": "flashcardId",
    "backend": "flashcard_id",
    "database": "flashcard_id",
    "pretty": "Flashcard Id",
    "component": "FlashcardId",
    "kebab": "flashcard-id",
    "sqlFunctionRef": "p_flashcard_id",
    "RestAPI": "flashcardId",
    "GraphQL": "flashcardId",
    "custom": "flashcardId"
} as const,
            name: 'flashcardId',
            displayName: 'Flashcard Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_history:flashcard_id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardHistory:flashcardId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardHistory',
            databaseTable: 'flashcard_history',
            foreignKeyReference: {"table": "flashcard_data", "column": "id", "entity": "flashcardData", "field": "id"},
            description: '"Flashcard Id" field for flashcardHistory. This is an optional field. Your entry must be an uuid data type. This field is a reference to a flashcardData.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_history:user_id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardHistory:userId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardHistory',
            databaseTable: 'flashcard_history',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for flashcardHistory. This is a required field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            reviewCount: {
            fieldNameFormats: {
    "frontend": "reviewCount",
    "backend": "review_count",
    "database": "review_count",
    "pretty": "Review Count",
    "component": "ReviewCount",
    "kebab": "review-count",
    "sqlFunctionRef": "p_review_count",
    "RestAPI": "reviewCount",
    "GraphQL": "reviewCount",
    "custom": "reviewCount"
} as const,
            name: 'reviewCount',
            displayName: 'Review Count',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_history:review_count',
            uniqueFieldId: 'supabase_automation_matrix:flashcardHistory:reviewCount',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "0" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'flashcardHistory',
            databaseTable: 'flashcard_history',
            foreignKeyReference: null,
            description: '"Review Count" field for flashcardHistory. This is an optional field. Your entry must be an number data type.',
        },
            correctCount: {
            fieldNameFormats: {
    "frontend": "correctCount",
    "backend": "correct_count",
    "database": "correct_count",
    "pretty": "Correct Count",
    "component": "CorrectCount",
    "kebab": "correct-count",
    "sqlFunctionRef": "p_correct_count",
    "RestAPI": "correctCount",
    "GraphQL": "correctCount",
    "custom": "correctCount"
} as const,
            name: 'correctCount',
            displayName: 'Correct Count',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_history:correct_count',
            uniqueFieldId: 'supabase_automation_matrix:flashcardHistory:correctCount',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "0" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'flashcardHistory',
            databaseTable: 'flashcard_history',
            foreignKeyReference: null,
            description: '"Correct Count" field for flashcardHistory. This is an optional field. Your entry must be an number data type.',
        },
            incorrectCount: {
            fieldNameFormats: {
    "frontend": "incorrectCount",
    "backend": "incorrect_count",
    "database": "incorrect_count",
    "pretty": "Incorrect Count",
    "component": "IncorrectCount",
    "kebab": "incorrect-count",
    "sqlFunctionRef": "p_incorrect_count",
    "RestAPI": "incorrectCount",
    "GraphQL": "incorrectCount",
    "custom": "incorrectCount"
} as const,
            name: 'incorrectCount',
            displayName: 'Incorrect Count',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_history:incorrect_count',
            uniqueFieldId: 'supabase_automation_matrix:flashcardHistory:incorrectCount',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "0" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'flashcardHistory',
            databaseTable: 'flashcard_history',
            foreignKeyReference: null,
            description: '"Incorrect Count" field for flashcardHistory. This is an optional field. Your entry must be an number data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_history:created_at',
            uniqueFieldId: 'supabase_automation_matrix:flashcardHistory:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'flashcardHistory',
            databaseTable: 'flashcard_history',
            foreignKeyReference: null,
            description: '"Created At" field for flashcardHistory. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_history:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:flashcardHistory:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'flashcardHistory',
            databaseTable: 'flashcard_history',
            foreignKeyReference: null,
            description: '"Updated At" field for flashcardHistory. This is an optional field. Your entry must be an date data type.',
        },
            flashcardDataReference: {
    fieldNameFormats: {
    "frontend": "flashcardDataReference",
    "backend": "flashcard_data_reference",
    "database": "ref_flashcard_data",
    "pretty": "Flashcard Data Reference",
    "component": "FlashcardDataReference",
    "kebab": "flashcard-dataReference",
    "sqlFunctionRef": "p_ref_flashcard_data",
    "RestAPI": "flashcardDataReference",
    "GraphQL": "flashcardDataReference",
    "custom": "flashcardDataReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:flashcard_data:id',
    uniqueFieldId: 'supabase_automation_matrix:flashcardData:id',
    name: 'flashcardDataReference',
    displayName: 'Flashcard Data Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['flashcardData'][]>,
    entityName: 'flashcardData',
    databaseTable: 'flashcard_data',
    relationshipMap: {flashcard_data: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "flashcardHistory",
    "backend": "flashcard_history",
    "database": "flashcard_history",
    "pretty": "Flashcard History",
    "component": "FlashcardHistory",
    "kebab": "flashcard-history",
    "sqlFunctionRef": "p_flashcard_history",
    "RestAPI": "flashcardHistory",
    "GraphQL": "flashcardHistory",
    "custom": "flashcardHistory"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'flashcard_id', relatedTable: 'flashcard_data', relatedColumn: 'id', junctionTable: null }
        ],
    },
flashcardImages: {
        schemaType: 'table' as const,
        entityName: 'flashcardImages',
        displayName: 'Flashcard Images',
        uniqueTableId: 'supabase_automation_matrix:public:flashcard_images',
        uniqueEntityId: 'supabase_automation_matrix:flashcardImages',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'fileName', databaseFieldName: 'file_name' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_images:id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardImages:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardImages',
            databaseTable: 'flashcard_images',
            foreignKeyReference: null,
            description: '"Id" field for flashcardImages. This is a required field. Your entry must be an uuid data type.',
        },
            flashcardId: {
            fieldNameFormats: {
    "frontend": "flashcardId",
    "backend": "flashcard_id",
    "database": "flashcard_id",
    "pretty": "Flashcard Id",
    "component": "FlashcardId",
    "kebab": "flashcard-id",
    "sqlFunctionRef": "p_flashcard_id",
    "RestAPI": "flashcardId",
    "GraphQL": "flashcardId",
    "custom": "flashcardId"
} as const,
            name: 'flashcardId',
            displayName: 'Flashcard Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_images:flashcard_id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardImages:flashcardId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardImages',
            databaseTable: 'flashcard_images',
            foreignKeyReference: {"table": "flashcard_data", "column": "id", "entity": "flashcardData", "field": "id"},
            description: '"Flashcard Id" field for flashcardImages. This is an optional field. Your entry must be an uuid data type. This field is a reference to a flashcardData.',
        },
            filePath: {
            fieldNameFormats: {
    "frontend": "filePath",
    "backend": "file_path",
    "database": "file_path",
    "pretty": "File Path",
    "component": "FilePath",
    "kebab": "file-path",
    "sqlFunctionRef": "p_file_path",
    "RestAPI": "filePath",
    "GraphQL": "filePath",
    "custom": "filePath"
} as const,
            name: 'filePath',
            displayName: 'File Path',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_images:file_path',
            uniqueFieldId: 'supabase_automation_matrix:flashcardImages:filePath',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardImages',
            databaseTable: 'flashcard_images',
            foreignKeyReference: null,
            description: '"File Path" field for flashcardImages. This is a required field. Your entry must be an string data type.',
        },
            fileName: {
            fieldNameFormats: {
    "frontend": "fileName",
    "backend": "file_name",
    "database": "file_name",
    "pretty": "File Name",
    "component": "FileName",
    "kebab": "file-name",
    "sqlFunctionRef": "p_file_name",
    "RestAPI": "fileName",
    "GraphQL": "fileName",
    "custom": "fileName"
} as const,
            name: 'fileName',
            displayName: 'File Name',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_images:file_name',
            uniqueFieldId: 'supabase_automation_matrix:flashcardImages:fileName',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardImages',
            databaseTable: 'flashcard_images',
            foreignKeyReference: null,
            description: '"File Name" field for flashcardImages. This is a required field. Your entry must be an string data type.',
        },
            mimeType: {
            fieldNameFormats: {
    "frontend": "mimeType",
    "backend": "mime_type",
    "database": "mime_type",
    "pretty": "Mime Type",
    "component": "MimeType",
    "kebab": "mime-type",
    "sqlFunctionRef": "p_mime_type",
    "RestAPI": "mimeType",
    "GraphQL": "mimeType",
    "custom": "mimeType"
} as const,
            name: 'mimeType',
            displayName: 'Mime Type',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_images:mime_type',
            uniqueFieldId: 'supabase_automation_matrix:flashcardImages:mimeType',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardImages',
            databaseTable: 'flashcard_images',
            foreignKeyReference: null,
            description: '"Mime Type" field for flashcardImages. This is a required field. Your entry must be an string data type.',
        },
            size: {
            fieldNameFormats: {
    "frontend": "size",
    "backend": "size",
    "database": "size",
    "pretty": "Size",
    "component": "Size",
    "kebab": "size",
    "sqlFunctionRef": "p_size",
    "RestAPI": "size",
    "GraphQL": "size",
    "custom": "size"
} as const,
            name: 'size',
            displayName: 'Size',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_images:size',
            uniqueFieldId: 'supabase_automation_matrix:flashcardImages:size',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'flashcardImages',
            databaseTable: 'flashcard_images',
            foreignKeyReference: null,
            description: '"Size" field for flashcardImages. This is a required field. Your entry must be an number data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_images:created_at',
            uniqueFieldId: 'supabase_automation_matrix:flashcardImages:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'flashcardImages',
            databaseTable: 'flashcard_images',
            foreignKeyReference: null,
            description: '"Created At" field for flashcardImages. This is an optional field. Your entry must be an date data type.',
        },
            flashcardDataReference: {
    fieldNameFormats: {
    "frontend": "flashcardDataReference",
    "backend": "flashcard_data_reference",
    "database": "ref_flashcard_data",
    "pretty": "Flashcard Data Reference",
    "component": "FlashcardDataReference",
    "kebab": "flashcard-dataReference",
    "sqlFunctionRef": "p_ref_flashcard_data",
    "RestAPI": "flashcardDataReference",
    "GraphQL": "flashcardDataReference",
    "custom": "flashcardDataReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:flashcard_data:id',
    uniqueFieldId: 'supabase_automation_matrix:flashcardData:id',
    name: 'flashcardDataReference',
    displayName: 'Flashcard Data Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['flashcardData'][]>,
    entityName: 'flashcardData',
    databaseTable: 'flashcard_data',
    relationshipMap: {flashcard_data: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "flashcardImages",
    "backend": "flashcard_images",
    "database": "flashcard_images",
    "pretty": "Flashcard Images",
    "component": "FlashcardImages",
    "kebab": "flashcard-images",
    "sqlFunctionRef": "p_flashcard_images",
    "RestAPI": "flashcardImages",
    "GraphQL": "flashcardImages",
    "custom": "flashcardImages"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'flashcard_id', relatedTable: 'flashcard_data', relatedColumn: 'id', junctionTable: null }
        ],
    },
flashcardSetRelations: {
        schemaType: 'table' as const,
        entityName: 'flashcardSetRelations',
        displayName: 'Flashcard Set Relations',
        uniqueTableId: 'supabase_automation_matrix:public:flashcard_set_relations',
        uniqueEntityId: 'supabase_automation_matrix:flashcardSetRelations',
        primaryKey: 'flashcardId, setId',
        primaryKeyMetadata: {
    "type": "composite",
    "fields": [
        "flashcardId",
        "setId"
    ],
    "database_fields": [
        "flashcard_id",
        "set_id"
    ],
    "where_template": {
        "flashcard_id": null,
        "set_id": null
    }
},
        displayFieldMetadata: { fieldName: 'flashcardId', databaseFieldName: 'flashcard_id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            flashcardId: {
            fieldNameFormats: {
    "frontend": "flashcardId",
    "backend": "flashcard_id",
    "database": "flashcard_id",
    "pretty": "Flashcard Id",
    "component": "FlashcardId",
    "kebab": "flashcard-id",
    "sqlFunctionRef": "p_flashcard_id",
    "RestAPI": "flashcardId",
    "GraphQL": "flashcardId",
    "custom": "flashcardId"
} as const,
            name: 'flashcardId',
            displayName: 'Flashcard Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_set_relations:flashcard_id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSetRelations:flashcardId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardSetRelations',
            databaseTable: 'flashcard_set_relations',
            foreignKeyReference: {"table": "flashcard_data", "column": "id", "entity": "flashcardData", "field": "id"},
            description: '"Flashcard Id" field for flashcardSetRelations. This is a required field. Your entry must be an uuid data type. This field is a reference to a flashcardData.',
        },
            setId: {
            fieldNameFormats: {
    "frontend": "setId",
    "backend": "set_id",
    "database": "set_id",
    "pretty": "Set Id",
    "component": "SetId",
    "kebab": "set-id",
    "sqlFunctionRef": "p_set_id",
    "RestAPI": "setId",
    "GraphQL": "setId",
    "custom": "setId"
} as const,
            name: 'setId',
            displayName: 'Set Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_set_relations:set_id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSetRelations:setId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardSetRelations',
            databaseTable: 'flashcard_set_relations',
            foreignKeyReference: {"table": "flashcard_sets", "column": "set_id", "entity": "flashcardSets", "field": "setId"},
            description: '"Set Id" field for flashcardSetRelations. This is a required field. Your entry must be an uuid data type. This field is a reference to a flashcardSets.',
        },
            order: {
            fieldNameFormats: {
    "frontend": "order",
    "backend": "order",
    "database": "order",
    "pretty": "Order",
    "component": "Order",
    "kebab": "order",
    "sqlFunctionRef": "p_order",
    "RestAPI": "order",
    "GraphQL": "order",
    "custom": "order"
} as const,
            name: 'order',
            displayName: 'Order',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_set_relations:order',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSetRelations:order',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'flashcardSetRelations',
            databaseTable: 'flashcard_set_relations',
            foreignKeyReference: null,
            description: '"Order" field for flashcardSetRelations. This is an optional field. Your entry must be an number data type.',
        },
            flashcardDataReference: {
    fieldNameFormats: {
    "frontend": "flashcardDataReference",
    "backend": "flashcard_data_reference",
    "database": "ref_flashcard_data",
    "pretty": "Flashcard Data Reference",
    "component": "FlashcardDataReference",
    "kebab": "flashcard-dataReference",
    "sqlFunctionRef": "p_ref_flashcard_data",
    "RestAPI": "flashcardDataReference",
    "GraphQL": "flashcardDataReference",
    "custom": "flashcardDataReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:flashcard_data:flashcardId, setId',
    uniqueFieldId: 'supabase_automation_matrix:flashcardData:flashcardIdSetId',
    name: 'flashcardDataReference',
    displayName: 'Flashcard Data Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['flashcardData'][]>,
    entityName: 'flashcardData',
    databaseTable: 'flashcard_data',
    relationshipMap: {flashcard_data: 'id', flashcard_sets: 'set_id'},
},
            flashcardSetsReference: {
    fieldNameFormats: {
    "frontend": "flashcardSetsReference",
    "backend": "flashcard_sets_reference",
    "database": "ref_flashcard_sets",
    "pretty": "Flashcard Sets Reference",
    "component": "FlashcardSetsReference",
    "kebab": "flashcard-setsReference",
    "sqlFunctionRef": "p_ref_flashcard_sets",
    "RestAPI": "flashcardSetsReference",
    "GraphQL": "flashcardSetsReference",
    "custom": "flashcardSetsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:flashcard_sets:flashcardId, setId',
    uniqueFieldId: 'supabase_automation_matrix:flashcardSets:flashcardIdSetId',
    name: 'flashcardSetsReference',
    displayName: 'Flashcard Sets Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['flashcardSets'][]>,
    entityName: 'flashcardSets',
    databaseTable: 'flashcard_sets',
    relationshipMap: {flashcard_data: 'id', flashcard_sets: 'set_id'},
},
        },
        entityNameFormats: {
    "frontend": "flashcardSetRelations",
    "backend": "flashcard_set_relations",
    "database": "flashcard_set_relations",
    "pretty": "Flashcard Set Relations",
    "component": "FlashcardSetRelations",
    "kebab": "flashcard-set-relations",
    "sqlFunctionRef": "p_flashcard_set_relations",
    "RestAPI": "flashcardSetRelations",
    "GraphQL": "flashcardSetRelations",
    "custom": "flashcardSetRelations"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'flashcard_id', relatedTable: 'flashcard_data', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'set_id', relatedTable: 'flashcard_sets', relatedColumn: 'set_id', junctionTable: null }
        ],
    },
flashcardSets: {
        schemaType: 'table' as const,
        entityName: 'flashcardSets',
        displayName: 'Flashcard Sets',
        uniqueTableId: 'supabase_automation_matrix:public:flashcard_sets',
        uniqueEntityId: 'supabase_automation_matrix:flashcardSets',
        primaryKey: 'setId',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "setId"
    ],
    "database_fields": [
        "set_id"
    ],
    "where_template": {
        "set_id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            setId: {
            fieldNameFormats: {
    "frontend": "setId",
    "backend": "set_id",
    "database": "set_id",
    "pretty": "Set Id",
    "component": "SetId",
    "kebab": "set-id",
    "sqlFunctionRef": "p_set_id",
    "RestAPI": "setId",
    "GraphQL": "setId",
    "custom": "setId"
} as const,
            name: 'setId',
            displayName: 'Set Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:set_id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:setId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: null,
            description: '"Set Id" field for flashcardSets. This is a required field. Your entry must be an uuid data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:user_id',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:userId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for flashcardSets. This is a required field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:name',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: null,
            description: '"Name" field for flashcardSets. This is a required field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:created_at',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: null,
            description: '"Created At" field for flashcardSets. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: null,
            description: '"Updated At" field for flashcardSets. This is an optional field. Your entry must be an date data type.',
        },
            sharedWith: {
            fieldNameFormats: {
    "frontend": "sharedWith",
    "backend": "shared_with",
    "database": "shared_with",
    "pretty": "Shared With",
    "component": "SharedWith",
    "kebab": "shared-with",
    "sqlFunctionRef": "p_shared_with",
    "RestAPI": "sharedWith",
    "GraphQL": "sharedWith",
    "custom": "sharedWith"
} as const,
            name: 'sharedWith',
            displayName: 'Shared With',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:shared_with',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:sharedWith',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: true,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_ARRAY' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string[]>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: null,
            description: '"Shared With" field for flashcardSets. This is an optional field. Your entry must be an uuid data type. You can enter one or more entries.',
        },
            public: {
            fieldNameFormats: {
    "frontend": "public",
    "backend": "public",
    "database": "public",
    "pretty": "Public",
    "component": "Public",
    "kebab": "public",
    "sqlFunctionRef": "p_public",
    "RestAPI": "public",
    "GraphQL": "public",
    "custom": "public"
} as const,
            name: 'public',
            displayName: 'Public',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:public',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:public',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: null,
            description: '"Public" field for flashcardSets. This is an optional field. Your entry must be an boolean data type.',
        },
            topic: {
            fieldNameFormats: {
    "frontend": "topic",
    "backend": "topic",
    "database": "topic",
    "pretty": "Topic",
    "component": "Topic",
    "kebab": "topic",
    "sqlFunctionRef": "p_topic",
    "RestAPI": "topic",
    "GraphQL": "topic",
    "custom": "topic"
} as const,
            name: 'topic',
            displayName: 'Topic',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:topic',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:topic',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: null,
            description: '"Topic" field for flashcardSets. This is an optional field. Your entry must be an string data type.',
        },
            lesson: {
            fieldNameFormats: {
    "frontend": "lesson",
    "backend": "lesson",
    "database": "lesson",
    "pretty": "Lesson",
    "component": "Lesson",
    "kebab": "lesson",
    "sqlFunctionRef": "p_lesson",
    "RestAPI": "lesson",
    "GraphQL": "lesson",
    "custom": "lesson"
} as const,
            name: 'lesson',
            displayName: 'Lesson',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:lesson',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:lesson',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: null,
            description: '"Lesson" field for flashcardSets. This is an optional field. Your entry must be an string data type.',
        },
            difficulty: {
            fieldNameFormats: {
    "frontend": "difficulty",
    "backend": "difficulty",
    "database": "difficulty",
    "pretty": "Difficulty",
    "component": "Difficulty",
    "kebab": "difficulty",
    "sqlFunctionRef": "p_difficulty",
    "RestAPI": "difficulty",
    "GraphQL": "difficulty",
    "custom": "difficulty"
} as const,
            name: 'difficulty',
            displayName: 'Difficulty',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:difficulty',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:difficulty',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: null,
            description: '"Difficulty" field for flashcardSets. This is an optional field. Your entry must be an string data type.',
        },
            audioOverview: {
            fieldNameFormats: {
    "frontend": "audioOverview",
    "backend": "audio_overview",
    "database": "audio_overview",
    "pretty": "Audio Overview",
    "component": "AudioOverview",
    "kebab": "audio-overview",
    "sqlFunctionRef": "p_audio_overview",
    "RestAPI": "audioOverview",
    "GraphQL": "audioOverview",
    "custom": "audioOverview"
} as const,
            name: 'audioOverview',
            displayName: 'Audio Overview',

            uniqueColumnId: 'supabase_automation_matrix:public:flashcard_sets:audio_overview',
            uniqueFieldId: 'supabase_automation_matrix:flashcardSets:audioOverview',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'flashcardSets',
            databaseTable: 'flashcard_sets',
            foreignKeyReference: null,
            description: '"Audio Overview" field for flashcardSets. This is an optional field. Your entry must be an string data type.',
        },
            flashcardSetRelationsInverse: {
    fieldNameFormats: {
    "frontend": "flashcardSetRelationsInverse",
    "backend": "flashcard_set_relations_Inverse",
    "database": "ifk_flashcard_set_relations",
    "pretty": "Flashcard Set Relations Inverse",
    "component": "FlashcardSetRelationsInverse",
    "kebab": "flashcard-set-relationsInverse",
    "sqlFunctionRef": "p_ifk_flashcard_set_relations",
    "RestAPI": "flashcardSetRelationsInverse",
    "GraphQL": "flashcardSetRelationsInverse",
    "custom": "flashcardSetRelationsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:flashcard_set_relations',
    uniqueEntityId: 'supabase_automation_matrix:flashcardSetRelations',
    name: 'flashcardSetRelationsInverse',
    displayName: 'Flashcard Set Relations Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['flashcardSetRelations'][]>,
    entityName: 'flashcardSetRelations',
    databaseTable: 'flashcard_set_relations',
},
        },
        entityNameFormats: {
    "frontend": "flashcardSets",
    "backend": "flashcard_sets",
    "database": "flashcard_sets",
    "pretty": "Flashcard Sets",
    "component": "FlashcardSets",
    "kebab": "flashcard-sets",
    "sqlFunctionRef": "p_flashcard_sets",
    "RestAPI": "flashcardSets",
    "GraphQL": "flashcardSets",
    "custom": "flashcardSets"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'set_id', relatedTable: 'flashcard_set_relations', relatedColumn: 'set_id', junctionTable: null }
        ],
    },
fullSpectrumPositions: {
        schemaType: 'table' as const,
        entityName: 'fullSpectrumPositions',
        displayName: 'Full Spectrum Positions',
        uniqueTableId: 'supabase_automation_matrix:public:full_spectrum_positions',
        uniqueEntityId: 'supabase_automation_matrix:fullSpectrumPositions',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'title', databaseFieldName: 'title' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:full_spectrum_positions:id',
            uniqueFieldId: 'supabase_automation_matrix:fullSpectrumPositions:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fullSpectrumPositions',
            databaseTable: 'full_spectrum_positions',
            foreignKeyReference: null,
            description: '"Id" field for fullSpectrumPositions. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:full_spectrum_positions:created_at',
            uniqueFieldId: 'supabase_automation_matrix:fullSpectrumPositions:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TIME_PICKER' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'fullSpectrumPositions',
            databaseTable: 'full_spectrum_positions',
            foreignKeyReference: null,
            description: '"Created At" field for fullSpectrumPositions. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:full_spectrum_positions:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:fullSpectrumPositions:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TIME_PICKER' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'fullSpectrumPositions',
            databaseTable: 'full_spectrum_positions',
            foreignKeyReference: null,
            description: '"Updated At" field for fullSpectrumPositions. This is an optional field. Your entry must be an date data type.',
        },
            title: {
            fieldNameFormats: {
    "frontend": "title",
    "backend": "title",
    "database": "title",
    "pretty": "Title",
    "component": "Title",
    "kebab": "title",
    "sqlFunctionRef": "p_title",
    "RestAPI": "title",
    "GraphQL": "title",
    "custom": "title"
} as const,
            name: 'title',
            displayName: 'Title',

            uniqueColumnId: 'supabase_automation_matrix:public:full_spectrum_positions:title',
            uniqueFieldId: 'supabase_automation_matrix:fullSpectrumPositions:title',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fullSpectrumPositions',
            databaseTable: 'full_spectrum_positions',
            foreignKeyReference: null,
            description: '"Title" field for fullSpectrumPositions. This is an optional field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:full_spectrum_positions:description',
            uniqueFieldId: 'supabase_automation_matrix:fullSpectrumPositions:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fullSpectrumPositions',
            databaseTable: 'full_spectrum_positions',
            foreignKeyReference: null,
            description: '"Description" field for fullSpectrumPositions. This is an optional field. Your entry must be an string data type.',
        },
            alternateTitles: {
            fieldNameFormats: {
    "frontend": "alternateTitles",
    "backend": "alternate_titles",
    "database": "alternate_titles",
    "pretty": "Alternate Titles",
    "component": "AlternateTitles",
    "kebab": "alternate-titles",
    "sqlFunctionRef": "p_alternate_titles",
    "RestAPI": "alternateTitles",
    "GraphQL": "alternateTitles",
    "custom": "alternateTitles"
} as const,
            name: 'alternateTitles',
            displayName: 'Alternate Titles',

            uniqueColumnId: 'supabase_automation_matrix:public:full_spectrum_positions:alternate_titles',
            uniqueFieldId: 'supabase_automation_matrix:fullSpectrumPositions:alternateTitles',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fullSpectrumPositions',
            databaseTable: 'full_spectrum_positions',
            foreignKeyReference: null,
            description: '"Alternate Titles" field for fullSpectrumPositions. This is an optional field. Your entry must be an string data type.',
        },
            qualifications: {
            fieldNameFormats: {
    "frontend": "qualifications",
    "backend": "qualifications",
    "database": "qualifications",
    "pretty": "Qualifications",
    "component": "Qualifications",
    "kebab": "qualifications",
    "sqlFunctionRef": "p_qualifications",
    "RestAPI": "qualifications",
    "GraphQL": "qualifications",
    "custom": "qualifications"
} as const,
            name: 'qualifications',
            displayName: 'Qualifications',

            uniqueColumnId: 'supabase_automation_matrix:public:full_spectrum_positions:qualifications',
            uniqueFieldId: 'supabase_automation_matrix:fullSpectrumPositions:qualifications',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fullSpectrumPositions',
            databaseTable: 'full_spectrum_positions',
            foreignKeyReference: null,
            description: '"Qualifications" field for fullSpectrumPositions. This is an optional field. Your entry must be an string data type.',
        },
            sizzleQuestions: {
            fieldNameFormats: {
    "frontend": "sizzleQuestions",
    "backend": "sizzle_questions",
    "database": "sizzle_questions",
    "pretty": "Sizzle Questions",
    "component": "SizzleQuestions",
    "kebab": "sizzle-questions",
    "sqlFunctionRef": "p_sizzle_questions",
    "RestAPI": "sizzleQuestions",
    "GraphQL": "sizzleQuestions",
    "custom": "sizzleQuestions"
} as const,
            name: 'sizzleQuestions',
            displayName: 'Sizzle Questions',

            uniqueColumnId: 'supabase_automation_matrix:public:full_spectrum_positions:sizzle_questions',
            uniqueFieldId: 'supabase_automation_matrix:fullSpectrumPositions:sizzleQuestions',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fullSpectrumPositions',
            databaseTable: 'full_spectrum_positions',
            foreignKeyReference: null,
            description: '"Sizzle Questions" field for fullSpectrumPositions. This is an optional field. Your entry must be an string data type.',
        },
            redFlags: {
            fieldNameFormats: {
    "frontend": "redFlags",
    "backend": "red_flags",
    "database": "red_flags",
    "pretty": "Red Flags",
    "component": "RedFlags",
    "kebab": "red-flags",
    "sqlFunctionRef": "p_red_flags",
    "RestAPI": "redFlags",
    "GraphQL": "redFlags",
    "custom": "redFlags"
} as const,
            name: 'redFlags',
            displayName: 'Red Flags',

            uniqueColumnId: 'supabase_automation_matrix:public:full_spectrum_positions:red_flags',
            uniqueFieldId: 'supabase_automation_matrix:fullSpectrumPositions:redFlags',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fullSpectrumPositions',
            databaseTable: 'full_spectrum_positions',
            foreignKeyReference: null,
            description: '"Red Flags" field for fullSpectrumPositions. This is an optional field. Your entry must be an string data type.',
        },
            additionalDetails: {
            fieldNameFormats: {
    "frontend": "additionalDetails",
    "backend": "additional_details",
    "database": "additional_details",
    "pretty": "Additional Details",
    "component": "AdditionalDetails",
    "kebab": "additional-details",
    "sqlFunctionRef": "p_additional_details",
    "RestAPI": "additionalDetails",
    "GraphQL": "additionalDetails",
    "custom": "additionalDetails"
} as const,
            name: 'additionalDetails',
            displayName: 'Additional Details',

            uniqueColumnId: 'supabase_automation_matrix:public:full_spectrum_positions:additional_details',
            uniqueFieldId: 'supabase_automation_matrix:fullSpectrumPositions:additionalDetails',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'fullSpectrumPositions',
            databaseTable: 'full_spectrum_positions',
            foreignKeyReference: null,
            description: '"Additional Details" field for fullSpectrumPositions. This is an optional field. Your entry must be an string data type.',
        },
        },
        entityNameFormats: {
    "frontend": "fullSpectrumPositions",
    "backend": "full_spectrum_positions",
    "database": "full_spectrum_positions",
    "pretty": "Full Spectrum Positions",
    "component": "FullSpectrumPositions",
    "kebab": "full-spectrum-positions",
    "sqlFunctionRef": "p_full_spectrum_positions",
    "RestAPI": "fullSpectrumPositions",
    "GraphQL": "fullSpectrumPositions",
    "custom": "fullSpectrumPositions"
},
        relationships: [
            
        ],
    },
htmlExtractions: {
        schemaType: 'table' as const,
        entityName: 'htmlExtractions',
        displayName: 'Html Extractions',
        uniqueTableId: 'supabase_automation_matrix:public:html_extractions',
        uniqueEntityId: 'supabase_automation_matrix:htmlExtractions',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'title', databaseFieldName: 'title' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:id',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:id',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "html_extractions_id_seq" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "bigint",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"Id" field for htmlExtractions. This is a required field. Your entry must be an number data type.',
        },
            url: {
            fieldNameFormats: {
    "frontend": "url",
    "backend": "url",
    "database": "url",
    "pretty": "Url",
    "component": "Url",
    "kebab": "url",
    "sqlFunctionRef": "p_url",
    "RestAPI": "url",
    "GraphQL": "url",
    "custom": "url"
} as const,
            name: 'url',
            displayName: 'Url',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:url',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:url',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"Url" field for htmlExtractions. This is a required field. Your entry must be an string data type.',
        },
            title: {
            fieldNameFormats: {
    "frontend": "title",
    "backend": "title",
    "database": "title",
    "pretty": "Title",
    "component": "Title",
    "kebab": "title",
    "sqlFunctionRef": "p_title",
    "RestAPI": "title",
    "GraphQL": "title",
    "custom": "title"
} as const,
            name: 'title',
            displayName: 'Title',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:title',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:title',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"Title" field for htmlExtractions. This is an optional field. Your entry must be an string data type.',
        },
            htmlContent: {
            fieldNameFormats: {
    "frontend": "htmlContent",
    "backend": "html_content",
    "database": "html_content",
    "pretty": "Html Content",
    "component": "HtmlContent",
    "kebab": "html-content",
    "sqlFunctionRef": "p_html_content",
    "RestAPI": "htmlContent",
    "GraphQL": "htmlContent",
    "custom": "htmlContent"
} as const,
            name: 'htmlContent',
            displayName: 'Html Content',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:html_content',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:htmlContent',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"Html Content" field for htmlExtractions. This is a required field. Your entry must be an string data type.',
        },
            metaDescription: {
            fieldNameFormats: {
    "frontend": "metaDescription",
    "backend": "meta_description",
    "database": "meta_description",
    "pretty": "Meta Description",
    "component": "MetaDescription",
    "kebab": "meta-description",
    "sqlFunctionRef": "p_meta_description",
    "RestAPI": "metaDescription",
    "GraphQL": "metaDescription",
    "custom": "metaDescription"
} as const,
            name: 'metaDescription',
            displayName: 'Meta Description',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:meta_description',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:metaDescription',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"Meta Description" field for htmlExtractions. This is an optional field. Your entry must be an string data type.',
        },
            metaKeywords: {
            fieldNameFormats: {
    "frontend": "metaKeywords",
    "backend": "meta_keywords",
    "database": "meta_keywords",
    "pretty": "Meta Keywords",
    "component": "MetaKeywords",
    "kebab": "meta-keywords",
    "sqlFunctionRef": "p_meta_keywords",
    "RestAPI": "metaKeywords",
    "GraphQL": "metaKeywords",
    "custom": "metaKeywords"
} as const,
            name: 'metaKeywords',
            displayName: 'Meta Keywords',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:meta_keywords',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:metaKeywords',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"Meta Keywords" field for htmlExtractions. This is an optional field. Your entry must be an string data type.',
        },
            contentLength: {
            fieldNameFormats: {
    "frontend": "contentLength",
    "backend": "content_length",
    "database": "content_length",
    "pretty": "Content Length",
    "component": "ContentLength",
    "kebab": "content-length",
    "sqlFunctionRef": "p_content_length",
    "RestAPI": "contentLength",
    "GraphQL": "contentLength",
    "custom": "contentLength"
} as const,
            name: 'contentLength',
            displayName: 'Content Length',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:content_length',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:contentLength',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"Content Length" field for htmlExtractions. This is an optional field. Your entry must be an number data type.',
        },
            extractedAt: {
            fieldNameFormats: {
    "frontend": "extractedAt",
    "backend": "extracted_at",
    "database": "extracted_at",
    "pretty": "Extracted At",
    "component": "ExtractedAt",
    "kebab": "extracted-at",
    "sqlFunctionRef": "p_extracted_at",
    "RestAPI": "extractedAt",
    "GraphQL": "extractedAt",
    "custom": "extractedAt"
} as const,
            name: 'extractedAt',
            displayName: 'Extracted At',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:extracted_at',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:extractedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"Extracted At" field for htmlExtractions. This is an optional field. Your entry must be an date data type.',
        },
            userAgent: {
            fieldNameFormats: {
    "frontend": "userAgent",
    "backend": "user_agent",
    "database": "user_agent",
    "pretty": "User Agent",
    "component": "UserAgent",
    "kebab": "user-agent",
    "sqlFunctionRef": "p_user_agent",
    "RestAPI": "userAgent",
    "GraphQL": "userAgent",
    "custom": "userAgent"
} as const,
            name: 'userAgent',
            displayName: 'User Agent',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:user_agent',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:userAgent',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"User Agent" field for htmlExtractions. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:created_at',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"Created At" field for htmlExtractions. This is an optional field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:html_extractions:user_id',
            uniqueFieldId: 'supabase_automation_matrix:htmlExtractions:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'htmlExtractions',
            databaseTable: 'html_extractions',
            foreignKeyReference: null,
            description: '"User Id" field for htmlExtractions. This is an optional field. Your entry must be an uuid data type.',
        },
        },
        entityNameFormats: {
    "frontend": "htmlExtractions",
    "backend": "html_extractions",
    "database": "html_extractions",
    "pretty": "Html Extractions",
    "component": "HtmlExtractions",
    "kebab": "html-extractions",
    "sqlFunctionRef": "p_html_extractions",
    "RestAPI": "htmlExtractions",
    "GraphQL": "htmlExtractions",
    "custom": "htmlExtractions"
},
        relationships: [
            
        ],
    },
message: {
        schemaType: 'table' as const,
        entityName: 'message',
        displayName: 'Message',
        uniqueTableId: 'supabase_automation_matrix:public:message',
        uniqueEntityId: 'supabase_automation_matrix:message',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'type', databaseFieldName: 'type' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:message:id',
            uniqueFieldId: 'supabase_automation_matrix:message:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: null,
            description: '"Id" field for message. This is a required field. Your entry must be an uuid data type.',
        },
            conversationId: {
            fieldNameFormats: {
    "frontend": "conversationId",
    "backend": "conversation_id",
    "database": "conversation_id",
    "pretty": "Conversation Id",
    "component": "ConversationId",
    "kebab": "conversation-id",
    "sqlFunctionRef": "p_conversation_id",
    "RestAPI": "conversationId",
    "GraphQL": "conversationId",
    "custom": "conversationId"
} as const,
            name: 'conversationId',
            displayName: 'Conversation Id',

            uniqueColumnId: 'supabase_automation_matrix:public:message:conversation_id',
            uniqueFieldId: 'supabase_automation_matrix:message:conversationId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: {"table": "conversation", "column": "id", "entity": "conversation", "field": "id"},
            description: '"Conversation Id" field for message. This is a required field. Your entry must be an uuid data type. This field is a reference to a conversation.',
        },
            role: {
            fieldNameFormats: {
    "frontend": "role",
    "backend": "role",
    "database": "role",
    "pretty": "Role",
    "component": "Role",
    "kebab": "role",
    "sqlFunctionRef": "p_role",
    "RestAPI": "role",
    "GraphQL": "role",
    "custom": "role"
} as const,
            name: 'role',
            displayName: 'Role',

            uniqueColumnId: 'supabase_automation_matrix:public:message:role',
            uniqueFieldId: 'supabase_automation_matrix:message:role',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Assistant",
            "value": "assistant"
        },
        {
            "label": "System",
            "value": "system"
        },
        {
            "label": "Tool",
            "value": "tool"
        },
        {
            "label": "User",
            "value": "user"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"assistant" | "system" | "tool" | "user" | undefined>,
            enumValues: ['assistant', 'system', 'tool', 'user'] as const,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: null,
            description: '"Role" field for message. This is a required field. Your entry must be an string data type.',
        },
            content: {
            fieldNameFormats: {
    "frontend": "content",
    "backend": "content",
    "database": "content",
    "pretty": "Content",
    "component": "Content",
    "kebab": "content",
    "sqlFunctionRef": "p_content",
    "RestAPI": "content",
    "GraphQL": "content",
    "custom": "content"
} as const,
            name: 'content',
            displayName: 'Content',

            uniqueColumnId: 'supabase_automation_matrix:public:message:content',
            uniqueFieldId: 'supabase_automation_matrix:message:content',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: null,
            description: '"Content" field for message. This is an optional field. Your entry must be an string data type.',
        },
            type: {
            fieldNameFormats: {
    "frontend": "type",
    "backend": "type",
    "database": "type",
    "pretty": "Type",
    "component": "Type",
    "kebab": "type",
    "sqlFunctionRef": "p_type",
    "RestAPI": "type",
    "GraphQL": "type",
    "custom": "type"
} as const,
            name: 'type',
            displayName: 'Type',

            uniqueColumnId: 'supabase_automation_matrix:public:message:type',
            uniqueFieldId: 'supabase_automation_matrix:message:type',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Base64 Image",
            "value": "base64_image"
        },
        {
            "label": "Blob",
            "value": "blob"
        },
        {
            "label": "Image Url",
            "value": "image_url"
        },
        {
            "label": "Json Object",
            "value": "json_object"
        },
        {
            "label": "Mixed",
            "value": "mixed"
        },
        {
            "label": "Other",
            "value": "other"
        },
        {
            "label": "Text",
            "value": "text"
        },
        {
            "label": "Tool Result",
            "value": "tool_result"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"base64_image" | "blob" | "image_url" | "json_object" | "mixed" | "other" | "text" | "tool_result" | undefined>,
            enumValues: ['base64_image', 'blob', 'image_url', 'json_object', 'mixed', 'other', 'text', 'tool_result'] as const,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: null,
            description: '"Type" field for message. This is a required field. Your entry must be an string data type.',
        },
            displayOrder: {
            fieldNameFormats: {
    "frontend": "displayOrder",
    "backend": "display_order",
    "database": "display_order",
    "pretty": "Display Order",
    "component": "DisplayOrder",
    "kebab": "display-order",
    "sqlFunctionRef": "p_display_order",
    "RestAPI": "displayOrder",
    "GraphQL": "displayOrder",
    "custom": "displayOrder"
} as const,
            name: 'displayOrder',
            displayName: 'Display Order',

            uniqueColumnId: 'supabase_automation_matrix:public:message:display_order',
            uniqueFieldId: 'supabase_automation_matrix:message:displayOrder',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: null,
            description: '"Display Order" field for message. This is an optional field. Your entry must be an number data type.',
        },
            systemOrder: {
            fieldNameFormats: {
    "frontend": "systemOrder",
    "backend": "system_order",
    "database": "system_order",
    "pretty": "System Order",
    "component": "SystemOrder",
    "kebab": "system-order",
    "sqlFunctionRef": "p_system_order",
    "RestAPI": "systemOrder",
    "GraphQL": "systemOrder",
    "custom": "systemOrder"
} as const,
            name: 'systemOrder',
            displayName: 'System Order',

            uniqueColumnId: 'supabase_automation_matrix:public:message:system_order',
            uniqueFieldId: 'supabase_automation_matrix:message:systemOrder',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: null,
            description: '"System Order" field for message. This is an optional field. Your entry must be an number data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:message:created_at',
            uniqueFieldId: 'supabase_automation_matrix:message:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: null,
            description: '"Created At" field for message. This is a required field. Your entry must be an date data type.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:message:metadata',
            uniqueFieldId: 'supabase_automation_matrix:message:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: null,
            description: '"Metadata" field for message. This is an optional field. Your entry must be an object data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:message:user_id',
            uniqueFieldId: 'supabase_automation_matrix:message:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for message. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:message:is_public',
            uniqueFieldId: 'supabase_automation_matrix:message:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'message',
            databaseTable: 'message',
            foreignKeyReference: null,
            description: '"Is Public" field for message. This is an optional field. Your entry must be an boolean data type.',
        },
            conversationReference: {
    fieldNameFormats: {
    "frontend": "conversationReference",
    "backend": "conversation_reference",
    "database": "ref_conversation",
    "pretty": "Conversation Reference",
    "component": "ConversationReference",
    "kebab": "conversationReference",
    "sqlFunctionRef": "p_ref_conversation",
    "RestAPI": "conversationReference",
    "GraphQL": "conversationReference",
    "custom": "conversationReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:conversation:id',
    uniqueFieldId: 'supabase_automation_matrix:conversation:id',
    name: 'conversationReference',
    displayName: 'Conversation Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['conversation'][]>,
    entityName: 'conversation',
    databaseTable: 'conversation',
    relationshipMap: {conversation: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "message",
    "backend": "message",
    "database": "message",
    "pretty": "Message",
    "component": "Message",
    "kebab": "message",
    "sqlFunctionRef": "p_message",
    "RestAPI": "message",
    "GraphQL": "message",
    "custom": "message"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'conversation_id', relatedTable: 'conversation', relatedColumn: 'id', junctionTable: null }
        ],
    },
messageBroker: {
        schemaType: 'table' as const,
        entityName: 'messageBroker',
        displayName: 'Message Broker',
        uniqueTableId: 'supabase_automation_matrix:public:message_broker',
        uniqueEntityId: 'supabase_automation_matrix:messageBroker',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:message_broker:id',
            uniqueFieldId: 'supabase_automation_matrix:messageBroker:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'messageBroker',
            databaseTable: 'message_broker',
            foreignKeyReference: null,
            description: '"Id" field for messageBroker. This is a required field. Your entry must be an uuid data type.',
        },
            messageId: {
            fieldNameFormats: {
    "frontend": "messageId",
    "backend": "message_id",
    "database": "message_id",
    "pretty": "Message Id",
    "component": "MessageId",
    "kebab": "message-id",
    "sqlFunctionRef": "p_message_id",
    "RestAPI": "messageId",
    "GraphQL": "messageId",
    "custom": "messageId"
} as const,
            name: 'messageId',
            displayName: 'Message Id',

            uniqueColumnId: 'supabase_automation_matrix:public:message_broker:message_id',
            uniqueFieldId: 'supabase_automation_matrix:messageBroker:messageId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'messageBroker',
            databaseTable: 'message_broker',
            foreignKeyReference: {"table": "message_template", "column": "id", "entity": "messageTemplate", "field": "id"},
            description: '"Message Id" field for messageBroker. This is a required field. Your entry must be an uuid data type. This field is a reference to a messageTemplate.',
        },
            brokerId: {
            fieldNameFormats: {
    "frontend": "brokerId",
    "backend": "broker_id",
    "database": "broker_id",
    "pretty": "Broker Id",
    "component": "BrokerId",
    "kebab": "broker-id",
    "sqlFunctionRef": "p_broker_id",
    "RestAPI": "brokerId",
    "GraphQL": "brokerId",
    "custom": "brokerId"
} as const,
            name: 'brokerId',
            displayName: 'Broker Id',

            uniqueColumnId: 'supabase_automation_matrix:public:message_broker:broker_id',
            uniqueFieldId: 'supabase_automation_matrix:messageBroker:brokerId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'messageBroker',
            databaseTable: 'message_broker',
            foreignKeyReference: {"table": "data_broker", "column": "id", "entity": "dataBroker", "field": "id"},
            description: '"Broker Id" field for messageBroker. This is a required field. Your entry must be an uuid data type. This field is a reference to a dataBroker.',
        },
            defaultValue: {
            fieldNameFormats: {
    "frontend": "defaultValue",
    "backend": "default_value",
    "database": "default_value",
    "pretty": "Default Value",
    "component": "DefaultValue",
    "kebab": "default-value",
    "sqlFunctionRef": "p_default_value",
    "RestAPI": "defaultValue",
    "GraphQL": "defaultValue",
    "custom": "defaultValue"
} as const,
            name: 'defaultValue',
            displayName: 'Default Value',

            uniqueColumnId: 'supabase_automation_matrix:public:message_broker:default_value',
            uniqueFieldId: 'supabase_automation_matrix:messageBroker:defaultValue',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'messageBroker',
            databaseTable: 'message_broker',
            foreignKeyReference: null,
            description: '"Default Value" field for messageBroker. This is an optional field. Your entry must be an string data type.',
        },
            defaultComponent: {
            fieldNameFormats: {
    "frontend": "defaultComponent",
    "backend": "default_component",
    "database": "default_component",
    "pretty": "Default Component",
    "component": "DefaultComponent",
    "kebab": "default-component",
    "sqlFunctionRef": "p_default_component",
    "RestAPI": "defaultComponent",
    "GraphQL": "defaultComponent",
    "custom": "defaultComponent"
} as const,
            name: 'defaultComponent',
            displayName: 'Default Component',

            uniqueColumnId: 'supabase_automation_matrix:public:message_broker:default_component',
            uniqueFieldId: 'supabase_automation_matrix:messageBroker:defaultComponent',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'messageBroker',
            databaseTable: 'message_broker',
            foreignKeyReference: {"table": "data_input_component", "column": "id", "entity": "dataInputComponent", "field": "id"},
            description: '"Default Component" field for messageBroker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a dataInputComponent.',
        },
            dataBrokerReference: {
    fieldNameFormats: {
    "frontend": "dataBrokerReference",
    "backend": "data_broker_reference",
    "database": "ref_data_broker",
    "pretty": "Data Broker Reference",
    "component": "DataBrokerReference",
    "kebab": "data-brokerReference",
    "sqlFunctionRef": "p_ref_data_broker",
    "RestAPI": "dataBrokerReference",
    "GraphQL": "dataBrokerReference",
    "custom": "dataBrokerReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:data_broker:id',
    uniqueFieldId: 'supabase_automation_matrix:dataBroker:id',
    name: 'dataBrokerReference',
    displayName: 'Data Broker Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['dataBroker'][]>,
    entityName: 'dataBroker',
    databaseTable: 'data_broker',
    relationshipMap: {data_broker: 'id', data_input_component: 'id', message_template: 'id'},
},
            dataInputComponentReference: {
    fieldNameFormats: {
    "frontend": "dataInputComponentReference",
    "backend": "data_input_component_reference",
    "database": "ref_data_input_component",
    "pretty": "Data Input Component Reference",
    "component": "DataInputComponentReference",
    "kebab": "data-input-componentReference",
    "sqlFunctionRef": "p_ref_data_input_component",
    "RestAPI": "dataInputComponentReference",
    "GraphQL": "dataInputComponentReference",
    "custom": "dataInputComponentReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:data_input_component:id',
    uniqueFieldId: 'supabase_automation_matrix:dataInputComponent:id',
    name: 'dataInputComponentReference',
    displayName: 'Data Input Component Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['dataInputComponent'][]>,
    entityName: 'dataInputComponent',
    databaseTable: 'data_input_component',
    relationshipMap: {data_broker: 'id', data_input_component: 'id', message_template: 'id'},
},
            messageTemplateReference: {
    fieldNameFormats: {
    "frontend": "messageTemplateReference",
    "backend": "message_template_reference",
    "database": "ref_message_template",
    "pretty": "Message Template Reference",
    "component": "MessageTemplateReference",
    "kebab": "message-templateReference",
    "sqlFunctionRef": "p_ref_message_template",
    "RestAPI": "messageTemplateReference",
    "GraphQL": "messageTemplateReference",
    "custom": "messageTemplateReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:message_template:id',
    uniqueFieldId: 'supabase_automation_matrix:messageTemplate:id',
    name: 'messageTemplateReference',
    displayName: 'Message Template Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['messageTemplate'][]>,
    entityName: 'messageTemplate',
    databaseTable: 'message_template',
    relationshipMap: {data_broker: 'id', data_input_component: 'id', message_template: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "messageBroker",
    "backend": "message_broker",
    "database": "message_broker",
    "pretty": "Message Broker",
    "component": "MessageBroker",
    "kebab": "message-broker",
    "sqlFunctionRef": "p_message_broker",
    "RestAPI": "messageBroker",
    "GraphQL": "messageBroker",
    "custom": "messageBroker"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'broker_id', relatedTable: 'data_broker', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'default_component', relatedTable: 'data_input_component', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'message_id', relatedTable: 'message_template', relatedColumn: 'id', junctionTable: null }
        ],
    },
messageTemplate: {
        schemaType: 'table' as const,
        entityName: 'messageTemplate',
        displayName: 'Message Template',
        uniqueTableId: 'supabase_automation_matrix:public:message_template',
        uniqueEntityId: 'supabase_automation_matrix:messageTemplate',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'type', databaseFieldName: 'type' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:message_template:id',
            uniqueFieldId: 'supabase_automation_matrix:messageTemplate:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'messageTemplate',
            databaseTable: 'message_template',
            foreignKeyReference: null,
            description: '"Id" field for messageTemplate. This is a required field. Your entry must be an uuid data type.',
        },
            role: {
            fieldNameFormats: {
    "frontend": "role",
    "backend": "role",
    "database": "role",
    "pretty": "Role",
    "component": "Role",
    "kebab": "role",
    "sqlFunctionRef": "p_role",
    "RestAPI": "role",
    "GraphQL": "role",
    "custom": "role"
} as const,
            name: 'role',
            displayName: 'Role',

            uniqueColumnId: 'supabase_automation_matrix:public:message_template:role',
            uniqueFieldId: 'supabase_automation_matrix:messageTemplate:role',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "user" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Assistant",
            "value": "assistant"
        },
        {
            "label": "System",
            "value": "system"
        },
        {
            "label": "Tool",
            "value": "tool"
        },
        {
            "label": "User",
            "value": "user"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"assistant" | "system" | "tool" | "user" | undefined>,
            enumValues: ['assistant', 'system', 'tool', 'user'] as const,
            entityName: 'messageTemplate',
            databaseTable: 'message_template',
            foreignKeyReference: null,
            description: '"Role" field for messageTemplate. This is a required field. Your entry must be an string data type.',
        },
            type: {
            fieldNameFormats: {
    "frontend": "type",
    "backend": "type",
    "database": "type",
    "pretty": "Type",
    "component": "Type",
    "kebab": "type",
    "sqlFunctionRef": "p_type",
    "RestAPI": "type",
    "GraphQL": "type",
    "custom": "type"
} as const,
            name: 'type',
            displayName: 'Type',

            uniqueColumnId: 'supabase_automation_matrix:public:message_template:type',
            uniqueFieldId: 'supabase_automation_matrix:messageTemplate:type',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "text" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Base64 Image",
            "value": "base64_image"
        },
        {
            "label": "Blob",
            "value": "blob"
        },
        {
            "label": "Image Url",
            "value": "image_url"
        },
        {
            "label": "Json Object",
            "value": "json_object"
        },
        {
            "label": "Mixed",
            "value": "mixed"
        },
        {
            "label": "Other",
            "value": "other"
        },
        {
            "label": "Text",
            "value": "text"
        },
        {
            "label": "Tool Result",
            "value": "tool_result"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"base64_image" | "blob" | "image_url" | "json_object" | "mixed" | "other" | "text" | "tool_result" | undefined>,
            enumValues: ['base64_image', 'blob', 'image_url', 'json_object', 'mixed', 'other', 'text', 'tool_result'] as const,
            entityName: 'messageTemplate',
            databaseTable: 'message_template',
            foreignKeyReference: null,
            description: '"Type" field for messageTemplate. This is a required field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:message_template:created_at',
            uniqueFieldId: 'supabase_automation_matrix:messageTemplate:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'messageTemplate',
            databaseTable: 'message_template',
            foreignKeyReference: null,
            description: '"Created At" field for messageTemplate. This is a required field. Your entry must be an date data type.',
        },
            content: {
            fieldNameFormats: {
    "frontend": "content",
    "backend": "content",
    "database": "content",
    "pretty": "Content",
    "component": "Content",
    "kebab": "content",
    "sqlFunctionRef": "p_content",
    "RestAPI": "content",
    "GraphQL": "content",
    "custom": "content"
} as const,
            name: 'content',
            displayName: 'Content',

            uniqueColumnId: 'supabase_automation_matrix:public:message_template:content',
            uniqueFieldId: 'supabase_automation_matrix:messageTemplate:content',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'messageTemplate',
            databaseTable: 'message_template',
            foreignKeyReference: null,
            description: '"Content" field for messageTemplate. This is an optional field. Your entry must be an string data type.',
        },
            messageBrokerInverse: {
    fieldNameFormats: {
    "frontend": "messageBrokerInverse",
    "backend": "message_broker_Inverse",
    "database": "ifk_message_broker",
    "pretty": "Message Broker Inverse",
    "component": "MessageBrokerInverse",
    "kebab": "message-brokerInverse",
    "sqlFunctionRef": "p_ifk_message_broker",
    "RestAPI": "messageBrokerInverse",
    "GraphQL": "messageBrokerInverse",
    "custom": "messageBrokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:message_broker',
    uniqueEntityId: 'supabase_automation_matrix:messageBroker',
    name: 'messageBrokerInverse',
    displayName: 'Message Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['messageBroker'][]>,
    entityName: 'messageBroker',
    databaseTable: 'message_broker',
},
            recipeMessageInverse: {
    fieldNameFormats: {
    "frontend": "recipeMessageInverse",
    "backend": "recipe_message_Inverse",
    "database": "ifk_recipe_message",
    "pretty": "Recipe Message Inverse",
    "component": "RecipeMessageInverse",
    "kebab": "recipe-messageInverse",
    "sqlFunctionRef": "p_ifk_recipe_message",
    "RestAPI": "recipeMessageInverse",
    "GraphQL": "recipeMessageInverse",
    "custom": "recipeMessageInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_message',
    uniqueEntityId: 'supabase_automation_matrix:recipeMessage',
    name: 'recipeMessageInverse',
    displayName: 'Recipe Message Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeMessage'][]>,
    entityName: 'recipeMessage',
    databaseTable: 'recipe_message',
},
        },
        entityNameFormats: {
    "frontend": "messageTemplate",
    "backend": "message_template",
    "database": "message_template",
    "pretty": "Message Template",
    "component": "MessageTemplate",
    "kebab": "message-template",
    "sqlFunctionRef": "p_message_template",
    "RestAPI": "messageTemplate",
    "GraphQL": "messageTemplate",
    "custom": "messageTemplate"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'message_broker', relatedColumn: 'message_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_message', relatedColumn: 'message_id', junctionTable: null }
        ],
    },
organizationInvitations: {
        schemaType: 'table' as const,
        entityName: 'organizationInvitations',
        displayName: 'Organization Invitations',
        uniqueTableId: 'supabase_automation_matrix:public:organization_invitations',
        uniqueEntityId: 'supabase_automation_matrix:organizationInvitations',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_invitations:id',
            uniqueFieldId: 'supabase_automation_matrix:organizationInvitations:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizationInvitations',
            databaseTable: 'organization_invitations',
            foreignKeyReference: null,
            description: '"Id" field for organizationInvitations. This is a required field. Your entry must be an uuid data type.',
        },
            organizationId: {
            fieldNameFormats: {
    "frontend": "organizationId",
    "backend": "organization_id",
    "database": "organization_id",
    "pretty": "Organization Id",
    "component": "OrganizationId",
    "kebab": "organization-id",
    "sqlFunctionRef": "p_organization_id",
    "RestAPI": "organizationId",
    "GraphQL": "organizationId",
    "custom": "organizationId"
} as const,
            name: 'organizationId',
            displayName: 'Organization Id',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_invitations:organization_id',
            uniqueFieldId: 'supabase_automation_matrix:organizationInvitations:organizationId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizationInvitations',
            databaseTable: 'organization_invitations',
            foreignKeyReference: {"table": "organizations", "column": "id", "entity": "organizations", "field": "id"},
            description: '"Organization Id" field for organizationInvitations. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a organizations.',
        },
            email: {
            fieldNameFormats: {
    "frontend": "email",
    "backend": "email",
    "database": "email",
    "pretty": "Email",
    "component": "Email",
    "kebab": "email",
    "sqlFunctionRef": "p_email",
    "RestAPI": "email",
    "GraphQL": "email",
    "custom": "email"
} as const,
            name: 'email',
            displayName: 'Email',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_invitations:email',
            uniqueFieldId: 'supabase_automation_matrix:organizationInvitations:email',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizationInvitations',
            databaseTable: 'organization_invitations',
            foreignKeyReference: null,
            description: '"Email" field for organizationInvitations. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            token: {
            fieldNameFormats: {
    "frontend": "token",
    "backend": "token",
    "database": "token",
    "pretty": "Token",
    "component": "Token",
    "kebab": "token",
    "sqlFunctionRef": "p_token",
    "RestAPI": "token",
    "GraphQL": "token",
    "custom": "token"
} as const,
            name: 'token',
            displayName: 'Token',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_invitations:token',
            uniqueFieldId: 'supabase_automation_matrix:organizationInvitations:token',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizationInvitations',
            databaseTable: 'organization_invitations',
            foreignKeyReference: null,
            description: '"Token" field for organizationInvitations. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            role: {
            fieldNameFormats: {
    "frontend": "role",
    "backend": "role",
    "database": "role",
    "pretty": "Role",
    "component": "Role",
    "kebab": "role",
    "sqlFunctionRef": "p_role",
    "RestAPI": "role",
    "GraphQL": "role",
    "custom": "role"
} as const,
            name: 'role',
            displayName: 'Role',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_invitations:role',
            uniqueFieldId: 'supabase_automation_matrix:organizationInvitations:role',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "member" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Admin",
            "value": "admin"
        },
        {
            "label": "Member",
            "value": "member"
        },
        {
            "label": "Owner",
            "value": "owner"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"admin" | "member" | "owner" | undefined>,
            enumValues: ['admin', 'member', 'owner'] as const,
            entityName: 'organizationInvitations',
            databaseTable: 'organization_invitations',
            foreignKeyReference: null,
            description: '"Role" field for organizationInvitations. This is a required field. Your entry must be an string data type.',
        },
            invitedAt: {
            fieldNameFormats: {
    "frontend": "invitedAt",
    "backend": "invited_at",
    "database": "invited_at",
    "pretty": "Invited At",
    "component": "InvitedAt",
    "kebab": "invited-at",
    "sqlFunctionRef": "p_invited_at",
    "RestAPI": "invitedAt",
    "GraphQL": "invitedAt",
    "custom": "invitedAt"
} as const,
            name: 'invitedAt',
            displayName: 'Invited At',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_invitations:invited_at',
            uniqueFieldId: 'supabase_automation_matrix:organizationInvitations:invitedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'organizationInvitations',
            databaseTable: 'organization_invitations',
            foreignKeyReference: null,
            description: '"Invited At" field for organizationInvitations. This is an optional field. Your entry must be an date data type.',
        },
            invitedBy: {
            fieldNameFormats: {
    "frontend": "invitedBy",
    "backend": "invited_by",
    "database": "invited_by",
    "pretty": "Invited By",
    "component": "InvitedBy",
    "kebab": "invited-by",
    "sqlFunctionRef": "p_invited_by",
    "RestAPI": "invitedBy",
    "GraphQL": "invitedBy",
    "custom": "invitedBy"
} as const,
            name: 'invitedBy',
            displayName: 'Invited By',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_invitations:invited_by',
            uniqueFieldId: 'supabase_automation_matrix:organizationInvitations:invitedBy',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizationInvitations',
            databaseTable: 'organization_invitations',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"Invited By" field for organizationInvitations. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            expiresAt: {
            fieldNameFormats: {
    "frontend": "expiresAt",
    "backend": "expires_at",
    "database": "expires_at",
    "pretty": "Expires At",
    "component": "ExpiresAt",
    "kebab": "expires-at",
    "sqlFunctionRef": "p_expires_at",
    "RestAPI": "expiresAt",
    "GraphQL": "expiresAt",
    "custom": "expiresAt"
} as const,
            name: 'expiresAt',
            displayName: 'Expires At',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_invitations:expires_at',
            uniqueFieldId: 'supabase_automation_matrix:organizationInvitations:expiresAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'organizationInvitations',
            databaseTable: 'organization_invitations',
            foreignKeyReference: null,
            description: '"Expires At" field for organizationInvitations. This is a required field. Your entry must be an date data type.',
        },
            organizationsReference: {
    fieldNameFormats: {
    "frontend": "organizationsReference",
    "backend": "organizations_reference",
    "database": "ref_organizations",
    "pretty": "Organizations Reference",
    "component": "OrganizationsReference",
    "kebab": "organizationsReference",
    "sqlFunctionRef": "p_ref_organizations",
    "RestAPI": "organizationsReference",
    "GraphQL": "organizationsReference",
    "custom": "organizationsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:organizations:id',
    uniqueFieldId: 'supabase_automation_matrix:organizations:id',
    name: 'organizationsReference',
    displayName: 'Organizations Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['organizations'][]>,
    entityName: 'organizations',
    databaseTable: 'organizations',
    relationshipMap: {organizations: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "organizationInvitations",
    "backend": "organization_invitations",
    "database": "organization_invitations",
    "pretty": "Organization Invitations",
    "component": "OrganizationInvitations",
    "kebab": "organization-invitations",
    "sqlFunctionRef": "p_organization_invitations",
    "RestAPI": "organizationInvitations",
    "GraphQL": "organizationInvitations",
    "custom": "organizationInvitations"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'organization_id', relatedTable: 'organizations', relatedColumn: 'id', junctionTable: null }
        ],
    },
organizationMembers: {
        schemaType: 'table' as const,
        entityName: 'organizationMembers',
        displayName: 'Organization Members',
        uniqueTableId: 'supabase_automation_matrix:public:organization_members',
        uniqueEntityId: 'supabase_automation_matrix:organizationMembers',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_members:id',
            uniqueFieldId: 'supabase_automation_matrix:organizationMembers:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizationMembers',
            databaseTable: 'organization_members',
            foreignKeyReference: null,
            description: '"Id" field for organizationMembers. This is a required field. Your entry must be an uuid data type.',
        },
            organizationId: {
            fieldNameFormats: {
    "frontend": "organizationId",
    "backend": "organization_id",
    "database": "organization_id",
    "pretty": "Organization Id",
    "component": "OrganizationId",
    "kebab": "organization-id",
    "sqlFunctionRef": "p_organization_id",
    "RestAPI": "organizationId",
    "GraphQL": "organizationId",
    "custom": "organizationId"
} as const,
            name: 'organizationId',
            displayName: 'Organization Id',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_members:organization_id',
            uniqueFieldId: 'supabase_automation_matrix:organizationMembers:organizationId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizationMembers',
            databaseTable: 'organization_members',
            foreignKeyReference: {"table": "organizations", "column": "id", "entity": "organizations", "field": "id"},
            description: '"Organization Id" field for organizationMembers. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a organizations.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_members:user_id',
            uniqueFieldId: 'supabase_automation_matrix:organizationMembers:userId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizationMembers',
            databaseTable: 'organization_members',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for organizationMembers. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a users.',
        },
            role: {
            fieldNameFormats: {
    "frontend": "role",
    "backend": "role",
    "database": "role",
    "pretty": "Role",
    "component": "Role",
    "kebab": "role",
    "sqlFunctionRef": "p_role",
    "RestAPI": "role",
    "GraphQL": "role",
    "custom": "role"
} as const,
            name: 'role',
            displayName: 'Role',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_members:role',
            uniqueFieldId: 'supabase_automation_matrix:organizationMembers:role',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "member" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Admin",
            "value": "admin"
        },
        {
            "label": "Member",
            "value": "member"
        },
        {
            "label": "Owner",
            "value": "owner"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"admin" | "member" | "owner" | undefined>,
            enumValues: ['admin', 'member', 'owner'] as const,
            entityName: 'organizationMembers',
            databaseTable: 'organization_members',
            foreignKeyReference: null,
            description: '"Role" field for organizationMembers. This is a required field. Your entry must be an string data type.',
        },
            joinedAt: {
            fieldNameFormats: {
    "frontend": "joinedAt",
    "backend": "joined_at",
    "database": "joined_at",
    "pretty": "Joined At",
    "component": "JoinedAt",
    "kebab": "joined-at",
    "sqlFunctionRef": "p_joined_at",
    "RestAPI": "joinedAt",
    "GraphQL": "joinedAt",
    "custom": "joinedAt"
} as const,
            name: 'joinedAt',
            displayName: 'Joined At',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_members:joined_at',
            uniqueFieldId: 'supabase_automation_matrix:organizationMembers:joinedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'organizationMembers',
            databaseTable: 'organization_members',
            foreignKeyReference: null,
            description: '"Joined At" field for organizationMembers. This is an optional field. Your entry must be an date data type.',
        },
            invitedBy: {
            fieldNameFormats: {
    "frontend": "invitedBy",
    "backend": "invited_by",
    "database": "invited_by",
    "pretty": "Invited By",
    "component": "InvitedBy",
    "kebab": "invited-by",
    "sqlFunctionRef": "p_invited_by",
    "RestAPI": "invitedBy",
    "GraphQL": "invitedBy",
    "custom": "invitedBy"
} as const,
            name: 'invitedBy',
            displayName: 'Invited By',

            uniqueColumnId: 'supabase_automation_matrix:public:organization_members:invited_by',
            uniqueFieldId: 'supabase_automation_matrix:organizationMembers:invitedBy',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizationMembers',
            databaseTable: 'organization_members',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"Invited By" field for organizationMembers. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            organizationsReference: {
    fieldNameFormats: {
    "frontend": "organizationsReference",
    "backend": "organizations_reference",
    "database": "ref_organizations",
    "pretty": "Organizations Reference",
    "component": "OrganizationsReference",
    "kebab": "organizationsReference",
    "sqlFunctionRef": "p_ref_organizations",
    "RestAPI": "organizationsReference",
    "GraphQL": "organizationsReference",
    "custom": "organizationsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:organizations:id',
    uniqueFieldId: 'supabase_automation_matrix:organizations:id',
    name: 'organizationsReference',
    displayName: 'Organizations Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['organizations'][]>,
    entityName: 'organizations',
    databaseTable: 'organizations',
    relationshipMap: {organizations: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "organizationMembers",
    "backend": "organization_members",
    "database": "organization_members",
    "pretty": "Organization Members",
    "component": "OrganizationMembers",
    "kebab": "organization-members",
    "sqlFunctionRef": "p_organization_members",
    "RestAPI": "organizationMembers",
    "GraphQL": "organizationMembers",
    "custom": "organizationMembers"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'organization_id', relatedTable: 'organizations', relatedColumn: 'id', junctionTable: null }
        ],
    },
organizations: {
        schemaType: 'table' as const,
        entityName: 'organizations',
        displayName: 'Organizations',
        uniqueTableId: 'supabase_automation_matrix:public:organizations',
        uniqueEntityId: 'supabase_automation_matrix:organizations',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:id',
            uniqueFieldId: 'supabase_automation_matrix:organizations:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: null,
            description: '"Id" field for organizations. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:name',
            uniqueFieldId: 'supabase_automation_matrix:organizations:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: null,
            description: '"Name" field for organizations. This is a required field. Your entry must be an string data type.',
        },
            slug: {
            fieldNameFormats: {
    "frontend": "slug",
    "backend": "slug",
    "database": "slug",
    "pretty": "Slug",
    "component": "Slug",
    "kebab": "slug",
    "sqlFunctionRef": "p_slug",
    "RestAPI": "slug",
    "GraphQL": "slug",
    "custom": "slug"
} as const,
            name: 'slug',
            displayName: 'Slug',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:slug',
            uniqueFieldId: 'supabase_automation_matrix:organizations:slug',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: null,
            description: '"Slug" field for organizations. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:description',
            uniqueFieldId: 'supabase_automation_matrix:organizations:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: null,
            description: '"Description" field for organizations. This is an optional field. Your entry must be an string data type.',
        },
            logoUrl: {
            fieldNameFormats: {
    "frontend": "logoUrl",
    "backend": "logo_url",
    "database": "logo_url",
    "pretty": "Logo Url",
    "component": "LogoUrl",
    "kebab": "logo-url",
    "sqlFunctionRef": "p_logo_url",
    "RestAPI": "logoUrl",
    "GraphQL": "logoUrl",
    "custom": "logoUrl"
} as const,
            name: 'logoUrl',
            displayName: 'Logo Url',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:logo_url',
            uniqueFieldId: 'supabase_automation_matrix:organizations:logoUrl',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: null,
            description: '"Logo Url" field for organizations. This is an optional field. Your entry must be an string data type.',
        },
            website: {
            fieldNameFormats: {
    "frontend": "website",
    "backend": "website",
    "database": "website",
    "pretty": "Website",
    "component": "Website",
    "kebab": "website",
    "sqlFunctionRef": "p_website",
    "RestAPI": "website",
    "GraphQL": "website",
    "custom": "website"
} as const,
            name: 'website',
            displayName: 'Website',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:website',
            uniqueFieldId: 'supabase_automation_matrix:organizations:website',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: null,
            description: '"Website" field for organizations. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:created_at',
            uniqueFieldId: 'supabase_automation_matrix:organizations:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: null,
            description: '"Created At" field for organizations. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:organizations:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: null,
            description: '"Updated At" field for organizations. This is an optional field. Your entry must be an date data type.',
        },
            createdBy: {
            fieldNameFormats: {
    "frontend": "createdBy",
    "backend": "created_by",
    "database": "created_by",
    "pretty": "Created By",
    "component": "CreatedBy",
    "kebab": "created-by",
    "sqlFunctionRef": "p_created_by",
    "RestAPI": "createdBy",
    "GraphQL": "createdBy",
    "custom": "createdBy"
} as const,
            name: 'createdBy',
            displayName: 'Created By',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:created_by',
            uniqueFieldId: 'supabase_automation_matrix:organizations:createdBy',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"Created By" field for organizations. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPersonal: {
            fieldNameFormats: {
    "frontend": "isPersonal",
    "backend": "is_personal",
    "database": "is_personal",
    "pretty": "Is Personal",
    "component": "IsPersonal",
    "kebab": "is-personal",
    "sqlFunctionRef": "p_is_personal",
    "RestAPI": "isPersonal",
    "GraphQL": "isPersonal",
    "custom": "isPersonal"
} as const,
            name: 'isPersonal',
            displayName: 'Is Personal',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:is_personal',
            uniqueFieldId: 'supabase_automation_matrix:organizations:isPersonal',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: null,
            description: '"Is Personal" field for organizations. This is an optional field. Your entry must be an boolean data type.',
        },
            settings: {
            fieldNameFormats: {
    "frontend": "settings",
    "backend": "settings",
    "database": "settings",
    "pretty": "Settings",
    "component": "Settings",
    "kebab": "settings",
    "sqlFunctionRef": "p_settings",
    "RestAPI": "settings",
    "GraphQL": "settings",
    "custom": "settings"
} as const,
            name: 'settings',
            displayName: 'Settings',

            uniqueColumnId: 'supabase_automation_matrix:public:organizations:settings',
            uniqueFieldId: 'supabase_automation_matrix:organizations:settings',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "{}" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'organizations',
            databaseTable: 'organizations',
            foreignKeyReference: null,
            description: '"Settings" field for organizations. This is an optional field. Your entry must be an object data type.',
        },
            permissionsInverse: {
    fieldNameFormats: {
    "frontend": "permissionsInverse",
    "backend": "permissions_Inverse",
    "database": "ifk_permissions",
    "pretty": "Permissions Inverse",
    "component": "PermissionsInverse",
    "kebab": "permissionsInverse",
    "sqlFunctionRef": "p_ifk_permissions",
    "RestAPI": "permissionsInverse",
    "GraphQL": "permissionsInverse",
    "custom": "permissionsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:permissions',
    uniqueEntityId: 'supabase_automation_matrix:permissions',
    name: 'permissionsInverse',
    displayName: 'Permissions Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['permissions'][]>,
    entityName: 'permissions',
    databaseTable: 'permissions',
},
            organizationMembersInverse: {
    fieldNameFormats: {
    "frontend": "organizationMembersInverse",
    "backend": "organization_members_Inverse",
    "database": "ifk_organization_members",
    "pretty": "Organization Members Inverse",
    "component": "OrganizationMembersInverse",
    "kebab": "organization-membersInverse",
    "sqlFunctionRef": "p_ifk_organization_members",
    "RestAPI": "organizationMembersInverse",
    "GraphQL": "organizationMembersInverse",
    "custom": "organizationMembersInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:organization_members',
    uniqueEntityId: 'supabase_automation_matrix:organizationMembers',
    name: 'organizationMembersInverse',
    displayName: 'Organization Members Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['organizationMembers'][]>,
    entityName: 'organizationMembers',
    databaseTable: 'organization_members',
},
            organizationInvitationsInverse: {
    fieldNameFormats: {
    "frontend": "organizationInvitationsInverse",
    "backend": "organization_invitations_Inverse",
    "database": "ifk_organization_invitations",
    "pretty": "Organization Invitations Inverse",
    "component": "OrganizationInvitationsInverse",
    "kebab": "organization-invitationsInverse",
    "sqlFunctionRef": "p_ifk_organization_invitations",
    "RestAPI": "organizationInvitationsInverse",
    "GraphQL": "organizationInvitationsInverse",
    "custom": "organizationInvitationsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:organization_invitations',
    uniqueEntityId: 'supabase_automation_matrix:organizationInvitations',
    name: 'organizationInvitationsInverse',
    displayName: 'Organization Invitations Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['organizationInvitations'][]>,
    entityName: 'organizationInvitations',
    databaseTable: 'organization_invitations',
},
        },
        entityNameFormats: {
    "frontend": "organizations",
    "backend": "organizations",
    "database": "organizations",
    "pretty": "Organizations",
    "component": "Organizations",
    "kebab": "organizations",
    "sqlFunctionRef": "p_organizations",
    "RestAPI": "organizations",
    "GraphQL": "organizations",
    "custom": "organizations"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'permissions', relatedColumn: 'granted_to_organization_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'organization_members', relatedColumn: 'organization_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'organization_invitations', relatedColumn: 'organization_id', junctionTable: null }
        ],
    },
permissions: {
        schemaType: 'table' as const,
        entityName: 'permissions',
        displayName: 'Permissions',
        uniqueTableId: 'supabase_automation_matrix:public:permissions',
        uniqueEntityId: 'supabase_automation_matrix:permissions',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:permissions:id',
            uniqueFieldId: 'supabase_automation_matrix:permissions:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'permissions',
            databaseTable: 'permissions',
            foreignKeyReference: null,
            description: '"Id" field for permissions. This is a required field. Your entry must be an uuid data type.',
        },
            resourceType: {
            fieldNameFormats: {
    "frontend": "resourceType",
    "backend": "resource_type",
    "database": "resource_type",
    "pretty": "Resource Type",
    "component": "ResourceType",
    "kebab": "resource-type",
    "sqlFunctionRef": "p_resource_type",
    "RestAPI": "resourceType",
    "GraphQL": "resourceType",
    "custom": "resourceType"
} as const,
            name: 'resourceType',
            displayName: 'Resource Type',

            uniqueColumnId: 'supabase_automation_matrix:public:permissions:resource_type',
            uniqueFieldId: 'supabase_automation_matrix:permissions:resourceType',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Applet",
            "value": "applet"
        },
        {
            "label": "Broker Value",
            "value": "broker_value"
        },
        {
            "label": "Conversation",
            "value": "conversation"
        },
        {
            "label": "Document",
            "value": "document"
        },
        {
            "label": "Message",
            "value": "message"
        },
        {
            "label": "Organization",
            "value": "organization"
        },
        {
            "label": "Recipe",
            "value": "recipe"
        },
        {
            "label": "Scrape Domain",
            "value": "scrape_domain"
        },
        {
            "label": "Workflow",
            "value": "workflow"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"applet" | "broker_value" | "conversation" | "document" | "message" | "organization" | "recipe" | "scrape_domain" | "workflow" | undefined>,
            enumValues: ['applet', 'broker_value', 'conversation', 'document', 'message', 'organization', 'recipe', 'scrape_domain', 'workflow'] as const,
            entityName: 'permissions',
            databaseTable: 'permissions',
            foreignKeyReference: null,
            description: '"Resource Type" field for permissions. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            resourceId: {
            fieldNameFormats: {
    "frontend": "resourceId",
    "backend": "resource_id",
    "database": "resource_id",
    "pretty": "Resource Id",
    "component": "ResourceId",
    "kebab": "resource-id",
    "sqlFunctionRef": "p_resource_id",
    "RestAPI": "resourceId",
    "GraphQL": "resourceId",
    "custom": "resourceId"
} as const,
            name: 'resourceId',
            displayName: 'Resource Id',

            uniqueColumnId: 'supabase_automation_matrix:public:permissions:resource_id',
            uniqueFieldId: 'supabase_automation_matrix:permissions:resourceId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'permissions',
            databaseTable: 'permissions',
            foreignKeyReference: null,
            description: '"Resource Id" field for permissions. This is a required field. Your entry must be an uuid data type. This must be a unique value.',
        },
            grantedToUserId: {
            fieldNameFormats: {
    "frontend": "grantedToUserId",
    "backend": "granted_to_user_id",
    "database": "granted_to_user_id",
    "pretty": "Granted To User Id",
    "component": "GrantedToUserId",
    "kebab": "granted-to-user-id",
    "sqlFunctionRef": "p_granted_to_user_id",
    "RestAPI": "grantedToUserId",
    "GraphQL": "grantedToUserId",
    "custom": "grantedToUserId"
} as const,
            name: 'grantedToUserId',
            displayName: 'Granted To User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:permissions:granted_to_user_id',
            uniqueFieldId: 'supabase_automation_matrix:permissions:grantedToUserId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'permissions',
            databaseTable: 'permissions',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"Granted To User Id" field for permissions. This is an optional field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a users.',
        },
            grantedToOrganizationId: {
            fieldNameFormats: {
    "frontend": "grantedToOrganizationId",
    "backend": "granted_to_organization_id",
    "database": "granted_to_organization_id",
    "pretty": "Granted To Organization Id",
    "component": "GrantedToOrganizationId",
    "kebab": "granted-to-organization-id",
    "sqlFunctionRef": "p_granted_to_organization_id",
    "RestAPI": "grantedToOrganizationId",
    "GraphQL": "grantedToOrganizationId",
    "custom": "grantedToOrganizationId"
} as const,
            name: 'grantedToOrganizationId',
            displayName: 'Granted To Organization Id',

            uniqueColumnId: 'supabase_automation_matrix:public:permissions:granted_to_organization_id',
            uniqueFieldId: 'supabase_automation_matrix:permissions:grantedToOrganizationId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'permissions',
            databaseTable: 'permissions',
            foreignKeyReference: {"table": "organizations", "column": "id", "entity": "organizations", "field": "id"},
            description: '"Granted To Organization Id" field for permissions. This is an optional field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a organizations.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:permissions:is_public',
            uniqueFieldId: 'supabase_automation_matrix:permissions:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'permissions',
            databaseTable: 'permissions',
            foreignKeyReference: null,
            description: '"Is Public" field for permissions. This is an optional field. Your entry must be an boolean data type.',
        },
            permissionLevel: {
            fieldNameFormats: {
    "frontend": "permissionLevel",
    "backend": "permission_level",
    "database": "permission_level",
    "pretty": "Permission Level",
    "component": "PermissionLevel",
    "kebab": "permission-level",
    "sqlFunctionRef": "p_permission_level",
    "RestAPI": "permissionLevel",
    "GraphQL": "permissionLevel",
    "custom": "permissionLevel"
} as const,
            name: 'permissionLevel',
            displayName: 'Permission Level',

            uniqueColumnId: 'supabase_automation_matrix:public:permissions:permission_level',
            uniqueFieldId: 'supabase_automation_matrix:permissions:permissionLevel',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "viewer" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Admin",
            "value": "admin"
        },
        {
            "label": "Editor",
            "value": "editor"
        },
        {
            "label": "Viewer",
            "value": "viewer"
        },
        {
            "label": "Viwwer",
            "value": "viwwer"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"admin" | "editor" | "viewer" | "viwwer" | undefined>,
            enumValues: ['admin', 'editor', 'viewer', 'viwwer'] as const,
            entityName: 'permissions',
            databaseTable: 'permissions',
            foreignKeyReference: null,
            description: '"Permission Level" field for permissions. This is a required field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:permissions:created_at',
            uniqueFieldId: 'supabase_automation_matrix:permissions:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'permissions',
            databaseTable: 'permissions',
            foreignKeyReference: null,
            description: '"Created At" field for permissions. This is an optional field. Your entry must be an date data type.',
        },
            createdBy: {
            fieldNameFormats: {
    "frontend": "createdBy",
    "backend": "created_by",
    "database": "created_by",
    "pretty": "Created By",
    "component": "CreatedBy",
    "kebab": "created-by",
    "sqlFunctionRef": "p_created_by",
    "RestAPI": "createdBy",
    "GraphQL": "createdBy",
    "custom": "createdBy"
} as const,
            name: 'createdBy',
            displayName: 'Created By',

            uniqueColumnId: 'supabase_automation_matrix:public:permissions:created_by',
            uniqueFieldId: 'supabase_automation_matrix:permissions:createdBy',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'permissions',
            databaseTable: 'permissions',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"Created By" field for permissions. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            organizationsReference: {
    fieldNameFormats: {
    "frontend": "organizationsReference",
    "backend": "organizations_reference",
    "database": "ref_organizations",
    "pretty": "Organizations Reference",
    "component": "OrganizationsReference",
    "kebab": "organizationsReference",
    "sqlFunctionRef": "p_ref_organizations",
    "RestAPI": "organizationsReference",
    "GraphQL": "organizationsReference",
    "custom": "organizationsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:organizations:id',
    uniqueFieldId: 'supabase_automation_matrix:organizations:id',
    name: 'organizationsReference',
    displayName: 'Organizations Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['organizations'][]>,
    entityName: 'organizations',
    databaseTable: 'organizations',
    relationshipMap: {organizations: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "permissions",
    "backend": "permissions",
    "database": "permissions",
    "pretty": "Permissions",
    "component": "Permissions",
    "kebab": "permissions",
    "sqlFunctionRef": "p_permissions",
    "RestAPI": "permissions",
    "GraphQL": "permissions",
    "custom": "permissions"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'granted_to_organization_id', relatedTable: 'organizations', relatedColumn: 'id', junctionTable: null }
        ],
    },
processor: {
        schemaType: 'table' as const,
        entityName: 'processor',
        displayName: 'Processor',
        uniqueTableId: 'supabase_automation_matrix:public:processor',
        uniqueEntityId: 'supabase_automation_matrix:processor',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:processor:id',
            uniqueFieldId: 'supabase_automation_matrix:processor:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'processor',
            databaseTable: 'processor',
            foreignKeyReference: null,
            description: '"Id" field for processor. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:processor:name',
            uniqueFieldId: 'supabase_automation_matrix:processor:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'processor',
            databaseTable: 'processor',
            foreignKeyReference: null,
            description: '"Name" field for processor. This is a required field. Your entry must be an string data type.',
        },
            dependsDefault: {
            fieldNameFormats: {
    "frontend": "dependsDefault",
    "backend": "depends_default",
    "database": "depends_default",
    "pretty": "Depends Default",
    "component": "DependsDefault",
    "kebab": "depends-default",
    "sqlFunctionRef": "p_depends_default",
    "RestAPI": "dependsDefault",
    "GraphQL": "dependsDefault",
    "custom": "dependsDefault"
} as const,
            name: 'dependsDefault',
            displayName: 'Depends Default',

            uniqueColumnId: 'supabase_automation_matrix:public:processor:depends_default',
            uniqueFieldId: 'supabase_automation_matrix:processor:dependsDefault',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'processor',
            databaseTable: 'processor',
            foreignKeyReference: {"table": "processor", "column": "id", "entity": "processor", "field": "id"},
            description: '"Depends Default" field for processor. This is an optional field. Your entry must be an uuid data type. This field is a reference to a processor.',
        },
            defaultExtractors: {
            fieldNameFormats: {
    "frontend": "defaultExtractors",
    "backend": "default_extractors",
    "database": "default_extractors",
    "pretty": "Default Extractors",
    "component": "DefaultExtractors",
    "kebab": "default-extractors",
    "sqlFunctionRef": "p_default_extractors",
    "RestAPI": "defaultExtractors",
    "GraphQL": "defaultExtractors",
    "custom": "defaultExtractors"
} as const,
            name: 'defaultExtractors',
            displayName: 'Default Extractors',

            uniqueColumnId: 'supabase_automation_matrix:public:processor:default_extractors',
            uniqueFieldId: 'supabase_automation_matrix:processor:defaultExtractors',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'processor',
            databaseTable: 'processor',
            foreignKeyReference: null,
            description: '"Default Extractors" field for processor. This is an optional field. Your entry must be an object data type.',
        },
            params: {
            fieldNameFormats: {
    "frontend": "params",
    "backend": "params",
    "database": "params",
    "pretty": "Params",
    "component": "Params",
    "kebab": "params",
    "sqlFunctionRef": "p_params",
    "RestAPI": "params",
    "GraphQL": "params",
    "custom": "params"
} as const,
            name: 'params',
            displayName: 'Params',

            uniqueColumnId: 'supabase_automation_matrix:public:processor:params',
            uniqueFieldId: 'supabase_automation_matrix:processor:params',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'processor',
            databaseTable: 'processor',
            foreignKeyReference: null,
            description: '"Params" field for processor. This is an optional field. Your entry must be an object data type.',
        },
            processorReference: {
    fieldNameFormats: {
    "frontend": "processorReference",
    "backend": "processor_reference",
    "database": "ref_processor",
    "pretty": "Processor Reference",
    "component": "ProcessorReference",
    "kebab": "processorReference",
    "sqlFunctionRef": "p_ref_processor",
    "RestAPI": "processorReference",
    "GraphQL": "processorReference",
    "custom": "processorReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:processor:id',
    uniqueFieldId: 'supabase_automation_matrix:processor:id',
    name: 'processorReference',
    displayName: 'Processor Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['processor'][]>,
    entityName: 'processor',
    databaseTable: 'processor',
    relationshipMap: {None: 'id'},
},
            recipeProcessorInverse: {
    fieldNameFormats: {
    "frontend": "recipeProcessorInverse",
    "backend": "recipe_processor_Inverse",
    "database": "ifk_recipe_processor",
    "pretty": "Recipe Processor Inverse",
    "component": "RecipeProcessorInverse",
    "kebab": "recipe-processorInverse",
    "sqlFunctionRef": "p_ifk_recipe_processor",
    "RestAPI": "recipeProcessorInverse",
    "GraphQL": "recipeProcessorInverse",
    "custom": "recipeProcessorInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_processor',
    uniqueEntityId: 'supabase_automation_matrix:recipeProcessor',
    name: 'recipeProcessorInverse',
    displayName: 'Recipe Processor Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeProcessor'][]>,
    entityName: 'recipeProcessor',
    databaseTable: 'recipe_processor',
},
        },
        entityNameFormats: {
    "frontend": "processor",
    "backend": "processor",
    "database": "processor",
    "pretty": "Processor",
    "component": "Processor",
    "kebab": "processor",
    "sqlFunctionRef": "p_processor",
    "RestAPI": "processor",
    "GraphQL": "processor",
    "custom": "processor"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'depends_default', relatedTable: 'self_reference', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_processor', relatedColumn: 'processor', junctionTable: null }
        ],
    },
projectMembers: {
        schemaType: 'table' as const,
        entityName: 'projectMembers',
        displayName: 'Project Members',
        uniqueTableId: 'supabase_automation_matrix:public:project_members',
        uniqueEntityId: 'supabase_automation_matrix:projectMembers',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:project_members:id',
            uniqueFieldId: 'supabase_automation_matrix:projectMembers:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'projectMembers',
            databaseTable: 'project_members',
            foreignKeyReference: null,
            description: '"Id" field for projectMembers. This is a required field. Your entry must be an uuid data type.',
        },
            projectId: {
            fieldNameFormats: {
    "frontend": "projectId",
    "backend": "project_id",
    "database": "project_id",
    "pretty": "Project Id",
    "component": "ProjectId",
    "kebab": "project-id",
    "sqlFunctionRef": "p_project_id",
    "RestAPI": "projectId",
    "GraphQL": "projectId",
    "custom": "projectId"
} as const,
            name: 'projectId',
            displayName: 'Project Id',

            uniqueColumnId: 'supabase_automation_matrix:public:project_members:project_id',
            uniqueFieldId: 'supabase_automation_matrix:projectMembers:projectId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'projectMembers',
            databaseTable: 'project_members',
            foreignKeyReference: {"table": "projects", "column": "id", "entity": "projects", "field": "id"},
            description: '"Project Id" field for projectMembers. This is an optional field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a projects.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:project_members:user_id',
            uniqueFieldId: 'supabase_automation_matrix:projectMembers:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'projectMembers',
            databaseTable: 'project_members',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for projectMembers. This is an optional field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a users.',
        },
            role: {
            fieldNameFormats: {
    "frontend": "role",
    "backend": "role",
    "database": "role",
    "pretty": "Role",
    "component": "Role",
    "kebab": "role",
    "sqlFunctionRef": "p_role",
    "RestAPI": "role",
    "GraphQL": "role",
    "custom": "role"
} as const,
            name: 'role',
            displayName: 'Role',

            uniqueColumnId: 'supabase_automation_matrix:public:project_members:role',
            uniqueFieldId: 'supabase_automation_matrix:projectMembers:role',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'projectMembers',
            databaseTable: 'project_members',
            foreignKeyReference: null,
            description: '"Role" field for projectMembers. This is a required field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:project_members:created_at',
            uniqueFieldId: 'supabase_automation_matrix:projectMembers:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'projectMembers',
            databaseTable: 'project_members',
            foreignKeyReference: null,
            description: '"Created At" field for projectMembers. This is an optional field. Your entry must be an date data type.',
        },
            projectsReference: {
    fieldNameFormats: {
    "frontend": "projectsReference",
    "backend": "projects_reference",
    "database": "ref_projects",
    "pretty": "Projects Reference",
    "component": "ProjectsReference",
    "kebab": "projectsReference",
    "sqlFunctionRef": "p_ref_projects",
    "RestAPI": "projectsReference",
    "GraphQL": "projectsReference",
    "custom": "projectsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:projects:id',
    uniqueFieldId: 'supabase_automation_matrix:projects:id',
    name: 'projectsReference',
    displayName: 'Projects Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['projects'][]>,
    entityName: 'projects',
    databaseTable: 'projects',
    relationshipMap: {projects: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "projectMembers",
    "backend": "project_members",
    "database": "project_members",
    "pretty": "Project Members",
    "component": "ProjectMembers",
    "kebab": "project-members",
    "sqlFunctionRef": "p_project_members",
    "RestAPI": "projectMembers",
    "GraphQL": "projectMembers",
    "custom": "projectMembers"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'project_id', relatedTable: 'projects', relatedColumn: 'id', junctionTable: null }
        ],
    },
projects: {
        schemaType: 'table' as const,
        entityName: 'projects',
        displayName: 'Projects',
        uniqueTableId: 'supabase_automation_matrix:public:projects',
        uniqueEntityId: 'supabase_automation_matrix:projects',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:projects:id',
            uniqueFieldId: 'supabase_automation_matrix:projects:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'projects',
            databaseTable: 'projects',
            foreignKeyReference: null,
            description: '"Id" field for projects. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:projects:name',
            uniqueFieldId: 'supabase_automation_matrix:projects:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'projects',
            databaseTable: 'projects',
            foreignKeyReference: null,
            description: '"Name" field for projects. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:projects:description',
            uniqueFieldId: 'supabase_automation_matrix:projects:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'projects',
            databaseTable: 'projects',
            foreignKeyReference: null,
            description: '"Description" field for projects. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:projects:created_at',
            uniqueFieldId: 'supabase_automation_matrix:projects:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'projects',
            databaseTable: 'projects',
            foreignKeyReference: null,
            description: '"Created At" field for projects. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:projects:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:projects:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'projects',
            databaseTable: 'projects',
            foreignKeyReference: null,
            description: '"Updated At" field for projects. This is an optional field. Your entry must be an date data type.',
        },
            createdBy: {
            fieldNameFormats: {
    "frontend": "createdBy",
    "backend": "created_by",
    "database": "created_by",
    "pretty": "Created By",
    "component": "CreatedBy",
    "kebab": "created-by",
    "sqlFunctionRef": "p_created_by",
    "RestAPI": "createdBy",
    "GraphQL": "createdBy",
    "custom": "createdBy"
} as const,
            name: 'createdBy',
            displayName: 'Created By',

            uniqueColumnId: 'supabase_automation_matrix:public:projects:created_by',
            uniqueFieldId: 'supabase_automation_matrix:projects:createdBy',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'projects',
            databaseTable: 'projects',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"Created By" field for projects. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            projectMembersInverse: {
    fieldNameFormats: {
    "frontend": "projectMembersInverse",
    "backend": "project_members_Inverse",
    "database": "ifk_project_members",
    "pretty": "Project Members Inverse",
    "component": "ProjectMembersInverse",
    "kebab": "project-membersInverse",
    "sqlFunctionRef": "p_ifk_project_members",
    "RestAPI": "projectMembersInverse",
    "GraphQL": "projectMembersInverse",
    "custom": "projectMembersInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:project_members',
    uniqueEntityId: 'supabase_automation_matrix:projectMembers',
    name: 'projectMembersInverse',
    displayName: 'Project Members Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['projectMembers'][]>,
    entityName: 'projectMembers',
    databaseTable: 'project_members',
},
            tasksInverse: {
    fieldNameFormats: {
    "frontend": "tasksInverse",
    "backend": "tasks_Inverse",
    "database": "ifk_tasks",
    "pretty": "Tasks Inverse",
    "component": "TasksInverse",
    "kebab": "tasksInverse",
    "sqlFunctionRef": "p_ifk_tasks",
    "RestAPI": "tasksInverse",
    "GraphQL": "tasksInverse",
    "custom": "tasksInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:tasks',
    uniqueEntityId: 'supabase_automation_matrix:tasks',
    name: 'tasksInverse',
    displayName: 'Tasks Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['tasks'][]>,
    entityName: 'tasks',
    databaseTable: 'tasks',
},
        },
        entityNameFormats: {
    "frontend": "projects",
    "backend": "projects",
    "database": "projects",
    "pretty": "Projects",
    "component": "Projects",
    "kebab": "projects",
    "sqlFunctionRef": "p_projects",
    "RestAPI": "projects",
    "GraphQL": "projects",
    "custom": "projects"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'project_members', relatedColumn: 'project_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'tasks', relatedColumn: 'project_id', junctionTable: null }
        ],
    },
prompts: {
        schemaType: 'table' as const,
        entityName: 'prompts',
        displayName: 'Prompts',
        uniqueTableId: 'supabase_automation_matrix:public:prompts',
        uniqueEntityId: 'supabase_automation_matrix:prompts',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:id',
            uniqueFieldId: 'supabase_automation_matrix:prompts:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: null,
            description: '"Id" field for prompts. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:created_at',
            uniqueFieldId: 'supabase_automation_matrix:prompts:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: null,
            description: '"Created At" field for prompts. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:prompts:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: null,
            description: '"Updated At" field for prompts. This is an optional field. Your entry must be an date data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:name',
            uniqueFieldId: 'supabase_automation_matrix:prompts:name',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: null,
            description: '"Name" field for prompts. This is an optional field. Your entry must be an string data type.',
        },
            messages: {
            fieldNameFormats: {
    "frontend": "messages",
    "backend": "messages",
    "database": "messages",
    "pretty": "Messages",
    "component": "Messages",
    "kebab": "messages",
    "sqlFunctionRef": "p_messages",
    "RestAPI": "messages",
    "GraphQL": "messages",
    "custom": "messages"
} as const,
            name: 'messages',
            displayName: 'Messages',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:messages',
            uniqueFieldId: 'supabase_automation_matrix:prompts:messages',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: null,
            description: '"Messages" field for prompts. This is an optional field. Your entry must be an object data type.',
        },
            variableDefaults: {
            fieldNameFormats: {
    "frontend": "variableDefaults",
    "backend": "variable_defaults",
    "database": "variable_defaults",
    "pretty": "Variable Defaults",
    "component": "VariableDefaults",
    "kebab": "variable-defaults",
    "sqlFunctionRef": "p_variable_defaults",
    "RestAPI": "variableDefaults",
    "GraphQL": "variableDefaults",
    "custom": "variableDefaults"
} as const,
            name: 'variableDefaults',
            displayName: 'Variable Defaults',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:variable_defaults',
            uniqueFieldId: 'supabase_automation_matrix:prompts:variableDefaults',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: null,
            description: '"Variable Defaults" field for prompts. This is an optional field. Your entry must be an object data type.',
        },
            tools: {
            fieldNameFormats: {
    "frontend": "tools",
    "backend": "tools",
    "database": "tools",
    "pretty": "Tools",
    "component": "Tools",
    "kebab": "tools",
    "sqlFunctionRef": "p_tools",
    "RestAPI": "tools",
    "GraphQL": "tools",
    "custom": "tools"
} as const,
            name: 'tools',
            displayName: 'Tools',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:tools',
            uniqueFieldId: 'supabase_automation_matrix:prompts:tools',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: null,
            description: '"Tools" field for prompts. This is an optional field. Your entry must be an object data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:prompts:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for prompts. This is an optional field. Your entry must be an boolean data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:is_public',
            uniqueFieldId: 'supabase_automation_matrix:prompts:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: null,
            description: '"Is Public" field for prompts. This is an optional field. Your entry must be an boolean data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:user_id',
            uniqueFieldId: 'supabase_automation_matrix:prompts:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for prompts. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:prompts:public_read',
            uniqueFieldId: 'supabase_automation_matrix:prompts:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'prompts',
            databaseTable: 'prompts',
            foreignKeyReference: null,
            description: '"Public Read" field for prompts. This is an optional field. Your entry must be an boolean data type.',
        },
        },
        entityNameFormats: {
    "frontend": "prompts",
    "backend": "prompts",
    "database": "prompts",
    "pretty": "Prompts",
    "component": "Prompts",
    "kebab": "prompts",
    "sqlFunctionRef": "p_prompts",
    "RestAPI": "prompts",
    "GraphQL": "prompts",
    "custom": "prompts"
},
        relationships: [
            
        ],
    },
recipe: {
        schemaType: 'table' as const,
        entityName: 'recipe',
        displayName: 'Recipe',
        uniqueTableId: 'supabase_automation_matrix:public:recipe',
        uniqueEntityId: 'supabase_automation_matrix:recipe',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe:id',
            uniqueFieldId: 'supabase_automation_matrix:recipe:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipe',
            databaseTable: 'recipe',
            foreignKeyReference: null,
            description: '"Id" field for recipe. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe:name',
            uniqueFieldId: 'supabase_automation_matrix:recipe:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipe',
            databaseTable: 'recipe',
            foreignKeyReference: null,
            description: '"Name" field for recipe. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe:description',
            uniqueFieldId: 'supabase_automation_matrix:recipe:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipe',
            databaseTable: 'recipe',
            foreignKeyReference: null,
            description: '"Description" field for recipe. This is an optional field. Your entry must be an string data type.',
        },
            tags: {
            fieldNameFormats: {
    "frontend": "tags",
    "backend": "tags",
    "database": "tags",
    "pretty": "Tags",
    "component": "Tags",
    "kebab": "tags",
    "sqlFunctionRef": "p_tags",
    "RestAPI": "tags",
    "GraphQL": "tags",
    "custom": "tags"
} as const,
            name: 'tags',
            displayName: 'Tags',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe:tags',
            uniqueFieldId: 'supabase_automation_matrix:recipe:tags',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'recipe',
            databaseTable: 'recipe',
            foreignKeyReference: null,
            description: '"Tags" field for recipe. This is an optional field. Your entry must be an object data type.',
        },
            sampleOutput: {
            fieldNameFormats: {
    "frontend": "sampleOutput",
    "backend": "sample_output",
    "database": "sample_output",
    "pretty": "Sample Output",
    "component": "SampleOutput",
    "kebab": "sample-output",
    "sqlFunctionRef": "p_sample_output",
    "RestAPI": "sampleOutput",
    "GraphQL": "sampleOutput",
    "custom": "sampleOutput"
} as const,
            name: 'sampleOutput',
            displayName: 'Sample Output',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe:sample_output',
            uniqueFieldId: 'supabase_automation_matrix:recipe:sampleOutput',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipe',
            databaseTable: 'recipe',
            foreignKeyReference: null,
            description: '"Sample Output" field for recipe. This is an optional field. Your entry must be an string data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe:is_public',
            uniqueFieldId: 'supabase_automation_matrix:recipe:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'recipe',
            databaseTable: 'recipe',
            foreignKeyReference: null,
            description: '"Is Public" field for recipe. This is an optional field. Your entry must be an boolean data type.',
        },
            status: {
            fieldNameFormats: {
    "frontend": "status",
    "backend": "status",
    "database": "status",
    "pretty": "Status",
    "component": "Status",
    "kebab": "status",
    "sqlFunctionRef": "p_status",
    "RestAPI": "status",
    "GraphQL": "status",
    "custom": "status"
} as const,
            name: 'status',
            displayName: 'Status',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe:status',
            uniqueFieldId: 'supabase_automation_matrix:recipe:status',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "draft" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Active Testing",
            "value": "active_testing"
        },
        {
            "label": "Archived",
            "value": "archived"
        },
        {
            "label": "Draft",
            "value": "draft"
        },
        {
            "label": "In Review",
            "value": "in_review"
        },
        {
            "label": "Live",
            "value": "live"
        },
        {
            "label": "Other",
            "value": "other"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"active_testing" | "archived" | "draft" | "in_review" | "live" | "other" | undefined>,
            enumValues: ['active_testing', 'archived', 'draft', 'in_review', 'live', 'other'] as const,
            entityName: 'recipe',
            databaseTable: 'recipe',
            foreignKeyReference: null,
            description: '"Status" field for recipe. This is a required field. Your entry must be an string data type.',
        },
            version: {
            fieldNameFormats: {
    "frontend": "version",
    "backend": "version",
    "database": "version",
    "pretty": "Version",
    "component": "Version",
    "kebab": "version",
    "sqlFunctionRef": "p_version",
    "RestAPI": "version",
    "GraphQL": "version",
    "custom": "version"
} as const,
            name: 'version',
            displayName: 'Version',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe:version',
            uniqueFieldId: 'supabase_automation_matrix:recipe:version',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "1" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'recipe',
            databaseTable: 'recipe',
            foreignKeyReference: null,
            description: '"Version" field for recipe. This is an optional field. Your entry must be an number data type.',
        },
            postResultOptions: {
            fieldNameFormats: {
    "frontend": "postResultOptions",
    "backend": "post_result_options",
    "database": "post_result_options",
    "pretty": "Post Result Options",
    "component": "PostResultOptions",
    "kebab": "post-result-options",
    "sqlFunctionRef": "p_post_result_options",
    "RestAPI": "postResultOptions",
    "GraphQL": "postResultOptions",
    "custom": "postResultOptions"
} as const,
            name: 'postResultOptions',
            displayName: 'Post Result Options',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe:post_result_options',
            uniqueFieldId: 'supabase_automation_matrix:recipe:postResultOptions',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'recipe',
            databaseTable: 'recipe',
            foreignKeyReference: null,
            description: '"Post Result Options" field for recipe. This is an optional field. Your entry must be an object data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe:user_id',
            uniqueFieldId: 'supabase_automation_matrix:recipe:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipe',
            databaseTable: 'recipe',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for recipe. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            compiledRecipeInverse: {
    fieldNameFormats: {
    "frontend": "compiledRecipeInverse",
    "backend": "compiled_recipe_Inverse",
    "database": "ifk_compiled_recipe",
    "pretty": "Compiled Recipe Inverse",
    "component": "CompiledRecipeInverse",
    "kebab": "compiled-recipeInverse",
    "sqlFunctionRef": "p_ifk_compiled_recipe",
    "RestAPI": "compiledRecipeInverse",
    "GraphQL": "compiledRecipeInverse",
    "custom": "compiledRecipeInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:compiled_recipe',
    uniqueEntityId: 'supabase_automation_matrix:compiledRecipe',
    name: 'compiledRecipeInverse',
    displayName: 'Compiled Recipe Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['compiledRecipe'][]>,
    entityName: 'compiledRecipe',
    databaseTable: 'compiled_recipe',
},
            aiAgentInverse: {
    fieldNameFormats: {
    "frontend": "aiAgentInverse",
    "backend": "ai_agent_Inverse",
    "database": "ifk_ai_agent",
    "pretty": "Ai Agent Inverse",
    "component": "AiAgentInverse",
    "kebab": "ai-agentInverse",
    "sqlFunctionRef": "p_ifk_ai_agent",
    "RestAPI": "aiAgentInverse",
    "GraphQL": "aiAgentInverse",
    "custom": "aiAgentInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:ai_agent',
    uniqueEntityId: 'supabase_automation_matrix:aiAgent',
    name: 'aiAgentInverse',
    displayName: 'Ai Agent Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiAgent'][]>,
    entityName: 'aiAgent',
    databaseTable: 'ai_agent',
},
            recipeDisplayInverse: {
    fieldNameFormats: {
    "frontend": "recipeDisplayInverse",
    "backend": "recipe_display_Inverse",
    "database": "ifk_recipe_display",
    "pretty": "Recipe Display Inverse",
    "component": "RecipeDisplayInverse",
    "kebab": "recipe-displayInverse",
    "sqlFunctionRef": "p_ifk_recipe_display",
    "RestAPI": "recipeDisplayInverse",
    "GraphQL": "recipeDisplayInverse",
    "custom": "recipeDisplayInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_display',
    uniqueEntityId: 'supabase_automation_matrix:recipeDisplay',
    name: 'recipeDisplayInverse',
    displayName: 'Recipe Display Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeDisplay'][]>,
    entityName: 'recipeDisplay',
    databaseTable: 'recipe_display',
},
            recipeProcessorInverse: {
    fieldNameFormats: {
    "frontend": "recipeProcessorInverse",
    "backend": "recipe_processor_Inverse",
    "database": "ifk_recipe_processor",
    "pretty": "Recipe Processor Inverse",
    "component": "RecipeProcessorInverse",
    "kebab": "recipe-processorInverse",
    "sqlFunctionRef": "p_ifk_recipe_processor",
    "RestAPI": "recipeProcessorInverse",
    "GraphQL": "recipeProcessorInverse",
    "custom": "recipeProcessorInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_processor',
    uniqueEntityId: 'supabase_automation_matrix:recipeProcessor',
    name: 'recipeProcessorInverse',
    displayName: 'Recipe Processor Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeProcessor'][]>,
    entityName: 'recipeProcessor',
    databaseTable: 'recipe_processor',
},
            recipeModelInverse: {
    fieldNameFormats: {
    "frontend": "recipeModelInverse",
    "backend": "recipe_model_Inverse",
    "database": "ifk_recipe_model",
    "pretty": "Recipe Model Inverse",
    "component": "RecipeModelInverse",
    "kebab": "recipe-modelInverse",
    "sqlFunctionRef": "p_ifk_recipe_model",
    "RestAPI": "recipeModelInverse",
    "GraphQL": "recipeModelInverse",
    "custom": "recipeModelInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_model',
    uniqueEntityId: 'supabase_automation_matrix:recipeModel',
    name: 'recipeModelInverse',
    displayName: 'Recipe Model Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeModel'][]>,
    entityName: 'recipeModel',
    databaseTable: 'recipe_model',
},
            recipeBrokerInverse: {
    fieldNameFormats: {
    "frontend": "recipeBrokerInverse",
    "backend": "recipe_broker_Inverse",
    "database": "ifk_recipe_broker",
    "pretty": "Recipe Broker Inverse",
    "component": "RecipeBrokerInverse",
    "kebab": "recipe-brokerInverse",
    "sqlFunctionRef": "p_ifk_recipe_broker",
    "RestAPI": "recipeBrokerInverse",
    "GraphQL": "recipeBrokerInverse",
    "custom": "recipeBrokerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_broker',
    uniqueEntityId: 'supabase_automation_matrix:recipeBroker',
    name: 'recipeBrokerInverse',
    displayName: 'Recipe Broker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeBroker'][]>,
    entityName: 'recipeBroker',
    databaseTable: 'recipe_broker',
},
            recipeMessageInverse: {
    fieldNameFormats: {
    "frontend": "recipeMessageInverse",
    "backend": "recipe_message_Inverse",
    "database": "ifk_recipe_message",
    "pretty": "Recipe Message Inverse",
    "component": "RecipeMessageInverse",
    "kebab": "recipe-messageInverse",
    "sqlFunctionRef": "p_ifk_recipe_message",
    "RestAPI": "recipeMessageInverse",
    "GraphQL": "recipeMessageInverse",
    "custom": "recipeMessageInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_message',
    uniqueEntityId: 'supabase_automation_matrix:recipeMessage',
    name: 'recipeMessageInverse',
    displayName: 'Recipe Message Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeMessage'][]>,
    entityName: 'recipeMessage',
    databaseTable: 'recipe_message',
},
            recipeToolInverse: {
    fieldNameFormats: {
    "frontend": "recipeToolInverse",
    "backend": "recipe_tool_Inverse",
    "database": "ifk_recipe_tool",
    "pretty": "Recipe Tool Inverse",
    "component": "RecipeToolInverse",
    "kebab": "recipe-toolInverse",
    "sqlFunctionRef": "p_ifk_recipe_tool",
    "RestAPI": "recipeToolInverse",
    "GraphQL": "recipeToolInverse",
    "custom": "recipeToolInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_tool',
    uniqueEntityId: 'supabase_automation_matrix:recipeTool',
    name: 'recipeToolInverse',
    displayName: 'Recipe Tool Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeTool'][]>,
    entityName: 'recipeTool',
    databaseTable: 'recipe_tool',
},
            recipeFunctionInverse: {
    fieldNameFormats: {
    "frontend": "recipeFunctionInverse",
    "backend": "recipe_function_Inverse",
    "database": "ifk_recipe_function",
    "pretty": "Recipe Function Inverse",
    "component": "RecipeFunctionInverse",
    "kebab": "recipe-functionInverse",
    "sqlFunctionRef": "p_ifk_recipe_function",
    "RestAPI": "recipeFunctionInverse",
    "GraphQL": "recipeFunctionInverse",
    "custom": "recipeFunctionInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_function',
    uniqueEntityId: 'supabase_automation_matrix:recipeFunction',
    name: 'recipeFunctionInverse',
    displayName: 'Recipe Function Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeFunction'][]>,
    entityName: 'recipeFunction',
    databaseTable: 'recipe_function',
},
        },
        entityNameFormats: {
    "frontend": "recipe",
    "backend": "recipe",
    "database": "recipe",
    "pretty": "Recipe",
    "component": "Recipe",
    "kebab": "recipe",
    "sqlFunctionRef": "p_recipe",
    "RestAPI": "recipe",
    "GraphQL": "recipe",
    "custom": "recipe"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'compiled_recipe', relatedColumn: 'recipe_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'ai_agent', relatedColumn: 'recipe_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_display', relatedColumn: 'recipe', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_processor', relatedColumn: 'recipe', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_model', relatedColumn: 'recipe', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_broker', relatedColumn: 'recipe', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_message', relatedColumn: 'recipe_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_tool', relatedColumn: 'recipe', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_function', relatedColumn: 'recipe', junctionTable: null }
        ],
    },
recipeBroker: {
        schemaType: 'table' as const,
        entityName: 'recipeBroker',
        displayName: 'Recipe Broker',
        uniqueTableId: 'supabase_automation_matrix:public:recipe_broker',
        uniqueEntityId: 'supabase_automation_matrix:recipeBroker',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'broker', databaseFieldName: 'broker' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_broker:id',
            uniqueFieldId: 'supabase_automation_matrix:recipeBroker:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeBroker',
            databaseTable: 'recipe_broker',
            foreignKeyReference: null,
            description: '"Id" field for recipeBroker. This is a required field. Your entry must be an uuid data type.',
        },
            recipe: {
            fieldNameFormats: {
    "frontend": "recipe",
    "backend": "recipe",
    "database": "recipe",
    "pretty": "Recipe",
    "component": "Recipe",
    "kebab": "recipe",
    "sqlFunctionRef": "p_recipe",
    "RestAPI": "recipe",
    "GraphQL": "recipe",
    "custom": "recipe"
} as const,
            name: 'recipe',
            displayName: 'Recipe',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_broker:recipe',
            uniqueFieldId: 'supabase_automation_matrix:recipeBroker:recipe',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeBroker',
            databaseTable: 'recipe_broker',
            foreignKeyReference: {"table": "recipe", "column": "id", "entity": "recipe", "field": "id"},
            description: '"Recipe" field for recipeBroker. This is a required field. Your entry must be an uuid data type. This field is a reference to a recipe.',
        },
            broker: {
            fieldNameFormats: {
    "frontend": "broker",
    "backend": "broker",
    "database": "broker",
    "pretty": "Broker",
    "component": "Broker",
    "kebab": "broker",
    "sqlFunctionRef": "p_broker",
    "RestAPI": "broker",
    "GraphQL": "broker",
    "custom": "broker"
} as const,
            name: 'broker',
            displayName: 'Broker',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_broker:broker',
            uniqueFieldId: 'supabase_automation_matrix:recipeBroker:broker',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeBroker',
            databaseTable: 'recipe_broker',
            foreignKeyReference: {"table": "broker", "column": "id", "entity": "broker", "field": "id"},
            description: '"Broker" field for recipeBroker. This is a required field. Your entry must be an uuid data type. This field is a reference to a broker.',
        },
            brokerRole: {
            fieldNameFormats: {
    "frontend": "brokerRole",
    "backend": "broker_role",
    "database": "broker_role",
    "pretty": "Broker Role",
    "component": "BrokerRole",
    "kebab": "broker-role",
    "sqlFunctionRef": "p_broker_role",
    "RestAPI": "brokerRole",
    "GraphQL": "brokerRole",
    "custom": "brokerRole"
} as const,
            name: 'brokerRole',
            displayName: 'Broker Role',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_broker:broker_role',
            uniqueFieldId: 'supabase_automation_matrix:recipeBroker:brokerRole',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Input Broker",
            "value": "input_broker"
        },
        {
            "label": "Output Broker",
            "value": "output_broker"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"input_broker" | "output_broker" | undefined>,
            enumValues: ['input_broker', 'output_broker'] as const,
            entityName: 'recipeBroker',
            databaseTable: 'recipe_broker',
            foreignKeyReference: null,
            description: '"Broker Role" field for recipeBroker. This is a required field. Your entry must be an string data type.',
        },
            required: {
            fieldNameFormats: {
    "frontend": "required",
    "backend": "required",
    "database": "required",
    "pretty": "Required",
    "component": "Required",
    "kebab": "required",
    "sqlFunctionRef": "p_required",
    "RestAPI": "required",
    "GraphQL": "required",
    "custom": "required"
} as const,
            name: 'required',
            displayName: 'Required',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_broker:required',
            uniqueFieldId: 'supabase_automation_matrix:recipeBroker:required',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'recipeBroker',
            databaseTable: 'recipe_broker',
            foreignKeyReference: null,
            description: '"Required" field for recipeBroker. This is an optional field. Your entry must be an boolean data type.',
        },
            brokerReference: {
    fieldNameFormats: {
    "frontend": "brokerReference",
    "backend": "broker_reference",
    "database": "ref_broker",
    "pretty": "Broker Reference",
    "component": "BrokerReference",
    "kebab": "brokerReference",
    "sqlFunctionRef": "p_ref_broker",
    "RestAPI": "brokerReference",
    "GraphQL": "brokerReference",
    "custom": "brokerReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:broker:id',
    uniqueFieldId: 'supabase_automation_matrix:broker:id',
    name: 'brokerReference',
    displayName: 'Broker Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['broker'][]>,
    entityName: 'broker',
    databaseTable: 'broker',
    relationshipMap: {broker: 'id', recipe: 'id'},
},
            recipeReference: {
    fieldNameFormats: {
    "frontend": "recipeReference",
    "backend": "recipe_reference",
    "database": "ref_recipe",
    "pretty": "Recipe Reference",
    "component": "RecipeReference",
    "kebab": "recipeReference",
    "sqlFunctionRef": "p_ref_recipe",
    "RestAPI": "recipeReference",
    "GraphQL": "recipeReference",
    "custom": "recipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:recipe:id',
    name: 'recipeReference',
    displayName: 'Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
    entityName: 'recipe',
    databaseTable: 'recipe',
    relationshipMap: {broker: 'id', recipe: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "recipeBroker",
    "backend": "recipe_broker",
    "database": "recipe_broker",
    "pretty": "Recipe Broker",
    "component": "RecipeBroker",
    "kebab": "recipe-broker",
    "sqlFunctionRef": "p_recipe_broker",
    "RestAPI": "recipeBroker",
    "GraphQL": "recipeBroker",
    "custom": "recipeBroker"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'broker', relatedTable: 'broker', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'recipe', relatedTable: 'recipe', relatedColumn: 'id', junctionTable: null }
        ],
    },
recipeDisplay: {
        schemaType: 'table' as const,
        entityName: 'recipeDisplay',
        displayName: 'Recipe Display',
        uniqueTableId: 'supabase_automation_matrix:public:recipe_display',
        uniqueEntityId: 'supabase_automation_matrix:recipeDisplay',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_display:id',
            uniqueFieldId: 'supabase_automation_matrix:recipeDisplay:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeDisplay',
            databaseTable: 'recipe_display',
            foreignKeyReference: null,
            description: '"Id" field for recipeDisplay. This is a required field. Your entry must be an uuid data type.',
        },
            recipe: {
            fieldNameFormats: {
    "frontend": "recipe",
    "backend": "recipe",
    "database": "recipe",
    "pretty": "Recipe",
    "component": "Recipe",
    "kebab": "recipe",
    "sqlFunctionRef": "p_recipe",
    "RestAPI": "recipe",
    "GraphQL": "recipe",
    "custom": "recipe"
} as const,
            name: 'recipe',
            displayName: 'Recipe',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_display:recipe',
            uniqueFieldId: 'supabase_automation_matrix:recipeDisplay:recipe',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeDisplay',
            databaseTable: 'recipe_display',
            foreignKeyReference: {"table": "recipe", "column": "id", "entity": "recipe", "field": "id"},
            description: '"Recipe" field for recipeDisplay. This is a required field. Your entry must be an uuid data type. This field is a reference to a recipe.',
        },
            display: {
            fieldNameFormats: {
    "frontend": "display",
    "backend": "display",
    "database": "display",
    "pretty": "Display",
    "component": "Display",
    "kebab": "display",
    "sqlFunctionRef": "p_display",
    "RestAPI": "display",
    "GraphQL": "display",
    "custom": "display"
} as const,
            name: 'display',
            displayName: 'Display',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_display:display',
            uniqueFieldId: 'supabase_automation_matrix:recipeDisplay:display',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeDisplay',
            databaseTable: 'recipe_display',
            foreignKeyReference: {"table": "display_option", "column": "id", "entity": "displayOption", "field": "id"},
            description: '"Display" field for recipeDisplay. This is a required field. Your entry must be an uuid data type. This field is a reference to a displayOption.',
        },
            priority: {
            fieldNameFormats: {
    "frontend": "priority",
    "backend": "priority",
    "database": "priority",
    "pretty": "Priority",
    "component": "Priority",
    "kebab": "priority",
    "sqlFunctionRef": "p_priority",
    "RestAPI": "priority",
    "GraphQL": "priority",
    "custom": "priority"
} as const,
            name: 'priority',
            displayName: 'Priority',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_display:priority',
            uniqueFieldId: 'supabase_automation_matrix:recipeDisplay:priority',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "1" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'recipeDisplay',
            databaseTable: 'recipe_display',
            foreignKeyReference: null,
            description: '"Priority" field for recipeDisplay. This is an optional field. Your entry must be an number data type.',
        },
            displaySettings: {
            fieldNameFormats: {
    "frontend": "displaySettings",
    "backend": "display_settings",
    "database": "display_settings",
    "pretty": "Display Settings",
    "component": "DisplaySettings",
    "kebab": "display-settings",
    "sqlFunctionRef": "p_display_settings",
    "RestAPI": "displaySettings",
    "GraphQL": "displaySettings",
    "custom": "displaySettings"
} as const,
            name: 'displaySettings',
            displayName: 'Display Settings',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_display:display_settings',
            uniqueFieldId: 'supabase_automation_matrix:recipeDisplay:displaySettings',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'recipeDisplay',
            databaseTable: 'recipe_display',
            foreignKeyReference: null,
            description: '"Display Settings" field for recipeDisplay. This is an optional field. Your entry must be an object data type.',
        },
            displayOptionReference: {
    fieldNameFormats: {
    "frontend": "displayOptionReference",
    "backend": "display_option_reference",
    "database": "ref_display_option",
    "pretty": "Display Option Reference",
    "component": "DisplayOptionReference",
    "kebab": "display-optionReference",
    "sqlFunctionRef": "p_ref_display_option",
    "RestAPI": "displayOptionReference",
    "GraphQL": "displayOptionReference",
    "custom": "displayOptionReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:display_option:id',
    uniqueFieldId: 'supabase_automation_matrix:displayOption:id',
    name: 'displayOptionReference',
    displayName: 'Display Option Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['displayOption'][]>,
    entityName: 'displayOption',
    databaseTable: 'display_option',
    relationshipMap: {display_option: 'id', recipe: 'id'},
},
            recipeReference: {
    fieldNameFormats: {
    "frontend": "recipeReference",
    "backend": "recipe_reference",
    "database": "ref_recipe",
    "pretty": "Recipe Reference",
    "component": "RecipeReference",
    "kebab": "recipeReference",
    "sqlFunctionRef": "p_ref_recipe",
    "RestAPI": "recipeReference",
    "GraphQL": "recipeReference",
    "custom": "recipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:recipe:id',
    name: 'recipeReference',
    displayName: 'Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
    entityName: 'recipe',
    databaseTable: 'recipe',
    relationshipMap: {display_option: 'id', recipe: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "recipeDisplay",
    "backend": "recipe_display",
    "database": "recipe_display",
    "pretty": "Recipe Display",
    "component": "RecipeDisplay",
    "kebab": "recipe-display",
    "sqlFunctionRef": "p_recipe_display",
    "RestAPI": "recipeDisplay",
    "GraphQL": "recipeDisplay",
    "custom": "recipeDisplay"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'display', relatedTable: 'display_option', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'recipe', relatedTable: 'recipe', relatedColumn: 'id', junctionTable: null }
        ],
    },
recipeFunction: {
        schemaType: 'table' as const,
        entityName: 'recipeFunction',
        displayName: 'Recipe Function',
        uniqueTableId: 'supabase_automation_matrix:public:recipe_function',
        uniqueEntityId: 'supabase_automation_matrix:recipeFunction',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_function:id',
            uniqueFieldId: 'supabase_automation_matrix:recipeFunction:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeFunction',
            databaseTable: 'recipe_function',
            foreignKeyReference: null,
            description: '"Id" field for recipeFunction. This is a required field. Your entry must be an uuid data type.',
        },
            recipe: {
            fieldNameFormats: {
    "frontend": "recipe",
    "backend": "recipe",
    "database": "recipe",
    "pretty": "Recipe",
    "component": "Recipe",
    "kebab": "recipe",
    "sqlFunctionRef": "p_recipe",
    "RestAPI": "recipe",
    "GraphQL": "recipe",
    "custom": "recipe"
} as const,
            name: 'recipe',
            displayName: 'Recipe',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_function:recipe',
            uniqueFieldId: 'supabase_automation_matrix:recipeFunction:recipe',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeFunction',
            databaseTable: 'recipe_function',
            foreignKeyReference: {"table": "recipe", "column": "id", "entity": "recipe", "field": "id"},
            description: '"Recipe" field for recipeFunction. This is a required field. Your entry must be an uuid data type. This field is a reference to a recipe.',
        },
            function: {
            fieldNameFormats: {
    "frontend": "function",
    "backend": "function",
    "database": "function",
    "pretty": "Function",
    "component": "Function",
    "kebab": "function",
    "sqlFunctionRef": "p_function",
    "RestAPI": "function",
    "GraphQL": "function",
    "custom": "function"
} as const,
            name: 'function',
            displayName: 'Function',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_function:function',
            uniqueFieldId: 'supabase_automation_matrix:recipeFunction:function',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeFunction',
            databaseTable: 'recipe_function',
            foreignKeyReference: {"table": "system_function", "column": "id", "entity": "systemFunction", "field": "id"},
            description: '"Function" field for recipeFunction. This is a required field. Your entry must be an uuid data type. This field is a reference to a systemFunction.',
        },
            role: {
            fieldNameFormats: {
    "frontend": "role",
    "backend": "role",
    "database": "role",
    "pretty": "Role",
    "component": "Role",
    "kebab": "role",
    "sqlFunctionRef": "p_role",
    "RestAPI": "role",
    "GraphQL": "role",
    "custom": "role"
} as const,
            name: 'role',
            displayName: 'Role',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_function:role',
            uniqueFieldId: 'supabase_automation_matrix:recipeFunction:role',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Comparison",
            "value": "comparison"
        },
        {
            "label": "Decision",
            "value": "decision"
        },
        {
            "label": "Other",
            "value": "other"
        },
        {
            "label": "Post Processing",
            "value": "post_processing"
        },
        {
            "label": "Pre Processing",
            "value": "pre-Processing"
        },
        {
            "label": "Rating",
            "value": "rating"
        },
        {
            "label": "Save Data",
            "value": "save_data"
        },
        {
            "label": "Validation",
            "value": "validation"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"comparison" | "decision" | "other" | "post_processing" | "pre-Processing" | "rating" | "save_data" | "validation" | undefined>,
            enumValues: ['comparison', 'decision', 'other', 'post_processing', 'pre-Processing', 'rating', 'save_data', 'validation'] as const,
            entityName: 'recipeFunction',
            databaseTable: 'recipe_function',
            foreignKeyReference: null,
            description: '"Role" field for recipeFunction. This is a required field. Your entry must be an string data type.',
        },
            params: {
            fieldNameFormats: {
    "frontend": "params",
    "backend": "params",
    "database": "params",
    "pretty": "Params",
    "component": "Params",
    "kebab": "params",
    "sqlFunctionRef": "p_params",
    "RestAPI": "params",
    "GraphQL": "params",
    "custom": "params"
} as const,
            name: 'params',
            displayName: 'Params',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_function:params',
            uniqueFieldId: 'supabase_automation_matrix:recipeFunction:params',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'recipeFunction',
            databaseTable: 'recipe_function',
            foreignKeyReference: null,
            description: '"Params" field for recipeFunction. This is an optional field. Your entry must be an object data type.',
        },
            systemFunctionReference: {
    fieldNameFormats: {
    "frontend": "systemFunctionReference",
    "backend": "system_function_reference",
    "database": "ref_system_function",
    "pretty": "System Function Reference",
    "component": "SystemFunctionReference",
    "kebab": "system-functionReference",
    "sqlFunctionRef": "p_ref_system_function",
    "RestAPI": "systemFunctionReference",
    "GraphQL": "systemFunctionReference",
    "custom": "systemFunctionReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:system_function:id',
    uniqueFieldId: 'supabase_automation_matrix:systemFunction:id',
    name: 'systemFunctionReference',
    displayName: 'System Function Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['systemFunction'][]>,
    entityName: 'systemFunction',
    databaseTable: 'system_function',
    relationshipMap: {system_function: 'id', recipe: 'id'},
},
            recipeReference: {
    fieldNameFormats: {
    "frontend": "recipeReference",
    "backend": "recipe_reference",
    "database": "ref_recipe",
    "pretty": "Recipe Reference",
    "component": "RecipeReference",
    "kebab": "recipeReference",
    "sqlFunctionRef": "p_ref_recipe",
    "RestAPI": "recipeReference",
    "GraphQL": "recipeReference",
    "custom": "recipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:recipe:id',
    name: 'recipeReference',
    displayName: 'Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
    entityName: 'recipe',
    databaseTable: 'recipe',
    relationshipMap: {system_function: 'id', recipe: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "recipeFunction",
    "backend": "recipe_function",
    "database": "recipe_function",
    "pretty": "Recipe Function",
    "component": "RecipeFunction",
    "kebab": "recipe-function",
    "sqlFunctionRef": "p_recipe_function",
    "RestAPI": "recipeFunction",
    "GraphQL": "recipeFunction",
    "custom": "recipeFunction"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'function', relatedTable: 'system_function', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'recipe', relatedTable: 'recipe', relatedColumn: 'id', junctionTable: null }
        ],
    },
recipeMessage: {
        schemaType: 'table' as const,
        entityName: 'recipeMessage',
        displayName: 'Recipe Message',
        uniqueTableId: 'supabase_automation_matrix:public:recipe_message',
        uniqueEntityId: 'supabase_automation_matrix:recipeMessage',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_message:id',
            uniqueFieldId: 'supabase_automation_matrix:recipeMessage:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeMessage',
            databaseTable: 'recipe_message',
            foreignKeyReference: null,
            description: '"Id" field for recipeMessage. This is a required field. Your entry must be an uuid data type.',
        },
            messageId: {
            fieldNameFormats: {
    "frontend": "messageId",
    "backend": "message_id",
    "database": "message_id",
    "pretty": "Message Id",
    "component": "MessageId",
    "kebab": "message-id",
    "sqlFunctionRef": "p_message_id",
    "RestAPI": "messageId",
    "GraphQL": "messageId",
    "custom": "messageId"
} as const,
            name: 'messageId',
            displayName: 'Message Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_message:message_id',
            uniqueFieldId: 'supabase_automation_matrix:recipeMessage:messageId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeMessage',
            databaseTable: 'recipe_message',
            foreignKeyReference: {"table": "message_template", "column": "id", "entity": "messageTemplate", "field": "id"},
            description: '"Message Id" field for recipeMessage. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a messageTemplate.',
        },
            recipeId: {
            fieldNameFormats: {
    "frontend": "recipeId",
    "backend": "recipe_id",
    "database": "recipe_id",
    "pretty": "Recipe Id",
    "component": "RecipeId",
    "kebab": "recipe-id",
    "sqlFunctionRef": "p_recipe_id",
    "RestAPI": "recipeId",
    "GraphQL": "recipeId",
    "custom": "recipeId"
} as const,
            name: 'recipeId',
            displayName: 'Recipe Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_message:recipe_id',
            uniqueFieldId: 'supabase_automation_matrix:recipeMessage:recipeId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeMessage',
            databaseTable: 'recipe_message',
            foreignKeyReference: {"table": "recipe", "column": "id", "entity": "recipe", "field": "id"},
            description: '"Recipe Id" field for recipeMessage. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a recipe.',
        },
            order: {
            fieldNameFormats: {
    "frontend": "order",
    "backend": "order",
    "database": "order",
    "pretty": "Order",
    "component": "Order",
    "kebab": "order",
    "sqlFunctionRef": "p_order",
    "RestAPI": "order",
    "GraphQL": "order",
    "custom": "order"
} as const,
            name: 'order',
            displayName: 'Order',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_message:order',
            uniqueFieldId: 'supabase_automation_matrix:recipeMessage:order',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "1" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'recipeMessage',
            databaseTable: 'recipe_message',
            foreignKeyReference: null,
            description: '"Order" field for recipeMessage. This is a required field. Your entry must be an number data type.',
        },
            messageTemplateReference: {
    fieldNameFormats: {
    "frontend": "messageTemplateReference",
    "backend": "message_template_reference",
    "database": "ref_message_template",
    "pretty": "Message Template Reference",
    "component": "MessageTemplateReference",
    "kebab": "message-templateReference",
    "sqlFunctionRef": "p_ref_message_template",
    "RestAPI": "messageTemplateReference",
    "GraphQL": "messageTemplateReference",
    "custom": "messageTemplateReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:message_template:id',
    uniqueFieldId: 'supabase_automation_matrix:messageTemplate:id',
    name: 'messageTemplateReference',
    displayName: 'Message Template Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['messageTemplate'][]>,
    entityName: 'messageTemplate',
    databaseTable: 'message_template',
    relationshipMap: {message_template: 'id', recipe: 'id'},
},
            recipeReference: {
    fieldNameFormats: {
    "frontend": "recipeReference",
    "backend": "recipe_reference",
    "database": "ref_recipe",
    "pretty": "Recipe Reference",
    "component": "RecipeReference",
    "kebab": "recipeReference",
    "sqlFunctionRef": "p_ref_recipe",
    "RestAPI": "recipeReference",
    "GraphQL": "recipeReference",
    "custom": "recipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:recipe:id',
    name: 'recipeReference',
    displayName: 'Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
    entityName: 'recipe',
    databaseTable: 'recipe',
    relationshipMap: {message_template: 'id', recipe: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "recipeMessage",
    "backend": "recipe_message",
    "database": "recipe_message",
    "pretty": "Recipe Message",
    "component": "RecipeMessage",
    "kebab": "recipe-message",
    "sqlFunctionRef": "p_recipe_message",
    "RestAPI": "recipeMessage",
    "GraphQL": "recipeMessage",
    "custom": "recipeMessage"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'message_id', relatedTable: 'message_template', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'recipe_id', relatedTable: 'recipe', relatedColumn: 'id', junctionTable: null }
        ],
    },
recipeMessageReorderQueue: {
        schemaType: 'table' as const,
        entityName: 'recipeMessageReorderQueue',
        displayName: 'Recipe Message Reorder Queue',
        uniqueTableId: 'supabase_automation_matrix:public:recipe_message_reorder_queue',
        uniqueEntityId: 'supabase_automation_matrix:recipeMessageReorderQueue',
        primaryKey: 'recipeId',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "recipeId"
    ],
    "database_fields": [
        "recipe_id"
    ],
    "where_template": {
        "recipe_id": null
    }
},
        displayFieldMetadata: { fieldName: 'recipeId', databaseFieldName: 'recipe_id' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            recipeId: {
            fieldNameFormats: {
    "frontend": "recipeId",
    "backend": "recipe_id",
    "database": "recipe_id",
    "pretty": "Recipe Id",
    "component": "RecipeId",
    "kebab": "recipe-id",
    "sqlFunctionRef": "p_recipe_id",
    "RestAPI": "recipeId",
    "GraphQL": "recipeId",
    "custom": "recipeId"
} as const,
            name: 'recipeId',
            displayName: 'Recipe Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_message_reorder_queue:recipe_id',
            uniqueFieldId: 'supabase_automation_matrix:recipeMessageReorderQueue:recipeId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeMessageReorderQueue',
            databaseTable: 'recipe_message_reorder_queue',
            foreignKeyReference: null,
            description: '"Recipe Id" field for recipeMessageReorderQueue. This is a required field. Your entry must be an uuid data type.',
        },
            lastModified: {
            fieldNameFormats: {
    "frontend": "lastModified",
    "backend": "last_modified",
    "database": "last_modified",
    "pretty": "Last Modified",
    "component": "LastModified",
    "kebab": "last-modified",
    "sqlFunctionRef": "p_last_modified",
    "RestAPI": "lastModified",
    "GraphQL": "lastModified",
    "custom": "lastModified"
} as const,
            name: 'lastModified',
            displayName: 'Last Modified',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_message_reorder_queue:last_modified',
            uniqueFieldId: 'supabase_automation_matrix:recipeMessageReorderQueue:lastModified',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'recipeMessageReorderQueue',
            databaseTable: 'recipe_message_reorder_queue',
            foreignKeyReference: null,
            description: '"Last Modified" field for recipeMessageReorderQueue. This is an optional field. Your entry must be an date data type.',
        },
        },
        entityNameFormats: {
    "frontend": "recipeMessageReorderQueue",
    "backend": "recipe_message_reorder_queue",
    "database": "recipe_message_reorder_queue",
    "pretty": "Recipe Message Reorder Queue",
    "component": "RecipeMessageReorderQueue",
    "kebab": "recipe-message-reorder-queue",
    "sqlFunctionRef": "p_recipe_message_reorder_queue",
    "RestAPI": "recipeMessageReorderQueue",
    "GraphQL": "recipeMessageReorderQueue",
    "custom": "recipeMessageReorderQueue"
},
        relationships: [
            
        ],
    },
recipeModel: {
        schemaType: 'table' as const,
        entityName: 'recipeModel',
        displayName: 'Recipe Model',
        uniqueTableId: 'supabase_automation_matrix:public:recipe_model',
        uniqueEntityId: 'supabase_automation_matrix:recipeModel',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_model:id',
            uniqueFieldId: 'supabase_automation_matrix:recipeModel:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeModel',
            databaseTable: 'recipe_model',
            foreignKeyReference: null,
            description: '"Id" field for recipeModel. This is a required field. Your entry must be an uuid data type.',
        },
            recipe: {
            fieldNameFormats: {
    "frontend": "recipe",
    "backend": "recipe",
    "database": "recipe",
    "pretty": "Recipe",
    "component": "Recipe",
    "kebab": "recipe",
    "sqlFunctionRef": "p_recipe",
    "RestAPI": "recipe",
    "GraphQL": "recipe",
    "custom": "recipe"
} as const,
            name: 'recipe',
            displayName: 'Recipe',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_model:recipe',
            uniqueFieldId: 'supabase_automation_matrix:recipeModel:recipe',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeModel',
            databaseTable: 'recipe_model',
            foreignKeyReference: {"table": "recipe", "column": "id", "entity": "recipe", "field": "id"},
            description: '"Recipe" field for recipeModel. This is a required field. Your entry must be an uuid data type. This field is a reference to a recipe.',
        },
            aiModel: {
            fieldNameFormats: {
    "frontend": "aiModel",
    "backend": "ai_model",
    "database": "ai_model",
    "pretty": "Ai Model",
    "component": "AiModel",
    "kebab": "ai-model",
    "sqlFunctionRef": "p_ai_model",
    "RestAPI": "aiModel",
    "GraphQL": "aiModel",
    "custom": "aiModel"
} as const,
            name: 'aiModel',
            displayName: 'Ai Model',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_model:ai_model',
            uniqueFieldId: 'supabase_automation_matrix:recipeModel:aiModel',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeModel',
            databaseTable: 'recipe_model',
            foreignKeyReference: {"table": "ai_model", "column": "id", "entity": "aiModel", "field": "id"},
            description: '"Ai Model" field for recipeModel. This is a required field. Your entry must be an uuid data type. This field is a reference to a aiModel.',
        },
            role: {
            fieldNameFormats: {
    "frontend": "role",
    "backend": "role",
    "database": "role",
    "pretty": "Role",
    "component": "Role",
    "kebab": "role",
    "sqlFunctionRef": "p_role",
    "RestAPI": "role",
    "GraphQL": "role",
    "custom": "role"
} as const,
            name: 'role',
            displayName: 'Role',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_model:role',
            uniqueFieldId: 'supabase_automation_matrix:recipeModel:role',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "primary_model" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Primary Model",
            "value": "primary_model"
        },
        {
            "label": "Trial Model",
            "value": "trial_model"
        },
        {
            "label": "Verified Model",
            "value": "verified_model"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"primary_model" | "trial_model" | "verified_model" | undefined>,
            enumValues: ['primary_model', 'trial_model', 'verified_model'] as const,
            entityName: 'recipeModel',
            databaseTable: 'recipe_model',
            foreignKeyReference: null,
            description: '"Role" field for recipeModel. This is a required field. Your entry must be an string data type.',
        },
            priority: {
            fieldNameFormats: {
    "frontend": "priority",
    "backend": "priority",
    "database": "priority",
    "pretty": "Priority",
    "component": "Priority",
    "kebab": "priority",
    "sqlFunctionRef": "p_priority",
    "RestAPI": "priority",
    "GraphQL": "priority",
    "custom": "priority"
} as const,
            name: 'priority',
            displayName: 'Priority',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_model:priority',
            uniqueFieldId: 'supabase_automation_matrix:recipeModel:priority',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "1" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'recipeModel',
            databaseTable: 'recipe_model',
            foreignKeyReference: null,
            description: '"Priority" field for recipeModel. This is an optional field. Your entry must be an number data type.',
        },
            aiModelReference: {
    fieldNameFormats: {
    "frontend": "aiModelReference",
    "backend": "ai_model_reference",
    "database": "ref_ai_model",
    "pretty": "Ai Model Reference",
    "component": "AiModelReference",
    "kebab": "ai-modelReference",
    "sqlFunctionRef": "p_ref_ai_model",
    "RestAPI": "aiModelReference",
    "GraphQL": "aiModelReference",
    "custom": "aiModelReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:ai_model:id',
    uniqueFieldId: 'supabase_automation_matrix:aiModel:id',
    name: 'aiModelReference',
    displayName: 'Ai Model Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['aiModel'][]>,
    entityName: 'aiModel',
    databaseTable: 'ai_model',
    relationshipMap: {ai_model: 'id', recipe: 'id'},
},
            recipeReference: {
    fieldNameFormats: {
    "frontend": "recipeReference",
    "backend": "recipe_reference",
    "database": "ref_recipe",
    "pretty": "Recipe Reference",
    "component": "RecipeReference",
    "kebab": "recipeReference",
    "sqlFunctionRef": "p_ref_recipe",
    "RestAPI": "recipeReference",
    "GraphQL": "recipeReference",
    "custom": "recipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:recipe:id',
    name: 'recipeReference',
    displayName: 'Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
    entityName: 'recipe',
    databaseTable: 'recipe',
    relationshipMap: {ai_model: 'id', recipe: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "recipeModel",
    "backend": "recipe_model",
    "database": "recipe_model",
    "pretty": "Recipe Model",
    "component": "RecipeModel",
    "kebab": "recipe-model",
    "sqlFunctionRef": "p_recipe_model",
    "RestAPI": "recipeModel",
    "GraphQL": "recipeModel",
    "custom": "recipeModel"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'ai_model', relatedTable: 'ai_model', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'recipe', relatedTable: 'recipe', relatedColumn: 'id', junctionTable: null }
        ],
    },
recipeProcessor: {
        schemaType: 'table' as const,
        entityName: 'recipeProcessor',
        displayName: 'Recipe Processor',
        uniqueTableId: 'supabase_automation_matrix:public:recipe_processor',
        uniqueEntityId: 'supabase_automation_matrix:recipeProcessor',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_processor:id',
            uniqueFieldId: 'supabase_automation_matrix:recipeProcessor:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeProcessor',
            databaseTable: 'recipe_processor',
            foreignKeyReference: null,
            description: '"Id" field for recipeProcessor. This is a required field. Your entry must be an uuid data type.',
        },
            recipe: {
            fieldNameFormats: {
    "frontend": "recipe",
    "backend": "recipe",
    "database": "recipe",
    "pretty": "Recipe",
    "component": "Recipe",
    "kebab": "recipe",
    "sqlFunctionRef": "p_recipe",
    "RestAPI": "recipe",
    "GraphQL": "recipe",
    "custom": "recipe"
} as const,
            name: 'recipe',
            displayName: 'Recipe',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_processor:recipe',
            uniqueFieldId: 'supabase_automation_matrix:recipeProcessor:recipe',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeProcessor',
            databaseTable: 'recipe_processor',
            foreignKeyReference: {"table": "recipe", "column": "id", "entity": "recipe", "field": "id"},
            description: '"Recipe" field for recipeProcessor. This is a required field. Your entry must be an uuid data type. This field is a reference to a recipe.',
        },
            processor: {
            fieldNameFormats: {
    "frontend": "processor",
    "backend": "processor",
    "database": "processor",
    "pretty": "Processor",
    "component": "Processor",
    "kebab": "processor",
    "sqlFunctionRef": "p_processor",
    "RestAPI": "processor",
    "GraphQL": "processor",
    "custom": "processor"
} as const,
            name: 'processor',
            displayName: 'Processor',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_processor:processor',
            uniqueFieldId: 'supabase_automation_matrix:recipeProcessor:processor',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeProcessor',
            databaseTable: 'recipe_processor',
            foreignKeyReference: {"table": "processor", "column": "id", "entity": "processor", "field": "id"},
            description: '"Processor" field for recipeProcessor. This is a required field. Your entry must be an uuid data type. This field is a reference to a processor.',
        },
            params: {
            fieldNameFormats: {
    "frontend": "params",
    "backend": "params",
    "database": "params",
    "pretty": "Params",
    "component": "Params",
    "kebab": "params",
    "sqlFunctionRef": "p_params",
    "RestAPI": "params",
    "GraphQL": "params",
    "custom": "params"
} as const,
            name: 'params',
            displayName: 'Params',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_processor:params',
            uniqueFieldId: 'supabase_automation_matrix:recipeProcessor:params',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'recipeProcessor',
            databaseTable: 'recipe_processor',
            foreignKeyReference: null,
            description: '"Params" field for recipeProcessor. This is an optional field. Your entry must be an object data type.',
        },
            processorReference: {
    fieldNameFormats: {
    "frontend": "processorReference",
    "backend": "processor_reference",
    "database": "ref_processor",
    "pretty": "Processor Reference",
    "component": "ProcessorReference",
    "kebab": "processorReference",
    "sqlFunctionRef": "p_ref_processor",
    "RestAPI": "processorReference",
    "GraphQL": "processorReference",
    "custom": "processorReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:processor:id',
    uniqueFieldId: 'supabase_automation_matrix:processor:id',
    name: 'processorReference',
    displayName: 'Processor Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['processor'][]>,
    entityName: 'processor',
    databaseTable: 'processor',
    relationshipMap: {processor: 'id', recipe: 'id'},
},
            recipeReference: {
    fieldNameFormats: {
    "frontend": "recipeReference",
    "backend": "recipe_reference",
    "database": "ref_recipe",
    "pretty": "Recipe Reference",
    "component": "RecipeReference",
    "kebab": "recipeReference",
    "sqlFunctionRef": "p_ref_recipe",
    "RestAPI": "recipeReference",
    "GraphQL": "recipeReference",
    "custom": "recipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:recipe:id',
    name: 'recipeReference',
    displayName: 'Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
    entityName: 'recipe',
    databaseTable: 'recipe',
    relationshipMap: {processor: 'id', recipe: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "recipeProcessor",
    "backend": "recipe_processor",
    "database": "recipe_processor",
    "pretty": "Recipe Processor",
    "component": "RecipeProcessor",
    "kebab": "recipe-processor",
    "sqlFunctionRef": "p_recipe_processor",
    "RestAPI": "recipeProcessor",
    "GraphQL": "recipeProcessor",
    "custom": "recipeProcessor"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'processor', relatedTable: 'processor', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'recipe', relatedTable: 'recipe', relatedColumn: 'id', junctionTable: null }
        ],
    },
recipeTool: {
        schemaType: 'table' as const,
        entityName: 'recipeTool',
        displayName: 'Recipe Tool',
        uniqueTableId: 'supabase_automation_matrix:public:recipe_tool',
        uniqueEntityId: 'supabase_automation_matrix:recipeTool',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_tool:id',
            uniqueFieldId: 'supabase_automation_matrix:recipeTool:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeTool',
            databaseTable: 'recipe_tool',
            foreignKeyReference: null,
            description: '"Id" field for recipeTool. This is a required field. Your entry must be an uuid data type.',
        },
            recipe: {
            fieldNameFormats: {
    "frontend": "recipe",
    "backend": "recipe",
    "database": "recipe",
    "pretty": "Recipe",
    "component": "Recipe",
    "kebab": "recipe",
    "sqlFunctionRef": "p_recipe",
    "RestAPI": "recipe",
    "GraphQL": "recipe",
    "custom": "recipe"
} as const,
            name: 'recipe',
            displayName: 'Recipe',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_tool:recipe',
            uniqueFieldId: 'supabase_automation_matrix:recipeTool:recipe',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeTool',
            databaseTable: 'recipe_tool',
            foreignKeyReference: {"table": "recipe", "column": "id", "entity": "recipe", "field": "id"},
            description: '"Recipe" field for recipeTool. This is a required field. Your entry must be an uuid data type. This field is a reference to a recipe.',
        },
            tool: {
            fieldNameFormats: {
    "frontend": "tool",
    "backend": "tool",
    "database": "tool",
    "pretty": "Tool",
    "component": "Tool",
    "kebab": "tool",
    "sqlFunctionRef": "p_tool",
    "RestAPI": "tool",
    "GraphQL": "tool",
    "custom": "tool"
} as const,
            name: 'tool',
            displayName: 'Tool',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_tool:tool',
            uniqueFieldId: 'supabase_automation_matrix:recipeTool:tool',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'recipeTool',
            databaseTable: 'recipe_tool',
            foreignKeyReference: {"table": "tool", "column": "id", "entity": "tool", "field": "id"},
            description: '"Tool" field for recipeTool. This is a required field. Your entry must be an uuid data type. This field is a reference to a tool.',
        },
            params: {
            fieldNameFormats: {
    "frontend": "params",
    "backend": "params",
    "database": "params",
    "pretty": "Params",
    "component": "Params",
    "kebab": "params",
    "sqlFunctionRef": "p_params",
    "RestAPI": "params",
    "GraphQL": "params",
    "custom": "params"
} as const,
            name: 'params',
            displayName: 'Params',

            uniqueColumnId: 'supabase_automation_matrix:public:recipe_tool:params',
            uniqueFieldId: 'supabase_automation_matrix:recipeTool:params',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'recipeTool',
            databaseTable: 'recipe_tool',
            foreignKeyReference: null,
            description: '"Params" field for recipeTool. This is an optional field. Your entry must be an object data type.',
        },
            recipeReference: {
    fieldNameFormats: {
    "frontend": "recipeReference",
    "backend": "recipe_reference",
    "database": "ref_recipe",
    "pretty": "Recipe Reference",
    "component": "RecipeReference",
    "kebab": "recipeReference",
    "sqlFunctionRef": "p_ref_recipe",
    "RestAPI": "recipeReference",
    "GraphQL": "recipeReference",
    "custom": "recipeReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:recipe:id',
    uniqueFieldId: 'supabase_automation_matrix:recipe:id',
    name: 'recipeReference',
    displayName: 'Recipe Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
    entityName: 'recipe',
    databaseTable: 'recipe',
    relationshipMap: {recipe: 'id', tool: 'id'},
},
            toolReference: {
    fieldNameFormats: {
    "frontend": "toolReference",
    "backend": "tool_reference",
    "database": "ref_tool",
    "pretty": "Tool Reference",
    "component": "ToolReference",
    "kebab": "toolReference",
    "sqlFunctionRef": "p_ref_tool",
    "RestAPI": "toolReference",
    "GraphQL": "toolReference",
    "custom": "toolReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:tool:id',
    uniqueFieldId: 'supabase_automation_matrix:tool:id',
    name: 'toolReference',
    displayName: 'Tool Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['tool'][]>,
    entityName: 'tool',
    databaseTable: 'tool',
    relationshipMap: {recipe: 'id', tool: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "recipeTool",
    "backend": "recipe_tool",
    "database": "recipe_tool",
    "pretty": "Recipe Tool",
    "component": "RecipeTool",
    "kebab": "recipe-tool",
    "sqlFunctionRef": "p_recipe_tool",
    "RestAPI": "recipeTool",
    "GraphQL": "recipeTool",
    "custom": "recipeTool"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'recipe', relatedTable: 'recipe', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'tool', relatedTable: 'tool', relatedColumn: 'id', junctionTable: null }
        ],
    },
registeredFunction: {
        schemaType: 'table' as const,
        entityName: 'registeredFunction',
        displayName: 'Registered Function',
        uniqueTableId: 'supabase_automation_matrix:public:registered_function',
        uniqueEntityId: 'supabase_automation_matrix:registeredFunction',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:id',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: null,
            description: '"Id" field for registeredFunction. This is a required field. Your entry must be an uuid data type.',
        },
            funcName: {
            fieldNameFormats: {
    "frontend": "funcName",
    "backend": "func_name",
    "database": "func_name",
    "pretty": "Func Name",
    "component": "FuncName",
    "kebab": "func-name",
    "sqlFunctionRef": "p_func_name",
    "RestAPI": "funcName",
    "GraphQL": "funcName",
    "custom": "funcName"
} as const,
            name: 'funcName',
            displayName: 'Func Name',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:func_name',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:funcName',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: null,
            description: '"Func Name" field for registeredFunction. This is a required field. Your entry must be an string data type.',
        },
            modulePath: {
            fieldNameFormats: {
    "frontend": "modulePath",
    "backend": "module_path",
    "database": "module_path",
    "pretty": "Module Path",
    "component": "ModulePath",
    "kebab": "module-path",
    "sqlFunctionRef": "p_module_path",
    "RestAPI": "modulePath",
    "GraphQL": "modulePath",
    "custom": "modulePath"
} as const,
            name: 'modulePath',
            displayName: 'Module Path',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:module_path',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:modulePath',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: null,
            description: '"Module Path" field for registeredFunction. This is a required field. Your entry must be an string data type.',
        },
            className: {
            fieldNameFormats: {
    "frontend": "className",
    "backend": "class_name",
    "database": "class_name",
    "pretty": "Class Name",
    "component": "ClassName",
    "kebab": "class-name",
    "sqlFunctionRef": "p_class_name",
    "RestAPI": "className",
    "GraphQL": "className",
    "custom": "className"
} as const,
            name: 'className',
            displayName: 'Class Name',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:class_name',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:className',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: null,
            description: '"Class Name" field for registeredFunction. This is an optional field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:description',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: null,
            description: '"Description" field for registeredFunction. This is an optional field. Your entry must be an string data type.',
        },
            returnBroker: {
            fieldNameFormats: {
    "frontend": "returnBroker",
    "backend": "return_broker",
    "database": "return_broker",
    "pretty": "Return Broker",
    "component": "ReturnBroker",
    "kebab": "return-broker",
    "sqlFunctionRef": "p_return_broker",
    "RestAPI": "returnBroker",
    "GraphQL": "returnBroker",
    "custom": "returnBroker"
} as const,
            name: 'returnBroker',
            displayName: 'Return Broker',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:return_broker',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:returnBroker',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "7ed8807a-b5cb-4475-b75c-686383f31125" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: {"table": "data_broker", "column": "id", "entity": "dataBroker", "field": "id"},
            description: '"Return Broker" field for registeredFunction. This is a required field. Your entry must be an uuid data type. This field is a reference to a dataBroker.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:name',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: null,
            description: '"Name" field for registeredFunction. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            tags: {
            fieldNameFormats: {
    "frontend": "tags",
    "backend": "tags",
    "database": "tags",
    "pretty": "Tags",
    "component": "Tags",
    "kebab": "tags",
    "sqlFunctionRef": "p_tags",
    "RestAPI": "tags",
    "GraphQL": "tags",
    "custom": "tags"
} as const,
            name: 'tags',
            displayName: 'Tags',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:tags',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:tags',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: null,
            description: '"Tags" field for registeredFunction. This is an optional field. Your entry must be an object data type.',
        },
            category: {
            fieldNameFormats: {
    "frontend": "category",
    "backend": "category",
    "database": "category",
    "pretty": "Category",
    "component": "Category",
    "kebab": "category",
    "sqlFunctionRef": "p_category",
    "RestAPI": "category",
    "GraphQL": "category",
    "custom": "category"
} as const,
            name: 'category',
            displayName: 'Category',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:category',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:category',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "Other" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "A P I",
            "value": "API"
        },
        {
            "label": "Agents",
            "value": "Agents"
        },
        {
            "label": "Commands",
            "value": "Commands"
        },
        {
            "label": "Database",
            "value": "Database"
        },
        {
            "label": "Documents",
            "value": "Documents"
        },
        {
            "label": "Executors",
            "value": "Executors"
        },
        {
            "label": "Extractors",
            "value": "Extractors"
        },
        {
            "label": "Files",
            "value": "Files"
        },
        {
            "label": "Integrations",
            "value": "Integrations"
        },
        {
            "label": "Media",
            "value": "Media"
        },
        {
            "label": "Other",
            "value": "Other"
        },
        {
            "label": "Processors",
            "value": "Processors"
        },
        {
            "label": "Prompts",
            "value": "Prompts"
        },
        {
            "label": "Recipes",
            "value": "Recipes"
        },
        {
            "label": "Web",
            "value": "Web"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"API" | "Agents" | "Commands" | "Database" | "Documents" | "Executors" | "Extractors" | "Files" | "Integrations" | "Media" | "Other" | "Processors" | "Prompts" | "Recipes" | "Web" | undefined>,
            enumValues: ['API', 'Agents', 'Commands', 'Database', 'Documents', 'Executors', 'Extractors', 'Files', 'Integrations', 'Media', 'Other', 'Processors', 'Prompts', 'Recipes', 'Web'] as const,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: null,
            description: '"Category" field for registeredFunction. This is an optional field. Your entry must be an string data type.',
        },
            icon: {
            fieldNameFormats: {
    "frontend": "icon",
    "backend": "icon",
    "database": "icon",
    "pretty": "Icon",
    "component": "Icon",
    "kebab": "icon",
    "sqlFunctionRef": "p_icon",
    "RestAPI": "icon",
    "GraphQL": "icon",
    "custom": "icon"
} as const,
            name: 'icon',
            displayName: 'Icon',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:icon',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:icon',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "Zap" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Activity",
            "value": "Activity"
        },
        {
            "label": "Alert Circle",
            "value": "AlertCircle"
        },
        {
            "label": "Alert Triangle",
            "value": "AlertTriangle"
        },
        {
            "label": "Align Center",
            "value": "AlignCenter"
        },
        {
            "label": "Align Left",
            "value": "AlignLeft"
        },
        {
            "label": "Align Right",
            "value": "AlignRight"
        },
        {
            "label": "Archive",
            "value": "Archive"
        },
        {
            "label": "Arrow Down",
            "value": "ArrowDown"
        },
        {
            "label": "Arrow Left",
            "value": "ArrowLeft"
        },
        {
            "label": "Arrow Left Right",
            "value": "ArrowLeftRight"
        },
        {
            "label": "Arrow Right",
            "value": "ArrowRight"
        },
        {
            "label": "Arrow Right Left",
            "value": "ArrowRightLeft"
        },
        {
            "label": "Arrow Up",
            "value": "ArrowUp"
        },
        {
            "label": "Asterisk",
            "value": "Asterisk"
        },
        {
            "label": "At Sign",
            "value": "AtSign"
        },
        {
            "label": "Award",
            "value": "Award"
        },
        {
            "label": "Banknote",
            "value": "Banknote"
        },
        {
            "label": "Bar Chart",
            "value": "BarChart"
        },
        {
            "label": "Battery",
            "value": "Battery"
        },
        {
            "label": "Battery Low",
            "value": "BatteryLow"
        },
        {
            "label": "Bell",
            "value": "Bell"
        },
        {
            "label": "Bell Off",
            "value": "BellOff"
        },
        {
            "label": "Bike",
            "value": "Bike"
        },
        {
            "label": "Bitcoin",
            "value": "Bitcoin"
        },
        {
            "label": "Bold",
            "value": "Bold"
        },
        {
            "label": "Bookmark",
            "value": "Bookmark"
        },
        {
            "label": "Bookmark Plus",
            "value": "BookmarkPlus"
        },
        {
            "label": "Brain",
            "value": "Brain"
        },
        {
            "label": "Brush",
            "value": "Brush"
        },
        {
            "label": "Building",
            "value": "Building"
        },
        {
            "label": "Building2",
            "value": "Building2"
        },
        {
            "label": "Calculator",
            "value": "Calculator"
        },
        {
            "label": "Calendar",
            "value": "Calendar"
        },
        {
            "label": "Calendar Days",
            "value": "CalendarDays"
        },
        {
            "label": "Camera",
            "value": "Camera"
        },
        {
            "label": "Car",
            "value": "Car"
        },
        {
            "label": "Check",
            "value": "Check"
        },
        {
            "label": "Check Circle",
            "value": "CheckCircle"
        },
        {
            "label": "Chevron Down",
            "value": "ChevronDown"
        },
        {
            "label": "Chevron Left",
            "value": "ChevronLeft"
        },
        {
            "label": "Chevron Right",
            "value": "ChevronRight"
        },
        {
            "label": "Chevron Up",
            "value": "ChevronUp"
        },
        {
            "label": "Circle",
            "value": "Circle"
        },
        {
            "label": "Clock",
            "value": "Clock"
        },
        {
            "label": "Cloud",
            "value": "Cloud"
        },
        {
            "label": "Cloud Rain",
            "value": "CloudRain"
        },
        {
            "label": "Cloud Snow",
            "value": "CloudSnow"
        },
        {
            "label": "Code",
            "value": "Code"
        },
        {
            "label": "Compass",
            "value": "Compass"
        },
        {
            "label": "Copy",
            "value": "Copy"
        },
        {
            "label": "Cpu",
            "value": "Cpu"
        },
        {
            "label": "Credit Card",
            "value": "CreditCard"
        },
        {
            "label": "Database",
            "value": "Database"
        },
        {
            "label": "Diamond",
            "value": "Diamond"
        },
        {
            "label": "Divide",
            "value": "Divide"
        },
        {
            "label": "Dollar Sign",
            "value": "DollarSign"
        },
        {
            "label": "Dot",
            "value": "Dot"
        },
        {
            "label": "Download",
            "value": "Download"
        },
        {
            "label": "Edit",
            "value": "Edit"
        },
        {
            "label": "Equal",
            "value": "Equal"
        },
        {
            "label": "Eraser",
            "value": "Eraser"
        },
        {
            "label": "Euro",
            "value": "Euro"
        },
        {
            "label": "External Link",
            "value": "ExternalLink"
        },
        {
            "label": "Eye",
            "value": "Eye"
        },
        {
            "label": "Fa Brave",
            "value": "FaBrave"
        },
        {
            "label": "Factory",
            "value": "Factory"
        },
        {
            "label": "Fc Alphabetical Sorting Az",
            "value": "FcAlphabeticalSortingAz"
        },
        {
            "label": "Fc Alphabetical Sorting Za",
            "value": "FcAlphabeticalSortingZa"
        },
        {
            "label": "Fc Area Chart",
            "value": "FcAreaChart"
        },
        {
            "label": "Fc Assistant",
            "value": "FcAssistant"
        },
        {
            "label": "Fc Biotech",
            "value": "FcBiotech"
        },
        {
            "label": "Fc Broken Link",
            "value": "FcBrokenLink"
        },
        {
            "label": "Fc Business",
            "value": "FcBusiness"
        },
        {
            "label": "Fc Business Contact",
            "value": "FcBusinessContact"
        },
        {
            "label": "Fc Calendar",
            "value": "FcCalendar"
        },
        {
            "label": "Fc Command Line",
            "value": "FcCommandLine"
        },
        {
            "label": "Fc Conference Call",
            "value": "FcConferenceCall"
        },
        {
            "label": "Fc Data Protection",
            "value": "FcDataProtection"
        },
        {
            "label": "Fc Document",
            "value": "FcDocument"
        },
        {
            "label": "Fc Download",
            "value": "FcDownload"
        },
        {
            "label": "Fc Electronics",
            "value": "FcElectronics"
        },
        {
            "label": "Fc Engineering",
            "value": "FcEngineering"
        },
        {
            "label": "Fc Feedback",
            "value": "FcFeedback"
        },
        {
            "label": "Fc Film",
            "value": "FcFilm"
        },
        {
            "label": "Fc Google",
            "value": "FcGoogle"
        },
        {
            "label": "Fc Graduation Cap",
            "value": "FcGraduationCap"
        },
        {
            "label": "Fc Library",
            "value": "FcLibrary"
        },
        {
            "label": "Fc Manager",
            "value": "FcManager"
        },
        {
            "label": "Fc Multiple Inputs",
            "value": "FcMultipleInputs"
        },
        {
            "label": "Fc Music",
            "value": "FcMusic"
        },
        {
            "label": "Fc Parallel Tasks",
            "value": "FcParallelTasks"
        },
        {
            "label": "Fc Sales Performance",
            "value": "FcSalesPerformance"
        },
        {
            "label": "Fc Shipped",
            "value": "FcShipped"
        },
        {
            "label": "Fc Signature",
            "value": "FcSignature"
        },
        {
            "label": "Fc Sms",
            "value": "FcSms"
        },
        {
            "label": "Fc Todo List",
            "value": "FcTodoList"
        },
        {
            "label": "Fc Wikipedia",
            "value": "FcWikipedia"
        },
        {
            "label": "File",
            "value": "File"
        },
        {
            "label": "File Text",
            "value": "FileText"
        },
        {
            "label": "Filter",
            "value": "Filter"
        },
        {
            "label": "Folder",
            "value": "Folder"
        },
        {
            "label": "Folder Open",
            "value": "FolderOpen"
        },
        {
            "label": "Fuel",
            "value": "Fuel"
        },
        {
            "label": "Gift",
            "value": "Gift"
        },
        {
            "label": "Git Branch",
            "value": "GitBranch"
        },
        {
            "label": "Globe",
            "value": "Globe"
        },
        {
            "label": "Hash",
            "value": "Hash"
        },
        {
            "label": "Headphones",
            "value": "Headphones"
        },
        {
            "label": "Heart",
            "value": "Heart"
        },
        {
            "label": "Help Circle",
            "value": "HelpCircle"
        },
        {
            "label": "Hexagon",
            "value": "Hexagon"
        },
        {
            "label": "Highlighter",
            "value": "Highlighter"
        },
        {
            "label": "Home",
            "value": "Home"
        },
        {
            "label": "Image",
            "value": "Image"
        },
        {
            "label": "Inbox",
            "value": "Inbox"
        },
        {
            "label": "Indent",
            "value": "Indent"
        },
        {
            "label": "Info",
            "value": "Info"
        },
        {
            "label": "Italic",
            "value": "Italic"
        },
        {
            "label": "Key",
            "value": "Key"
        },
        {
            "label": "Laptop",
            "value": "Laptop"
        },
        {
            "label": "Layers",
            "value": "Layers"
        },
        {
            "label": "Line Chart",
            "value": "LineChart"
        },
        {
            "label": "Link",
            "value": "Link"
        },
        {
            "label": "List",
            "value": "List"
        },
        {
            "label": "List Ordered",
            "value": "ListOrdered"
        },
        {
            "label": "Lock",
            "value": "Lock"
        },
        {
            "label": "Log In",
            "value": "LogIn"
        },
        {
            "label": "Log Out",
            "value": "LogOut"
        },
        {
            "label": "Mail",
            "value": "Mail"
        },
        {
            "label": "Map",
            "value": "Map"
        },
        {
            "label": "Map Pin",
            "value": "MapPin"
        },
        {
            "label": "Menu",
            "value": "Menu"
        },
        {
            "label": "Message Circle",
            "value": "MessageCircle"
        },
        {
            "label": "Message Square",
            "value": "MessageSquare"
        },
        {
            "label": "Mic",
            "value": "Mic"
        },
        {
            "label": "Mic Off",
            "value": "MicOff"
        },
        {
            "label": "Minus",
            "value": "Minus"
        },
        {
            "label": "Monitor",
            "value": "Monitor"
        },
        {
            "label": "Monitor Speaker",
            "value": "MonitorSpeaker"
        },
        {
            "label": "Moon",
            "value": "Moon"
        },
        {
            "label": "More Horizontal",
            "value": "MoreHorizontal"
        },
        {
            "label": "More Vertical",
            "value": "MoreVertical"
        },
        {
            "label": "Move",
            "value": "Move"
        },
        {
            "label": "Music",
            "value": "Music"
        },
        {
            "label": "Music2",
            "value": "Music2"
        },
        {
            "label": "Navigation",
            "value": "Navigation"
        },
        {
            "label": "Octagon",
            "value": "Octagon"
        },
        {
            "label": "Outdent",
            "value": "Outdent"
        },
        {
            "label": "Package",
            "value": "Package"
        },
        {
            "label": "Paintbrush",
            "value": "Paintbrush"
        },
        {
            "label": "Palette",
            "value": "Palette"
        },
        {
            "label": "Pause Circle",
            "value": "PauseCircle"
        },
        {
            "label": "Pen",
            "value": "Pen"
        },
        {
            "label": "Pen Tool",
            "value": "PenTool"
        },
        {
            "label": "Pencil",
            "value": "Pencil"
        },
        {
            "label": "Percent",
            "value": "Percent"
        },
        {
            "label": "Phone",
            "value": "Phone"
        },
        {
            "label": "Phone Call",
            "value": "PhoneCall"
        },
        {
            "label": "Pie Chart",
            "value": "PieChart"
        },
        {
            "label": "Plane",
            "value": "Plane"
        },
        {
            "label": "Play",
            "value": "Play"
        },
        {
            "label": "Play Circle",
            "value": "PlayCircle"
        },
        {
            "label": "Plus",
            "value": "Plus"
        },
        {
            "label": "Pound Sterling",
            "value": "PoundSterling"
        },
        {
            "label": "Power",
            "value": "Power"
        },
        {
            "label": "Power Off",
            "value": "PowerOff"
        },
        {
            "label": "Quote",
            "value": "Quote"
        },
        {
            "label": "Receipt",
            "value": "Receipt"
        },
        {
            "label": "Refresh Cw",
            "value": "RefreshCw"
        },
        {
            "label": "Repeat",
            "value": "Repeat"
        },
        {
            "label": "Repeat1",
            "value": "Repeat1"
        },
        {
            "label": "Rotate Ccw",
            "value": "RotateCcw"
        },
        {
            "label": "Ruler",
            "value": "Ruler"
        },
        {
            "label": "Save",
            "value": "Save"
        },
        {
            "label": "Scissors",
            "value": "Scissors"
        },
        {
            "label": "Search",
            "value": "Search"
        },
        {
            "label": "Send",
            "value": "Send"
        },
        {
            "label": "Settings",
            "value": "Settings"
        },
        {
            "label": "Share",
            "value": "Share"
        },
        {
            "label": "Share2",
            "value": "Share2"
        },
        {
            "label": "Shield",
            "value": "Shield"
        },
        {
            "label": "Shield Check",
            "value": "ShieldCheck"
        },
        {
            "label": "Ship",
            "value": "Ship"
        },
        {
            "label": "Shopping Bag",
            "value": "ShoppingBag"
        },
        {
            "label": "Shopping Cart",
            "value": "ShoppingCart"
        },
        {
            "label": "Shuffle",
            "value": "Shuffle"
        },
        {
            "label": "Skip Back",
            "value": "SkipBack"
        },
        {
            "label": "Skip Forward",
            "value": "SkipForward"
        },
        {
            "label": "Smartphone",
            "value": "Smartphone"
        },
        {
            "label": "Square",
            "value": "Square"
        },
        {
            "label": "Star",
            "value": "Star"
        },
        {
            "label": "Stop Circle",
            "value": "StopCircle"
        },
        {
            "label": "Store",
            "value": "Store"
        },
        {
            "label": "Sun",
            "value": "Sun"
        },
        {
            "label": "Tablet",
            "value": "Tablet"
        },
        {
            "label": "Tag",
            "value": "Tag"
        },
        {
            "label": "Tags",
            "value": "Tags"
        },
        {
            "label": "Target",
            "value": "Target"
        },
        {
            "label": "Thermometer",
            "value": "Thermometer"
        },
        {
            "label": "Timer",
            "value": "Timer"
        },
        {
            "label": "Train",
            "value": "Train"
        },
        {
            "label": "Trash",
            "value": "Trash"
        },
        {
            "label": "Trending Down",
            "value": "TrendingDown"
        },
        {
            "label": "Trending Up",
            "value": "TrendingUp"
        },
        {
            "label": "Triangle",
            "value": "Triangle"
        },
        {
            "label": "Trophy",
            "value": "Trophy"
        },
        {
            "label": "Truck",
            "value": "Truck"
        },
        {
            "label": "Type",
            "value": "Type"
        },
        {
            "label": "Umbrella",
            "value": "Umbrella"
        },
        {
            "label": "Underline",
            "value": "Underline"
        },
        {
            "label": "Unlink",
            "value": "Unlink"
        },
        {
            "label": "Unlock",
            "value": "Unlock"
        },
        {
            "label": "Upload",
            "value": "Upload"
        },
        {
            "label": "User",
            "value": "User"
        },
        {
            "label": "User2",
            "value": "User2"
        },
        {
            "label": "User Minus",
            "value": "UserMinus"
        },
        {
            "label": "User Plus",
            "value": "UserPlus"
        },
        {
            "label": "Users",
            "value": "Users"
        },
        {
            "label": "Video",
            "value": "Video"
        },
        {
            "label": "Volume2",
            "value": "Volume2"
        },
        {
            "label": "Volume X",
            "value": "VolumeX"
        },
        {
            "label": "Wand2",
            "value": "Wand2"
        },
        {
            "label": "Webhook",
            "value": "Webhook"
        },
        {
            "label": "Wifi",
            "value": "Wifi"
        },
        {
            "label": "Wifi Off",
            "value": "WifiOff"
        },
        {
            "label": "Wrench",
            "value": "Wrench"
        },
        {
            "label": "X",
            "value": "X"
        },
        {
            "label": "X Circle",
            "value": "XCircle"
        },
        {
            "label": "Zap",
            "value": "Zap"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"Activity" | "AlertCircle" | "AlertTriangle" | "AlignCenter" | "AlignLeft" | "AlignRight" | "Archive" | "ArrowDown" | "ArrowLeft" | "ArrowLeftRight" | "ArrowRight" | "ArrowRightLeft" | "ArrowUp" | "Asterisk" | "AtSign" | "Award" | "Banknote" | "BarChart" | "Battery" | "BatteryLow" | "Bell" | "BellOff" | "Bike" | "Bitcoin" | "Bold" | "Bookmark" | "BookmarkPlus" | "Brain" | "Brush" | "Building" | "Building2" | "Calculator" | "Calendar" | "CalendarDays" | "Camera" | "Car" | "Check" | "CheckCircle" | "ChevronDown" | "ChevronLeft" | "ChevronRight" | "ChevronUp" | "Circle" | "Clock" | "Cloud" | "CloudRain" | "CloudSnow" | "Code" | "Compass" | "Copy" | "Cpu" | "CreditCard" | "Database" | "Diamond" | "Divide" | "DollarSign" | "Dot" | "Download" | "Edit" | "Equal" | "Eraser" | "Euro" | "ExternalLink" | "Eye" | "FaBrave" | "Factory" | "FcAlphabeticalSortingAz" | "FcAlphabeticalSortingZa" | "FcAreaChart" | "FcAssistant" | "FcBiotech" | "FcBrokenLink" | "FcBusiness" | "FcBusinessContact" | "FcCalendar" | "FcCommandLine" | "FcConferenceCall" | "FcDataProtection" | "FcDocument" | "FcDownload" | "FcElectronics" | "FcEngineering" | "FcFeedback" | "FcFilm" | "FcGoogle" | "FcGraduationCap" | "FcLibrary" | "FcManager" | "FcMultipleInputs" | "FcMusic" | "FcParallelTasks" | "FcSalesPerformance" | "FcShipped" | "FcSignature" | "FcSms" | "FcTodoList" | "FcWikipedia" | "File" | "FileText" | "Filter" | "Folder" | "FolderOpen" | "Fuel" | "Gift" | "GitBranch" | "Globe" | "Hash" | "Headphones" | "Heart" | "HelpCircle" | "Hexagon" | "Highlighter" | "Home" | "Image" | "Inbox" | "Indent" | "Info" | "Italic" | "Key" | "Laptop" | "Layers" | "LineChart" | "Link" | "List" | "ListOrdered" | "Lock" | "LogIn" | "LogOut" | "Mail" | "Map" | "MapPin" | "Menu" | "MessageCircle" | "MessageSquare" | "Mic" | "MicOff" | "Minus" | "Monitor" | "MonitorSpeaker" | "Moon" | "MoreHorizontal" | "MoreVertical" | "Move" | "Music" | "Music2" | "Navigation" | "Octagon" | "Outdent" | "Package" | "Paintbrush" | "Palette" | "PauseCircle" | "Pen" | "PenTool" | "Pencil" | "Percent" | "Phone" | "PhoneCall" | "PieChart" | "Plane" | "Play" | "PlayCircle" | "Plus" | "PoundSterling" | "Power" | "PowerOff" | "Quote" | "Receipt" | "RefreshCw" | "Repeat" | "Repeat1" | "RotateCcw" | "Ruler" | "Save" | "Scissors" | "Search" | "Send" | "Settings" | "Share" | "Share2" | "Shield" | "ShieldCheck" | "Ship" | "ShoppingBag" | "ShoppingCart" | "Shuffle" | "SkipBack" | "SkipForward" | "Smartphone" | "Square" | "Star" | "StopCircle" | "Store" | "Sun" | "Tablet" | "Tag" | "Tags" | "Target" | "Thermometer" | "Timer" | "Train" | "Trash" | "TrendingDown" | "TrendingUp" | "Triangle" | "Trophy" | "Truck" | "Type" | "Umbrella" | "Underline" | "Unlink" | "Unlock" | "Upload" | "User" | "User2" | "UserMinus" | "UserPlus" | "Users" | "Video" | "Volume2" | "VolumeX" | "Wand2" | "Webhook" | "Wifi" | "WifiOff" | "Wrench" | "X" | "XCircle" | "Zap" | undefined>,
            enumValues: ['Activity', 'AlertCircle', 'AlertTriangle', 'AlignCenter', 'AlignLeft', 'AlignRight', 'Archive', 'ArrowDown', 'ArrowLeft', 'ArrowLeftRight', 'ArrowRight', 'ArrowRightLeft', 'ArrowUp', 'Asterisk', 'AtSign', 'Award', 'Banknote', 'BarChart', 'Battery', 'BatteryLow', 'Bell', 'BellOff', 'Bike', 'Bitcoin', 'Bold', 'Bookmark', 'BookmarkPlus', 'Brain', 'Brush', 'Building', 'Building2', 'Calculator', 'Calendar', 'CalendarDays', 'Camera', 'Car', 'Check', 'CheckCircle', 'ChevronDown', 'ChevronLeft', 'ChevronRight', 'ChevronUp', 'Circle', 'Clock', 'Cloud', 'CloudRain', 'CloudSnow', 'Code', 'Compass', 'Copy', 'Cpu', 'CreditCard', 'Database', 'Diamond', 'Divide', 'DollarSign', 'Dot', 'Download', 'Edit', 'Equal', 'Eraser', 'Euro', 'ExternalLink', 'Eye', 'FaBrave', 'Factory', 'FcAlphabeticalSortingAz', 'FcAlphabeticalSortingZa', 'FcAreaChart', 'FcAssistant', 'FcBiotech', 'FcBrokenLink', 'FcBusiness', 'FcBusinessContact', 'FcCalendar', 'FcCommandLine', 'FcConferenceCall', 'FcDataProtection', 'FcDocument', 'FcDownload', 'FcElectronics', 'FcEngineering', 'FcFeedback', 'FcFilm', 'FcGoogle', 'FcGraduationCap', 'FcLibrary', 'FcManager', 'FcMultipleInputs', 'FcMusic', 'FcParallelTasks', 'FcSalesPerformance', 'FcShipped', 'FcSignature', 'FcSms', 'FcTodoList', 'FcWikipedia', 'File', 'FileText', 'Filter', 'Folder', 'FolderOpen', 'Fuel', 'Gift', 'GitBranch', 'Globe', 'Hash', 'Headphones', 'Heart', 'HelpCircle', 'Hexagon', 'Highlighter', 'Home', 'Image', 'Inbox', 'Indent', 'Info', 'Italic', 'Key', 'Laptop', 'Layers', 'LineChart', 'Link', 'List', 'ListOrdered', 'Lock', 'LogIn', 'LogOut', 'Mail', 'Map', 'MapPin', 'Menu', 'MessageCircle', 'MessageSquare', 'Mic', 'MicOff', 'Minus', 'Monitor', 'MonitorSpeaker', 'Moon', 'MoreHorizontal', 'MoreVertical', 'Move', 'Music', 'Music2', 'Navigation', 'Octagon', 'Outdent', 'Package', 'Paintbrush', 'Palette', 'PauseCircle', 'Pen', 'PenTool', 'Pencil', 'Percent', 'Phone', 'PhoneCall', 'PieChart', 'Plane', 'Play', 'PlayCircle', 'Plus', 'PoundSterling', 'Power', 'PowerOff', 'Quote', 'Receipt', 'RefreshCw', 'Repeat', 'Repeat1', 'RotateCcw', 'Ruler', 'Save', 'Scissors', 'Search', 'Send', 'Settings', 'Share', 'Share2', 'Shield', 'ShieldCheck', 'Ship', 'ShoppingBag', 'ShoppingCart', 'Shuffle', 'SkipBack', 'SkipForward', 'Smartphone', 'Square', 'Star', 'StopCircle', 'Store', 'Sun', 'Tablet', 'Tag', 'Tags', 'Target', 'Thermometer', 'Timer', 'Train', 'Trash', 'TrendingDown', 'TrendingUp', 'Triangle', 'Trophy', 'Truck', 'Type', 'Umbrella', 'Underline', 'Unlink', 'Unlock', 'Upload', 'User', 'User2', 'UserMinus', 'UserPlus', 'Users', 'Video', 'Volume2', 'VolumeX', 'Wand2', 'Webhook', 'Wifi', 'WifiOff', 'Wrench', 'X', 'XCircle', 'Zap'] as const,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: null,
            description: '"Icon" field for registeredFunction. This is an optional field. Your entry must be an string data type.',
        },
            nodeDescription: {
            fieldNameFormats: {
    "frontend": "nodeDescription",
    "backend": "node_description",
    "database": "node_description",
    "pretty": "Node Description",
    "component": "NodeDescription",
    "kebab": "node-description",
    "sqlFunctionRef": "p_node_description",
    "RestAPI": "nodeDescription",
    "GraphQL": "nodeDescription",
    "custom": "nodeDescription"
} as const,
            name: 'nodeDescription',
            displayName: 'Node Description',

            uniqueColumnId: 'supabase_automation_matrix:public:registered_function:node_description',
            uniqueFieldId: 'supabase_automation_matrix:registeredFunction:nodeDescription',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'registeredFunction',
            databaseTable: 'registered_function',
            foreignKeyReference: null,
            description: '"Node Description" field for registeredFunction. This is an optional field. Your entry must be an string data type.',
        },
            dataBrokerReference: {
    fieldNameFormats: {
    "frontend": "dataBrokerReference",
    "backend": "data_broker_reference",
    "database": "ref_data_broker",
    "pretty": "Data Broker Reference",
    "component": "DataBrokerReference",
    "kebab": "data-brokerReference",
    "sqlFunctionRef": "p_ref_data_broker",
    "RestAPI": "dataBrokerReference",
    "GraphQL": "dataBrokerReference",
    "custom": "dataBrokerReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:data_broker:id',
    uniqueFieldId: 'supabase_automation_matrix:dataBroker:id',
    name: 'dataBrokerReference',
    displayName: 'Data Broker Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['dataBroker'][]>,
    entityName: 'dataBroker',
    databaseTable: 'data_broker',
    relationshipMap: {data_broker: 'id'},
},
            systemFunctionInverse: {
    fieldNameFormats: {
    "frontend": "systemFunctionInverse",
    "backend": "system_function_Inverse",
    "database": "ifk_system_function",
    "pretty": "System Function Inverse",
    "component": "SystemFunctionInverse",
    "kebab": "system-functionInverse",
    "sqlFunctionRef": "p_ifk_system_function",
    "RestAPI": "systemFunctionInverse",
    "GraphQL": "systemFunctionInverse",
    "custom": "systemFunctionInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:system_function',
    uniqueEntityId: 'supabase_automation_matrix:systemFunction',
    name: 'systemFunctionInverse',
    displayName: 'System Function Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['systemFunction'][]>,
    entityName: 'systemFunction',
    databaseTable: 'system_function',
},
            argInverse: {
    fieldNameFormats: {
    "frontend": "argInverse",
    "backend": "arg_Inverse",
    "database": "ifk_arg",
    "pretty": "Arg Inverse",
    "component": "ArgInverse",
    "kebab": "argInverse",
    "sqlFunctionRef": "p_ifk_arg",
    "RestAPI": "argInverse",
    "GraphQL": "argInverse",
    "custom": "argInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:arg',
    uniqueEntityId: 'supabase_automation_matrix:arg',
    name: 'argInverse',
    displayName: 'Arg Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['arg'][]>,
    entityName: 'arg',
    databaseTable: 'arg',
},
            workflowNodeInverse: {
    fieldNameFormats: {
    "frontend": "workflowNodeInverse",
    "backend": "workflow_node_Inverse",
    "database": "ifk_workflow_node",
    "pretty": "Workflow Node Inverse",
    "component": "WorkflowNodeInverse",
    "kebab": "workflow-nodeInverse",
    "sqlFunctionRef": "p_ifk_workflow_node",
    "RestAPI": "workflowNodeInverse",
    "GraphQL": "workflowNodeInverse",
    "custom": "workflowNodeInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:workflow_node',
    uniqueEntityId: 'supabase_automation_matrix:workflowNode',
    name: 'workflowNodeInverse',
    displayName: 'Workflow Node Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflowNode'][]>,
    entityName: 'workflowNode',
    databaseTable: 'workflow_node',
},
            workflowNodeDataInverse: {
    fieldNameFormats: {
    "frontend": "workflowNodeDataInverse",
    "backend": "workflow_node_data_Inverse",
    "database": "ifk_workflow_node_data",
    "pretty": "Workflow Node Data Inverse",
    "component": "WorkflowNodeDataInverse",
    "kebab": "workflow-node-dataInverse",
    "sqlFunctionRef": "p_ifk_workflow_node_data",
    "RestAPI": "workflowNodeDataInverse",
    "GraphQL": "workflowNodeDataInverse",
    "custom": "workflowNodeDataInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:workflow_node_data',
    uniqueEntityId: 'supabase_automation_matrix:workflowNodeData',
    name: 'workflowNodeDataInverse',
    displayName: 'Workflow Node Data Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflowNodeData'][]>,
    entityName: 'workflowNodeData',
    databaseTable: 'workflow_node_data',
},
        },
        entityNameFormats: {
    "frontend": "registeredFunction",
    "backend": "registered_function",
    "database": "registered_function",
    "pretty": "Registered Function",
    "component": "RegisteredFunction",
    "kebab": "registered-function",
    "sqlFunctionRef": "p_registered_function",
    "RestAPI": "registeredFunction",
    "GraphQL": "registeredFunction",
    "custom": "registeredFunction"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'return_broker', relatedTable: 'data_broker', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'system_function', relatedColumn: 'rf_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'arg', relatedColumn: 'registered_function', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'workflow_node', relatedColumn: 'function_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'workflow_node_data', relatedColumn: 'function_id', junctionTable: null }
        ],
    },
schemaTemplates: {
        schemaType: 'table' as const,
        entityName: 'schemaTemplates',
        displayName: 'Schema Templates',
        uniqueTableId: 'supabase_automation_matrix:public:schema_templates',
        uniqueEntityId: 'supabase_automation_matrix:schemaTemplates',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'templateName', databaseFieldName: 'template_name' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:schema_templates:id',
            uniqueFieldId: 'supabase_automation_matrix:schemaTemplates:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'schemaTemplates',
            databaseTable: 'schema_templates',
            foreignKeyReference: null,
            description: '"Id" field for schemaTemplates. This is a required field. Your entry must be an uuid data type.',
        },
            templateName: {
            fieldNameFormats: {
    "frontend": "templateName",
    "backend": "template_name",
    "database": "template_name",
    "pretty": "Template Name",
    "component": "TemplateName",
    "kebab": "template-name",
    "sqlFunctionRef": "p_template_name",
    "RestAPI": "templateName",
    "GraphQL": "templateName",
    "custom": "templateName"
} as const,
            name: 'templateName',
            displayName: 'Template Name',

            uniqueColumnId: 'supabase_automation_matrix:public:schema_templates:template_name',
            uniqueFieldId: 'supabase_automation_matrix:schemaTemplates:templateName',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: 100,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'schemaTemplates',
            databaseTable: 'schema_templates',
            foreignKeyReference: null,
            description: '"Template Name" field for schemaTemplates. This is a required field. Your entry must be an string data type. Maximum Length: 100',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:schema_templates:description',
            uniqueFieldId: 'supabase_automation_matrix:schemaTemplates:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'schemaTemplates',
            databaseTable: 'schema_templates',
            foreignKeyReference: null,
            description: '"Description" field for schemaTemplates. This is an optional field. Your entry must be an string data type.',
        },
            fields: {
            fieldNameFormats: {
    "frontend": "fields",
    "backend": "fields",
    "database": "fields",
    "pretty": "Fields",
    "component": "Fields",
    "kebab": "fields",
    "sqlFunctionRef": "p_fields",
    "RestAPI": "fields",
    "GraphQL": "fields",
    "custom": "fields"
} as const,
            name: 'fields',
            displayName: 'Fields',

            uniqueColumnId: 'supabase_automation_matrix:public:schema_templates:fields',
            uniqueFieldId: 'supabase_automation_matrix:schemaTemplates:fields',

            dataType: 'object' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'schemaTemplates',
            databaseTable: 'schema_templates',
            foreignKeyReference: null,
            description: '"Fields" field for schemaTemplates. This is a required field. Your entry must be an object data type.',
        },
            version: {
            fieldNameFormats: {
    "frontend": "version",
    "backend": "version",
    "database": "version",
    "pretty": "Version",
    "component": "Version",
    "kebab": "version",
    "sqlFunctionRef": "p_version",
    "RestAPI": "version",
    "GraphQL": "version",
    "custom": "version"
} as const,
            name: 'version',
            displayName: 'Version',

            uniqueColumnId: 'supabase_automation_matrix:public:schema_templates:version',
            uniqueFieldId: 'supabase_automation_matrix:schemaTemplates:version',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "1" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'schemaTemplates',
            databaseTable: 'schema_templates',
            foreignKeyReference: null,
            description: '"Version" field for schemaTemplates. This is a required field. Your entry must be an number data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:schema_templates:created_at',
            uniqueFieldId: 'supabase_automation_matrix:schemaTemplates:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'schemaTemplates',
            databaseTable: 'schema_templates',
            foreignKeyReference: null,
            description: '"Created At" field for schemaTemplates. This is an optional field. Your entry must be an date data type.',
        },
        },
        entityNameFormats: {
    "frontend": "schemaTemplates",
    "backend": "schema_templates",
    "database": "schema_templates",
    "pretty": "Schema Templates",
    "component": "SchemaTemplates",
    "kebab": "schema-templates",
    "sqlFunctionRef": "p_schema_templates",
    "RestAPI": "schemaTemplates",
    "GraphQL": "schemaTemplates",
    "custom": "schemaTemplates"
},
        relationships: [
            
        ],
    },
scrapeBaseConfig: {
        schemaType: 'table' as const,
        entityName: 'scrapeBaseConfig',
        displayName: 'Scrape Base Config',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_base_config',
        uniqueEntityId: 'supabase_automation_matrix:scrapeBaseConfig',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_base_config:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeBaseConfig:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeBaseConfig',
            databaseTable: 'scrape_base_config',
            foreignKeyReference: null,
            description: '"Id" field for scrapeBaseConfig. This is a required field. Your entry must be an uuid data type.',
        },
            selectorType: {
            fieldNameFormats: {
    "frontend": "selectorType",
    "backend": "selector_type",
    "database": "selector_type",
    "pretty": "Selector Type",
    "component": "SelectorType",
    "kebab": "selector-type",
    "sqlFunctionRef": "p_selector_type",
    "RestAPI": "selectorType",
    "GraphQL": "selectorType",
    "custom": "selectorType"
} as const,
            name: 'selectorType',
            displayName: 'Selector Type',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_base_config:selector_type',
            uniqueFieldId: 'supabase_automation_matrix:scrapeBaseConfig:selectorType',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeBaseConfig',
            databaseTable: 'scrape_base_config',
            foreignKeyReference: null,
            description: '"Selector Type" field for scrapeBaseConfig. This is a required field. Your entry must be an string data type. This must be a unique value.',
        },
            exact: {
            fieldNameFormats: {
    "frontend": "exact",
    "backend": "exact",
    "database": "exact",
    "pretty": "Exact",
    "component": "Exact",
    "kebab": "exact",
    "sqlFunctionRef": "p_exact",
    "RestAPI": "exact",
    "GraphQL": "exact",
    "custom": "exact"
} as const,
            name: 'exact',
            displayName: 'Exact',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_base_config:exact',
            uniqueFieldId: 'supabase_automation_matrix:scrapeBaseConfig:exact',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'scrapeBaseConfig',
            databaseTable: 'scrape_base_config',
            foreignKeyReference: null,
            description: '"Exact" field for scrapeBaseConfig. This is an optional field. Your entry must be an object data type.',
        },
            partial: {
            fieldNameFormats: {
    "frontend": "partial",
    "backend": "partial",
    "database": "partial",
    "pretty": "Partial",
    "component": "Partial",
    "kebab": "partial",
    "sqlFunctionRef": "p_partial",
    "RestAPI": "partial",
    "GraphQL": "partial",
    "custom": "partial"
} as const,
            name: 'partial',
            displayName: 'Partial',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_base_config:partial',
            uniqueFieldId: 'supabase_automation_matrix:scrapeBaseConfig:partial',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'scrapeBaseConfig',
            databaseTable: 'scrape_base_config',
            foreignKeyReference: null,
            description: '"Partial" field for scrapeBaseConfig. This is an optional field. Your entry must be an object data type.',
        },
            regex: {
            fieldNameFormats: {
    "frontend": "regex",
    "backend": "regex",
    "database": "regex",
    "pretty": "Regex",
    "component": "Regex",
    "kebab": "regex",
    "sqlFunctionRef": "p_regex",
    "RestAPI": "regex",
    "GraphQL": "regex",
    "custom": "regex"
} as const,
            name: 'regex',
            displayName: 'Regex',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_base_config:regex',
            uniqueFieldId: 'supabase_automation_matrix:scrapeBaseConfig:regex',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'scrapeBaseConfig',
            databaseTable: 'scrape_base_config',
            foreignKeyReference: null,
            description: '"Regex" field for scrapeBaseConfig. This is an optional field. Your entry must be an object data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_base_config:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeBaseConfig:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeBaseConfig',
            databaseTable: 'scrape_base_config',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeBaseConfig. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_base_config:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeBaseConfig:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeBaseConfig',
            databaseTable: 'scrape_base_config',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeBaseConfig. This is a required field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_base_config:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeBaseConfig:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeBaseConfig',
            databaseTable: 'scrape_base_config',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeBaseConfig. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_base_config:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeBaseConfig:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeBaseConfig',
            databaseTable: 'scrape_base_config',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeBaseConfig. This is an optional field. Your entry must be an boolean data type.',
        },
        },
        entityNameFormats: {
    "frontend": "scrapeBaseConfig",
    "backend": "scrape_base_config",
    "database": "scrape_base_config",
    "pretty": "Scrape Base Config",
    "component": "ScrapeBaseConfig",
    "kebab": "scrape-base-config",
    "sqlFunctionRef": "p_scrape_base_config",
    "RestAPI": "scrapeBaseConfig",
    "GraphQL": "scrapeBaseConfig",
    "custom": "scrapeBaseConfig"
},
        relationships: [
            
        ],
    },
scrapeCachePolicy: {
        schemaType: 'table' as const,
        entityName: 'scrapeCachePolicy',
        displayName: 'Scrape Cache Policy',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_cache_policy',
        uniqueEntityId: 'supabase_automation_matrix:scrapeCachePolicy',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cache_policy:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCachePolicy:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCachePolicy',
            databaseTable: 'scrape_cache_policy',
            foreignKeyReference: null,
            description: '"Id" field for scrapeCachePolicy. This is a required field. Your entry must be an uuid data type.',
        },
            rescrapeAfter: {
            fieldNameFormats: {
    "frontend": "rescrapeAfter",
    "backend": "rescrape_after",
    "database": "rescrape_after",
    "pretty": "Rescrape After",
    "component": "RescrapeAfter",
    "kebab": "rescrape-after",
    "sqlFunctionRef": "p_rescrape_after",
    "RestAPI": "rescrapeAfter",
    "GraphQL": "rescrapeAfter",
    "custom": "rescrapeAfter"
} as const,
            name: 'rescrapeAfter',
            displayName: 'Rescrape After',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cache_policy:rescrape_after',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCachePolicy:rescrapeAfter',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "2592000" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'scrapeCachePolicy',
            databaseTable: 'scrape_cache_policy',
            foreignKeyReference: null,
            description: '"Rescrape After" field for scrapeCachePolicy. This is a required field. Your entry must be an number data type.',
        },
            staleAfter: {
            fieldNameFormats: {
    "frontend": "staleAfter",
    "backend": "stale_after",
    "database": "stale_after",
    "pretty": "Stale After",
    "component": "StaleAfter",
    "kebab": "stale-after",
    "sqlFunctionRef": "p_stale_after",
    "RestAPI": "staleAfter",
    "GraphQL": "staleAfter",
    "custom": "staleAfter"
} as const,
            name: 'staleAfter',
            displayName: 'Stale After',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cache_policy:stale_after',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCachePolicy:staleAfter',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "5184000" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'scrapeCachePolicy',
            databaseTable: 'scrape_cache_policy',
            foreignKeyReference: null,
            description: '"Stale After" field for scrapeCachePolicy. This is a required field. Your entry must be an number data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cache_policy:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCachePolicy:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCachePolicy',
            databaseTable: 'scrape_cache_policy',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapeCachePolicy. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cache_policy:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCachePolicy:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeCachePolicy',
            databaseTable: 'scrape_cache_policy',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeCachePolicy. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cache_policy:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCachePolicy:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeCachePolicy',
            databaseTable: 'scrape_cache_policy',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeCachePolicy. This is a required field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cache_policy:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCachePolicy:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeCachePolicy',
            databaseTable: 'scrape_cache_policy',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeCachePolicy. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cache_policy:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCachePolicy:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeCachePolicy',
            databaseTable: 'scrape_cache_policy',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeCachePolicy. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapePathPatternCachePolicyInverse: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternCachePolicyInverse",
    "backend": "scrape_path_pattern_cache_policy_Inverse",
    "database": "ifk_scrape_path_pattern_cache_policy",
    "pretty": "Scrape Path Pattern Cache Policy Inverse",
    "component": "ScrapePathPatternCachePolicyInverse",
    "kebab": "scrape-path-pattern-cache-policyInverse",
    "sqlFunctionRef": "p_ifk_scrape_path_pattern_cache_policy",
    "RestAPI": "scrapePathPatternCachePolicyInverse",
    "GraphQL": "scrapePathPatternCachePolicyInverse",
    "custom": "scrapePathPatternCachePolicyInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_path_pattern_cache_policy',
    uniqueEntityId: 'supabase_automation_matrix:scrapePathPatternCachePolicy',
    name: 'scrapePathPatternCachePolicyInverse',
    displayName: 'Scrape Path Pattern Cache Policy Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPatternCachePolicy'][]>,
    entityName: 'scrapePathPatternCachePolicy',
    databaseTable: 'scrape_path_pattern_cache_policy',
},
        },
        entityNameFormats: {
    "frontend": "scrapeCachePolicy",
    "backend": "scrape_cache_policy",
    "database": "scrape_cache_policy",
    "pretty": "Scrape Cache Policy",
    "component": "ScrapeCachePolicy",
    "kebab": "scrape-cache-policy",
    "sqlFunctionRef": "p_scrape_cache_policy",
    "RestAPI": "scrapeCachePolicy",
    "GraphQL": "scrapeCachePolicy",
    "custom": "scrapeCachePolicy"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_path_pattern_cache_policy', relatedColumn: 'scrape_cache_policy_id', junctionTable: null }
        ],
    },
scrapeConfiguration: {
        schemaType: 'table' as const,
        entityName: 'scrapeConfiguration',
        displayName: 'Scrape Configuration',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_configuration',
        uniqueEntityId: 'supabase_automation_matrix:scrapeConfiguration',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_configuration:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeConfiguration',
            databaseTable: 'scrape_configuration',
            foreignKeyReference: null,
            description: '"Id" field for scrapeConfiguration. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeMode: {
            fieldNameFormats: {
    "frontend": "scrapeMode",
    "backend": "scrape_mode",
    "database": "scrape_mode",
    "pretty": "Scrape Mode",
    "component": "ScrapeMode",
    "kebab": "scrape-mode",
    "sqlFunctionRef": "p_scrape_mode",
    "RestAPI": "scrapeMode",
    "GraphQL": "scrapeMode",
    "custom": "scrapeMode"
} as const,
            name: 'scrapeMode',
            displayName: 'Scrape Mode',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_configuration:scrape_mode',
            uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:scrapeMode',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeConfiguration',
            databaseTable: 'scrape_configuration',
            foreignKeyReference: null,
            description: '"Scrape Mode" field for scrapeConfiguration. This is a required field. Your entry must be an string data type.',
        },
            interactionSettingsId: {
            fieldNameFormats: {
    "frontend": "interactionSettingsId",
    "backend": "interaction_settings_id",
    "database": "interaction_settings_id",
    "pretty": "Interaction Settings Id",
    "component": "InteractionSettingsId",
    "kebab": "interaction-settings-id",
    "sqlFunctionRef": "p_interaction_settings_id",
    "RestAPI": "interactionSettingsId",
    "GraphQL": "interactionSettingsId",
    "custom": "interactionSettingsId"
} as const,
            name: 'interactionSettingsId',
            displayName: 'Interaction Settings Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_configuration:interaction_settings_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:interactionSettingsId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeConfiguration',
            databaseTable: 'scrape_configuration',
            foreignKeyReference: null,
            description: '"Interaction Settings Id" field for scrapeConfiguration. This is an optional field. Your entry must be an uuid data type.',
        },
            scrapePathPatternId: {
            fieldNameFormats: {
    "frontend": "scrapePathPatternId",
    "backend": "scrape_path_pattern_id",
    "database": "scrape_path_pattern_id",
    "pretty": "Scrape Path Pattern Id",
    "component": "ScrapePathPatternId",
    "kebab": "scrape-path-pattern-id",
    "sqlFunctionRef": "p_scrape_path_pattern_id",
    "RestAPI": "scrapePathPatternId",
    "GraphQL": "scrapePathPatternId",
    "custom": "scrapePathPatternId"
} as const,
            name: 'scrapePathPatternId',
            displayName: 'Scrape Path Pattern Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_configuration:scrape_path_pattern_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:scrapePathPatternId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeConfiguration',
            databaseTable: 'scrape_configuration',
            foreignKeyReference: {"table": "scrape_path_pattern", "column": "id", "entity": "scrapePathPattern", "field": "id"},
            description: '"Scrape Path Pattern Id" field for scrapeConfiguration. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapePathPattern.',
        },
            isActive: {
            fieldNameFormats: {
    "frontend": "isActive",
    "backend": "is_active",
    "database": "is_active",
    "pretty": "Is Active",
    "component": "IsActive",
    "kebab": "is-active",
    "sqlFunctionRef": "p_is_active",
    "RestAPI": "isActive",
    "GraphQL": "isActive",
    "custom": "isActive"
} as const,
            name: 'isActive',
            displayName: 'Is Active',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_configuration:is_active',
            uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:isActive',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeConfiguration',
            databaseTable: 'scrape_configuration',
            foreignKeyReference: null,
            description: '"Is Active" field for scrapeConfiguration. This is an optional field. Your entry must be an boolean data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_configuration:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeConfiguration',
            databaseTable: 'scrape_configuration',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapeConfiguration. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_configuration:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeConfiguration',
            databaseTable: 'scrape_configuration',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeConfiguration. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_configuration:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeConfiguration',
            databaseTable: 'scrape_configuration',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeConfiguration. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_configuration:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeConfiguration',
            databaseTable: 'scrape_configuration',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeConfiguration. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_configuration:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeConfiguration',
            databaseTable: 'scrape_configuration',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeConfiguration. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapePathPatternReference: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternReference",
    "backend": "scrape_path_pattern_reference",
    "database": "ref_scrape_path_pattern",
    "pretty": "Scrape Path Pattern Reference",
    "component": "ScrapePathPatternReference",
    "kebab": "scrape-path-patternReference",
    "sqlFunctionRef": "p_ref_scrape_path_pattern",
    "RestAPI": "scrapePathPatternReference",
    "GraphQL": "scrapePathPatternReference",
    "custom": "scrapePathPatternReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_path_pattern:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapePathPattern:id',
    name: 'scrapePathPatternReference',
    displayName: 'Scrape Path Pattern Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPattern'][]>,
    entityName: 'scrapePathPattern',
    databaseTable: 'scrape_path_pattern',
    relationshipMap: {scrape_path_pattern: 'id'},
},
            scrapeParsedPageInverse: {
    fieldNameFormats: {
    "frontend": "scrapeParsedPageInverse",
    "backend": "scrape_parsed_page_Inverse",
    "database": "ifk_scrape_parsed_page",
    "pretty": "Scrape Parsed Page Inverse",
    "component": "ScrapeParsedPageInverse",
    "kebab": "scrape-parsed-pageInverse",
    "sqlFunctionRef": "p_ifk_scrape_parsed_page",
    "RestAPI": "scrapeParsedPageInverse",
    "GraphQL": "scrapeParsedPageInverse",
    "custom": "scrapeParsedPageInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_parsed_page',
    uniqueEntityId: 'supabase_automation_matrix:scrapeParsedPage',
    name: 'scrapeParsedPageInverse',
    displayName: 'Scrape Parsed Page Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeParsedPage'][]>,
    entityName: 'scrapeParsedPage',
    databaseTable: 'scrape_parsed_page',
},
        },
        entityNameFormats: {
    "frontend": "scrapeConfiguration",
    "backend": "scrape_configuration",
    "database": "scrape_configuration",
    "pretty": "Scrape Configuration",
    "component": "ScrapeConfiguration",
    "kebab": "scrape-configuration",
    "sqlFunctionRef": "p_scrape_configuration",
    "RestAPI": "scrapeConfiguration",
    "GraphQL": "scrapeConfiguration",
    "custom": "scrapeConfiguration"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_path_pattern_id', relatedTable: 'scrape_path_pattern', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_parsed_page', relatedColumn: 'scrape_configuration_id', junctionTable: null }
        ],
    },
scrapeCycleRun: {
        schemaType: 'table' as const,
        entityName: 'scrapeCycleRun',
        displayName: 'Scrape Cycle Run',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_cycle_run',
        uniqueEntityId: 'supabase_automation_matrix:scrapeCycleRun',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: null,
            description: '"Id" field for scrapeCycleRun. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeCycleTrackerId: {
            fieldNameFormats: {
    "frontend": "scrapeCycleTrackerId",
    "backend": "scrape_cycle_tracker_id",
    "database": "scrape_cycle_tracker_id",
    "pretty": "Scrape Cycle Tracker Id",
    "component": "ScrapeCycleTrackerId",
    "kebab": "scrape-cycle-tracker-id",
    "sqlFunctionRef": "p_scrape_cycle_tracker_id",
    "RestAPI": "scrapeCycleTrackerId",
    "GraphQL": "scrapeCycleTrackerId",
    "custom": "scrapeCycleTrackerId"
} as const,
            name: 'scrapeCycleTrackerId',
            displayName: 'Scrape Cycle Tracker Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:scrape_cycle_tracker_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:scrapeCycleTrackerId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: {"table": "scrape_cycle_tracker", "column": "id", "entity": "scrapeCycleTracker", "field": "id"},
            description: '"Scrape Cycle Tracker Id" field for scrapeCycleRun. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapeCycleTracker.',
        },
            runNumber: {
            fieldNameFormats: {
    "frontend": "runNumber",
    "backend": "run_number",
    "database": "run_number",
    "pretty": "Run Number",
    "component": "RunNumber",
    "kebab": "run-number",
    "sqlFunctionRef": "p_run_number",
    "RestAPI": "runNumber",
    "GraphQL": "runNumber",
    "custom": "runNumber"
} as const,
            name: 'runNumber',
            displayName: 'Run Number',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:run_number',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:runNumber',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: null,
            description: '"Run Number" field for scrapeCycleRun. This is a required field. Your entry must be an number data type.',
        },
            completedAt: {
            fieldNameFormats: {
    "frontend": "completedAt",
    "backend": "completed_at",
    "database": "completed_at",
    "pretty": "Completed At",
    "component": "CompletedAt",
    "kebab": "completed-at",
    "sqlFunctionRef": "p_completed_at",
    "RestAPI": "completedAt",
    "GraphQL": "completedAt",
    "custom": "completedAt"
} as const,
            name: 'completedAt',
            displayName: 'Completed At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:completed_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:completedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: null,
            description: '"Completed At" field for scrapeCycleRun. This is an optional field. Your entry must be an date data type.',
        },
            allowPattern: {
            fieldNameFormats: {
    "frontend": "allowPattern",
    "backend": "allow_pattern",
    "database": "allow_pattern",
    "pretty": "Allow Pattern",
    "component": "AllowPattern",
    "kebab": "allow-pattern",
    "sqlFunctionRef": "p_allow_pattern",
    "RestAPI": "allowPattern",
    "GraphQL": "allowPattern",
    "custom": "allowPattern"
} as const,
            name: 'allowPattern',
            displayName: 'Allow Pattern',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:allow_pattern',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:allowPattern',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: null,
            description: '"Allow Pattern" field for scrapeCycleRun. This is an optional field. Your entry must be an string data type.',
        },
            disallowPatterns: {
            fieldNameFormats: {
    "frontend": "disallowPatterns",
    "backend": "disallow_patterns",
    "database": "disallow_patterns",
    "pretty": "Disallow Patterns",
    "component": "DisallowPatterns",
    "kebab": "disallow-patterns",
    "sqlFunctionRef": "p_disallow_patterns",
    "RestAPI": "disallowPatterns",
    "GraphQL": "disallowPatterns",
    "custom": "disallowPatterns"
} as const,
            name: 'disallowPatterns',
            displayName: 'Disallow Patterns',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:disallow_patterns',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:disallowPatterns',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: null,
            description: '"Disallow Patterns" field for scrapeCycleRun. This is an optional field. Your entry must be an object data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: null,
            description: '"User Id" field for scrapeCycleRun. This is an optional field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeCycleRun. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeCycleRun. This is a required field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeCycleRun. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_run:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeCycleRun',
            databaseTable: 'scrape_cycle_run',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeCycleRun. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeCycleTrackerReference: {
    fieldNameFormats: {
    "frontend": "scrapeCycleTrackerReference",
    "backend": "scrape_cycle_tracker_reference",
    "database": "ref_scrape_cycle_tracker",
    "pretty": "Scrape Cycle Tracker Reference",
    "component": "ScrapeCycleTrackerReference",
    "kebab": "scrape-cycle-trackerReference",
    "sqlFunctionRef": "p_ref_scrape_cycle_tracker",
    "RestAPI": "scrapeCycleTrackerReference",
    "GraphQL": "scrapeCycleTrackerReference",
    "custom": "scrapeCycleTrackerReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_cycle_tracker:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:id',
    name: 'scrapeCycleTrackerReference',
    displayName: 'Scrape Cycle Tracker Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeCycleTracker'][]>,
    entityName: 'scrapeCycleTracker',
    databaseTable: 'scrape_cycle_tracker',
    relationshipMap: {scrape_cycle_tracker: 'id'},
},
            scrapeTaskInverse: {
    fieldNameFormats: {
    "frontend": "scrapeTaskInverse",
    "backend": "scrape_task_Inverse",
    "database": "ifk_scrape_task",
    "pretty": "Scrape Task Inverse",
    "component": "ScrapeTaskInverse",
    "kebab": "scrape-taskInverse",
    "sqlFunctionRef": "p_ifk_scrape_task",
    "RestAPI": "scrapeTaskInverse",
    "GraphQL": "scrapeTaskInverse",
    "custom": "scrapeTaskInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_task',
    uniqueEntityId: 'supabase_automation_matrix:scrapeTask',
    name: 'scrapeTaskInverse',
    displayName: 'Scrape Task Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeTask'][]>,
    entityName: 'scrapeTask',
    databaseTable: 'scrape_task',
},
            scrapeParsedPageInverse: {
    fieldNameFormats: {
    "frontend": "scrapeParsedPageInverse",
    "backend": "scrape_parsed_page_Inverse",
    "database": "ifk_scrape_parsed_page",
    "pretty": "Scrape Parsed Page Inverse",
    "component": "ScrapeParsedPageInverse",
    "kebab": "scrape-parsed-pageInverse",
    "sqlFunctionRef": "p_ifk_scrape_parsed_page",
    "RestAPI": "scrapeParsedPageInverse",
    "GraphQL": "scrapeParsedPageInverse",
    "custom": "scrapeParsedPageInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_parsed_page',
    uniqueEntityId: 'supabase_automation_matrix:scrapeParsedPage',
    name: 'scrapeParsedPageInverse',
    displayName: 'Scrape Parsed Page Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeParsedPage'][]>,
    entityName: 'scrapeParsedPage',
    databaseTable: 'scrape_parsed_page',
},
        },
        entityNameFormats: {
    "frontend": "scrapeCycleRun",
    "backend": "scrape_cycle_run",
    "database": "scrape_cycle_run",
    "pretty": "Scrape Cycle Run",
    "component": "ScrapeCycleRun",
    "kebab": "scrape-cycle-run",
    "sqlFunctionRef": "p_scrape_cycle_run",
    "RestAPI": "scrapeCycleRun",
    "GraphQL": "scrapeCycleRun",
    "custom": "scrapeCycleRun"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_cycle_tracker_id', relatedTable: 'scrape_cycle_tracker', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_task', relatedColumn: 'scrape_cycle_run_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_parsed_page', relatedColumn: 'scrape_cycle_run_id', junctionTable: null }
        ],
    },
scrapeCycleTracker: {
        schemaType: 'table' as const,
        entityName: 'scrapeCycleTracker',
        displayName: 'Scrape Cycle Tracker',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_cycle_tracker',
        uniqueEntityId: 'supabase_automation_matrix:scrapeCycleTracker',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'pageName', databaseFieldName: 'page_name' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: null,
            description: '"Id" field for scrapeCycleTracker. This is a required field. Your entry must be an uuid data type.',
        },
            targetUrl: {
            fieldNameFormats: {
    "frontend": "targetUrl",
    "backend": "target_url",
    "database": "target_url",
    "pretty": "Target Url",
    "component": "TargetUrl",
    "kebab": "target-url",
    "sqlFunctionRef": "p_target_url",
    "RestAPI": "targetUrl",
    "GraphQL": "targetUrl",
    "custom": "targetUrl"
} as const,
            name: 'targetUrl',
            displayName: 'Target Url',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:target_url',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:targetUrl',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: null,
            description: '"Target Url" field for scrapeCycleTracker. This is an optional field. Your entry must be an string data type.',
        },
            pageName: {
            fieldNameFormats: {
    "frontend": "pageName",
    "backend": "page_name",
    "database": "page_name",
    "pretty": "Page Name",
    "component": "PageName",
    "kebab": "page-name",
    "sqlFunctionRef": "p_page_name",
    "RestAPI": "pageName",
    "GraphQL": "pageName",
    "custom": "pageName"
} as const,
            name: 'pageName',
            displayName: 'Page Name',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:page_name',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:pageName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: null,
            description: '"Page Name" field for scrapeCycleTracker. This is an optional field. Your entry must be an string data type.',
        },
            scrapePathPatternCachePolicyId: {
            fieldNameFormats: {
    "frontend": "scrapePathPatternCachePolicyId",
    "backend": "scrape_path_pattern_cache_policy_id",
    "database": "scrape_path_pattern_cache_policy_id",
    "pretty": "Scrape Path Pattern Cache Policy Id",
    "component": "ScrapePathPatternCachePolicyId",
    "kebab": "scrape-path-pattern-cache-policy-id",
    "sqlFunctionRef": "p_scrape_path_pattern_cache_policy_id",
    "RestAPI": "scrapePathPatternCachePolicyId",
    "GraphQL": "scrapePathPatternCachePolicyId",
    "custom": "scrapePathPatternCachePolicyId"
} as const,
            name: 'scrapePathPatternCachePolicyId',
            displayName: 'Scrape Path Pattern Cache Policy Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:scrape_path_pattern_cache_policy_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:scrapePathPatternCachePolicyId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: {"table": "scrape_path_pattern_cache_policy", "column": "id", "entity": "scrapePathPatternCachePolicy", "field": "id"},
            description: '"Scrape Path Pattern Cache Policy Id" field for scrapeCycleTracker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapePathPatternCachePolicy.',
        },
            scrapeJobId: {
            fieldNameFormats: {
    "frontend": "scrapeJobId",
    "backend": "scrape_job_id",
    "database": "scrape_job_id",
    "pretty": "Scrape Job Id",
    "component": "ScrapeJobId",
    "kebab": "scrape-job-id",
    "sqlFunctionRef": "p_scrape_job_id",
    "RestAPI": "scrapeJobId",
    "GraphQL": "scrapeJobId",
    "custom": "scrapeJobId"
} as const,
            name: 'scrapeJobId',
            displayName: 'Scrape Job Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:scrape_job_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:scrapeJobId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: {"table": "scrape_job", "column": "id", "entity": "scrapeJob", "field": "id"},
            description: '"Scrape Job Id" field for scrapeCycleTracker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeJob.',
        },
            lastRunAt: {
            fieldNameFormats: {
    "frontend": "lastRunAt",
    "backend": "last_run_at",
    "database": "last_run_at",
    "pretty": "Last Run At",
    "component": "LastRunAt",
    "kebab": "last-run-at",
    "sqlFunctionRef": "p_last_run_at",
    "RestAPI": "lastRunAt",
    "GraphQL": "lastRunAt",
    "custom": "lastRunAt"
} as const,
            name: 'lastRunAt',
            displayName: 'Last Run At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:last_run_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:lastRunAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: null,
            description: '"Last Run At" field for scrapeCycleTracker. This is an optional field. Your entry must be an date data type.',
        },
            nextRunAt: {
            fieldNameFormats: {
    "frontend": "nextRunAt",
    "backend": "next_run_at",
    "database": "next_run_at",
    "pretty": "Next Run At",
    "component": "NextRunAt",
    "kebab": "next-run-at",
    "sqlFunctionRef": "p_next_run_at",
    "RestAPI": "nextRunAt",
    "GraphQL": "nextRunAt",
    "custom": "nextRunAt"
} as const,
            name: 'nextRunAt',
            displayName: 'Next Run At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:next_run_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:nextRunAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: null,
            description: '"Next Run At" field for scrapeCycleTracker. This is an optional field. Your entry must be an date data type.',
        },
            isActive: {
            fieldNameFormats: {
    "frontend": "isActive",
    "backend": "is_active",
    "database": "is_active",
    "pretty": "Is Active",
    "component": "IsActive",
    "kebab": "is-active",
    "sqlFunctionRef": "p_is_active",
    "RestAPI": "isActive",
    "GraphQL": "isActive",
    "custom": "isActive"
} as const,
            name: 'isActive',
            displayName: 'Is Active',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:is_active',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:isActive',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: null,
            description: '"Is Active" field for scrapeCycleTracker. This is an optional field. Your entry must be an boolean data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapeCycleTracker. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeCycleTracker. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeCycleTracker. This is a required field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeCycleTracker. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_cycle_tracker:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeCycleTracker',
            databaseTable: 'scrape_cycle_tracker',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeCycleTracker. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeJobReference: {
    fieldNameFormats: {
    "frontend": "scrapeJobReference",
    "backend": "scrape_job_reference",
    "database": "ref_scrape_job",
    "pretty": "Scrape Job Reference",
    "component": "ScrapeJobReference",
    "kebab": "scrape-jobReference",
    "sqlFunctionRef": "p_ref_scrape_job",
    "RestAPI": "scrapeJobReference",
    "GraphQL": "scrapeJobReference",
    "custom": "scrapeJobReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_job:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeJob:id',
    name: 'scrapeJobReference',
    displayName: 'Scrape Job Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeJob'][]>,
    entityName: 'scrapeJob',
    databaseTable: 'scrape_job',
    relationshipMap: {scrape_job: 'id', scrape_path_pattern_cache_policy: 'id'},
},
            scrapePathPatternCachePolicyReference: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternCachePolicyReference",
    "backend": "scrape_path_pattern_cache_policy_reference",
    "database": "ref_scrape_path_pattern_cache_policy",
    "pretty": "Scrape Path Pattern Cache Policy Reference",
    "component": "ScrapePathPatternCachePolicyReference",
    "kebab": "scrape-path-pattern-cache-policyReference",
    "sqlFunctionRef": "p_ref_scrape_path_pattern_cache_policy",
    "RestAPI": "scrapePathPatternCachePolicyReference",
    "GraphQL": "scrapePathPatternCachePolicyReference",
    "custom": "scrapePathPatternCachePolicyReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_path_pattern_cache_policy:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternCachePolicy:id',
    name: 'scrapePathPatternCachePolicyReference',
    displayName: 'Scrape Path Pattern Cache Policy Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPatternCachePolicy'][]>,
    entityName: 'scrapePathPatternCachePolicy',
    databaseTable: 'scrape_path_pattern_cache_policy',
    relationshipMap: {scrape_job: 'id', scrape_path_pattern_cache_policy: 'id'},
},
            scrapeCycleRunInverse: {
    fieldNameFormats: {
    "frontend": "scrapeCycleRunInverse",
    "backend": "scrape_cycle_run_Inverse",
    "database": "ifk_scrape_cycle_run",
    "pretty": "Scrape Cycle Run Inverse",
    "component": "ScrapeCycleRunInverse",
    "kebab": "scrape-cycle-runInverse",
    "sqlFunctionRef": "p_ifk_scrape_cycle_run",
    "RestAPI": "scrapeCycleRunInverse",
    "GraphQL": "scrapeCycleRunInverse",
    "custom": "scrapeCycleRunInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_cycle_run',
    uniqueEntityId: 'supabase_automation_matrix:scrapeCycleRun',
    name: 'scrapeCycleRunInverse',
    displayName: 'Scrape Cycle Run Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeCycleRun'][]>,
    entityName: 'scrapeCycleRun',
    databaseTable: 'scrape_cycle_run',
},
            scrapeParsedPageInverse: {
    fieldNameFormats: {
    "frontend": "scrapeParsedPageInverse",
    "backend": "scrape_parsed_page_Inverse",
    "database": "ifk_scrape_parsed_page",
    "pretty": "Scrape Parsed Page Inverse",
    "component": "ScrapeParsedPageInverse",
    "kebab": "scrape-parsed-pageInverse",
    "sqlFunctionRef": "p_ifk_scrape_parsed_page",
    "RestAPI": "scrapeParsedPageInverse",
    "GraphQL": "scrapeParsedPageInverse",
    "custom": "scrapeParsedPageInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_parsed_page',
    uniqueEntityId: 'supabase_automation_matrix:scrapeParsedPage',
    name: 'scrapeParsedPageInverse',
    displayName: 'Scrape Parsed Page Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeParsedPage'][]>,
    entityName: 'scrapeParsedPage',
    databaseTable: 'scrape_parsed_page',
},
        },
        entityNameFormats: {
    "frontend": "scrapeCycleTracker",
    "backend": "scrape_cycle_tracker",
    "database": "scrape_cycle_tracker",
    "pretty": "Scrape Cycle Tracker",
    "component": "ScrapeCycleTracker",
    "kebab": "scrape-cycle-tracker",
    "sqlFunctionRef": "p_scrape_cycle_tracker",
    "RestAPI": "scrapeCycleTracker",
    "GraphQL": "scrapeCycleTracker",
    "custom": "scrapeCycleTracker"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_job_id', relatedTable: 'scrape_job', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_path_pattern_cache_policy_id', relatedTable: 'scrape_path_pattern_cache_policy', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_cycle_run', relatedColumn: 'scrape_cycle_tracker_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_parsed_page', relatedColumn: 'scrape_cycle_tracker_id', junctionTable: null }
        ],
    },
scrapeDomain: {
        schemaType: 'table' as const,
        entityName: 'scrapeDomain',
        displayName: 'Scrape Domain',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_domain',
        uniqueEntityId: 'supabase_automation_matrix:scrapeDomain',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'commonName', databaseFieldName: 'common_name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomain',
            databaseTable: 'scrape_domain',
            foreignKeyReference: null,
            description: '"Id" field for scrapeDomain. This is a required field. Your entry must be an uuid data type.',
        },
            url: {
            fieldNameFormats: {
    "frontend": "url",
    "backend": "url",
    "database": "url",
    "pretty": "Url",
    "component": "Url",
    "kebab": "url",
    "sqlFunctionRef": "p_url",
    "RestAPI": "url",
    "GraphQL": "url",
    "custom": "url"
} as const,
            name: 'url',
            displayName: 'Url',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain:url',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:url',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomain',
            databaseTable: 'scrape_domain',
            foreignKeyReference: null,
            description: '"Url" field for scrapeDomain. This is an optional field. Your entry must be an string data type.',
        },
            commonName: {
            fieldNameFormats: {
    "frontend": "commonName",
    "backend": "common_name",
    "database": "common_name",
    "pretty": "Common Name",
    "component": "CommonName",
    "kebab": "common-name",
    "sqlFunctionRef": "p_common_name",
    "RestAPI": "commonName",
    "GraphQL": "commonName",
    "custom": "commonName"
} as const,
            name: 'commonName',
            displayName: 'Common Name',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain:common_name',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:commonName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomain',
            databaseTable: 'scrape_domain',
            foreignKeyReference: null,
            description: '"Common Name" field for scrapeDomain. This is an optional field. Your entry must be an string data type.',
        },
            scrapeAllowed: {
            fieldNameFormats: {
    "frontend": "scrapeAllowed",
    "backend": "scrape_allowed",
    "database": "scrape_allowed",
    "pretty": "Scrape Allowed",
    "component": "ScrapeAllowed",
    "kebab": "scrape-allowed",
    "sqlFunctionRef": "p_scrape_allowed",
    "RestAPI": "scrapeAllowed",
    "GraphQL": "scrapeAllowed",
    "custom": "scrapeAllowed"
} as const,
            name: 'scrapeAllowed',
            displayName: 'Scrape Allowed',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain:scrape_allowed',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:scrapeAllowed',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomain',
            databaseTable: 'scrape_domain',
            foreignKeyReference: null,
            description: '"Scrape Allowed" field for scrapeDomain. This is an optional field. Your entry must be an boolean data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomain',
            databaseTable: 'scrape_domain',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeDomain. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomain',
            databaseTable: 'scrape_domain',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeDomain. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomain',
            databaseTable: 'scrape_domain',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeDomain. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomain',
            databaseTable: 'scrape_domain',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeDomain. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapePathPatternInverse: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternInverse",
    "backend": "scrape_path_pattern_Inverse",
    "database": "ifk_scrape_path_pattern",
    "pretty": "Scrape Path Pattern Inverse",
    "component": "ScrapePathPatternInverse",
    "kebab": "scrape-path-patternInverse",
    "sqlFunctionRef": "p_ifk_scrape_path_pattern",
    "RestAPI": "scrapePathPatternInverse",
    "GraphQL": "scrapePathPatternInverse",
    "custom": "scrapePathPatternInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_path_pattern',
    uniqueEntityId: 'supabase_automation_matrix:scrapePathPattern',
    name: 'scrapePathPatternInverse',
    displayName: 'Scrape Path Pattern Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPattern'][]>,
    entityName: 'scrapePathPattern',
    databaseTable: 'scrape_path_pattern',
},
            scrapeJobInverse: {
    fieldNameFormats: {
    "frontend": "scrapeJobInverse",
    "backend": "scrape_job_Inverse",
    "database": "ifk_scrape_job",
    "pretty": "Scrape Job Inverse",
    "component": "ScrapeJobInverse",
    "kebab": "scrape-jobInverse",
    "sqlFunctionRef": "p_ifk_scrape_job",
    "RestAPI": "scrapeJobInverse",
    "GraphQL": "scrapeJobInverse",
    "custom": "scrapeJobInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_job',
    uniqueEntityId: 'supabase_automation_matrix:scrapeJob',
    name: 'scrapeJobInverse',
    displayName: 'Scrape Job Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeJob'][]>,
    entityName: 'scrapeJob',
    databaseTable: 'scrape_job',
},
            scrapeDomainQuickScrapeSettingsInverse: {
    fieldNameFormats: {
    "frontend": "scrapeDomainQuickScrapeSettingsInverse",
    "backend": "scrape_domain_quick_scrape_settings_Inverse",
    "database": "ifk_scrape_domain_quick_scrape_settings",
    "pretty": "Scrape Domain Quick Scrape Settings Inverse",
    "component": "ScrapeDomainQuickScrapeSettingsInverse",
    "kebab": "scrape-domain-quick-scrape-settingsInverse",
    "sqlFunctionRef": "p_ifk_scrape_domain_quick_scrape_settings",
    "RestAPI": "scrapeDomainQuickScrapeSettingsInverse",
    "GraphQL": "scrapeDomainQuickScrapeSettingsInverse",
    "custom": "scrapeDomainQuickScrapeSettingsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_domain_quick_scrape_settings',
    uniqueEntityId: 'supabase_automation_matrix:scrapeDomainQuickScrapeSettings',
    name: 'scrapeDomainQuickScrapeSettingsInverse',
    displayName: 'Scrape Domain Quick Scrape Settings Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomainQuickScrapeSettings'][]>,
    entityName: 'scrapeDomainQuickScrapeSettings',
    databaseTable: 'scrape_domain_quick_scrape_settings',
},
            scrapeDomainDisallowedNotesInverse: {
    fieldNameFormats: {
    "frontend": "scrapeDomainDisallowedNotesInverse",
    "backend": "scrape_domain_disallowed_notes_Inverse",
    "database": "ifk_scrape_domain_disallowed_notes",
    "pretty": "Scrape Domain Disallowed Notes Inverse",
    "component": "ScrapeDomainDisallowedNotesInverse",
    "kebab": "scrape-domain-disallowed-notesInverse",
    "sqlFunctionRef": "p_ifk_scrape_domain_disallowed_notes",
    "RestAPI": "scrapeDomainDisallowedNotesInverse",
    "GraphQL": "scrapeDomainDisallowedNotesInverse",
    "custom": "scrapeDomainDisallowedNotesInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_domain_disallowed_notes',
    uniqueEntityId: 'supabase_automation_matrix:scrapeDomainDisallowedNotes',
    name: 'scrapeDomainDisallowedNotesInverse',
    displayName: 'Scrape Domain Disallowed Notes Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomainDisallowedNotes'][]>,
    entityName: 'scrapeDomainDisallowedNotes',
    databaseTable: 'scrape_domain_disallowed_notes',
},
            scrapeDomainRobotsTxtInverse: {
    fieldNameFormats: {
    "frontend": "scrapeDomainRobotsTxtInverse",
    "backend": "scrape_domain_robots_txt_Inverse",
    "database": "ifk_scrape_domain_robots_txt",
    "pretty": "Scrape Domain Robots Txt Inverse",
    "component": "ScrapeDomainRobotsTxtInverse",
    "kebab": "scrape-domain-robots-txtInverse",
    "sqlFunctionRef": "p_ifk_scrape_domain_robots_txt",
    "RestAPI": "scrapeDomainRobotsTxtInverse",
    "GraphQL": "scrapeDomainRobotsTxtInverse",
    "custom": "scrapeDomainRobotsTxtInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_domain_robots_txt',
    uniqueEntityId: 'supabase_automation_matrix:scrapeDomainRobotsTxt',
    name: 'scrapeDomainRobotsTxtInverse',
    displayName: 'Scrape Domain Robots Txt Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomainRobotsTxt'][]>,
    entityName: 'scrapeDomainRobotsTxt',
    databaseTable: 'scrape_domain_robots_txt',
},
            scrapeDomainNotesInverse: {
    fieldNameFormats: {
    "frontend": "scrapeDomainNotesInverse",
    "backend": "scrape_domain_notes_Inverse",
    "database": "ifk_scrape_domain_notes",
    "pretty": "Scrape Domain Notes Inverse",
    "component": "ScrapeDomainNotesInverse",
    "kebab": "scrape-domain-notesInverse",
    "sqlFunctionRef": "p_ifk_scrape_domain_notes",
    "RestAPI": "scrapeDomainNotesInverse",
    "GraphQL": "scrapeDomainNotesInverse",
    "custom": "scrapeDomainNotesInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_domain_notes',
    uniqueEntityId: 'supabase_automation_matrix:scrapeDomainNotes',
    name: 'scrapeDomainNotesInverse',
    displayName: 'Scrape Domain Notes Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomainNotes'][]>,
    entityName: 'scrapeDomainNotes',
    databaseTable: 'scrape_domain_notes',
},
            scrapeDomainSitemapInverse: {
    fieldNameFormats: {
    "frontend": "scrapeDomainSitemapInverse",
    "backend": "scrape_domain_sitemap_Inverse",
    "database": "ifk_scrape_domain_sitemap",
    "pretty": "Scrape Domain Sitemap Inverse",
    "component": "ScrapeDomainSitemapInverse",
    "kebab": "scrape-domain-sitemapInverse",
    "sqlFunctionRef": "p_ifk_scrape_domain_sitemap",
    "RestAPI": "scrapeDomainSitemapInverse",
    "GraphQL": "scrapeDomainSitemapInverse",
    "custom": "scrapeDomainSitemapInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_domain_sitemap',
    uniqueEntityId: 'supabase_automation_matrix:scrapeDomainSitemap',
    name: 'scrapeDomainSitemapInverse',
    displayName: 'Scrape Domain Sitemap Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomainSitemap'][]>,
    entityName: 'scrapeDomainSitemap',
    databaseTable: 'scrape_domain_sitemap',
},
            scrapeTaskInverse: {
    fieldNameFormats: {
    "frontend": "scrapeTaskInverse",
    "backend": "scrape_task_Inverse",
    "database": "ifk_scrape_task",
    "pretty": "Scrape Task Inverse",
    "component": "ScrapeTaskInverse",
    "kebab": "scrape-taskInverse",
    "sqlFunctionRef": "p_ifk_scrape_task",
    "RestAPI": "scrapeTaskInverse",
    "GraphQL": "scrapeTaskInverse",
    "custom": "scrapeTaskInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_task',
    uniqueEntityId: 'supabase_automation_matrix:scrapeTask',
    name: 'scrapeTaskInverse',
    displayName: 'Scrape Task Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeTask'][]>,
    entityName: 'scrapeTask',
    databaseTable: 'scrape_task',
},
            scrapeQuickFailureLogInverse: {
    fieldNameFormats: {
    "frontend": "scrapeQuickFailureLogInverse",
    "backend": "scrape_quick_failure_log_Inverse",
    "database": "ifk_scrape_quick_failure_log",
    "pretty": "Scrape Quick Failure Log Inverse",
    "component": "ScrapeQuickFailureLogInverse",
    "kebab": "scrape-quick-failure-logInverse",
    "sqlFunctionRef": "p_ifk_scrape_quick_failure_log",
    "RestAPI": "scrapeQuickFailureLogInverse",
    "GraphQL": "scrapeQuickFailureLogInverse",
    "custom": "scrapeQuickFailureLogInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_quick_failure_log',
    uniqueEntityId: 'supabase_automation_matrix:scrapeQuickFailureLog',
    name: 'scrapeQuickFailureLogInverse',
    displayName: 'Scrape Quick Failure Log Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeQuickFailureLog'][]>,
    entityName: 'scrapeQuickFailureLog',
    databaseTable: 'scrape_quick_failure_log',
},
        },
        entityNameFormats: {
    "frontend": "scrapeDomain",
    "backend": "scrape_domain",
    "database": "scrape_domain",
    "pretty": "Scrape Domain",
    "component": "ScrapeDomain",
    "kebab": "scrape-domain",
    "sqlFunctionRef": "p_scrape_domain",
    "RestAPI": "scrapeDomain",
    "GraphQL": "scrapeDomain",
    "custom": "scrapeDomain"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_path_pattern', relatedColumn: 'scrape_domain_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_job', relatedColumn: 'scrape_domain_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_domain_quick_scrape_settings', relatedColumn: 'scrape_domain_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_domain_disallowed_notes', relatedColumn: 'scrape_domain_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_domain_robots_txt', relatedColumn: 'scrape_domain_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_domain_notes', relatedColumn: 'scrape_domain_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_domain_sitemap', relatedColumn: 'scrape_domain_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_task', relatedColumn: 'scrape_domain_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_quick_failure_log', relatedColumn: 'scrape_domain_id', junctionTable: null }
        ],
    },
scrapeDomainDisallowedNotes: {
        schemaType: 'table' as const,
        entityName: 'scrapeDomainDisallowedNotes',
        displayName: 'Scrape Domain Disallowed Notes',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_domain_disallowed_notes',
        uniqueEntityId: 'supabase_automation_matrix:scrapeDomainDisallowedNotes',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_disallowed_notes:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainDisallowedNotes:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainDisallowedNotes',
            databaseTable: 'scrape_domain_disallowed_notes',
            foreignKeyReference: null,
            description: '"Id" field for scrapeDomainDisallowedNotes. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeDomainId: {
            fieldNameFormats: {
    "frontend": "scrapeDomainId",
    "backend": "scrape_domain_id",
    "database": "scrape_domain_id",
    "pretty": "Scrape Domain Id",
    "component": "ScrapeDomainId",
    "kebab": "scrape-domain-id",
    "sqlFunctionRef": "p_scrape_domain_id",
    "RestAPI": "scrapeDomainId",
    "GraphQL": "scrapeDomainId",
    "custom": "scrapeDomainId"
} as const,
            name: 'scrapeDomainId',
            displayName: 'Scrape Domain Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_disallowed_notes:scrape_domain_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainDisallowedNotes:scrapeDomainId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainDisallowedNotes',
            databaseTable: 'scrape_domain_disallowed_notes',
            foreignKeyReference: {"table": "scrape_domain", "column": "id", "entity": "scrapeDomain", "field": "id"},
            description: '"Scrape Domain Id" field for scrapeDomainDisallowedNotes. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapeDomain.',
        },
            notes: {
            fieldNameFormats: {
    "frontend": "notes",
    "backend": "notes",
    "database": "notes",
    "pretty": "Notes",
    "component": "Notes",
    "kebab": "notes",
    "sqlFunctionRef": "p_notes",
    "RestAPI": "notes",
    "GraphQL": "notes",
    "custom": "notes"
} as const,
            name: 'notes',
            displayName: 'Notes',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_disallowed_notes:notes',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainDisallowedNotes:notes',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainDisallowedNotes',
            databaseTable: 'scrape_domain_disallowed_notes',
            foreignKeyReference: null,
            description: '"Notes" field for scrapeDomainDisallowedNotes. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_disallowed_notes:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainDisallowedNotes:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomainDisallowedNotes',
            databaseTable: 'scrape_domain_disallowed_notes',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeDomainDisallowedNotes. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_disallowed_notes:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainDisallowedNotes:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomainDisallowedNotes',
            databaseTable: 'scrape_domain_disallowed_notes',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeDomainDisallowedNotes. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_disallowed_notes:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainDisallowedNotes:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainDisallowedNotes',
            databaseTable: 'scrape_domain_disallowed_notes',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeDomainDisallowedNotes. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_disallowed_notes:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainDisallowedNotes:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainDisallowedNotes',
            databaseTable: 'scrape_domain_disallowed_notes',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeDomainDisallowedNotes. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeDomainReference: {
    fieldNameFormats: {
    "frontend": "scrapeDomainReference",
    "backend": "scrape_domain_reference",
    "database": "ref_scrape_domain",
    "pretty": "Scrape Domain Reference",
    "component": "ScrapeDomainReference",
    "kebab": "scrape-domainReference",
    "sqlFunctionRef": "p_ref_scrape_domain",
    "RestAPI": "scrapeDomainReference",
    "GraphQL": "scrapeDomainReference",
    "custom": "scrapeDomainReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_domain:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:id',
    name: 'scrapeDomainReference',
    displayName: 'Scrape Domain Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomain'][]>,
    entityName: 'scrapeDomain',
    databaseTable: 'scrape_domain',
    relationshipMap: {scrape_domain: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "scrapeDomainDisallowedNotes",
    "backend": "scrape_domain_disallowed_notes",
    "database": "scrape_domain_disallowed_notes",
    "pretty": "Scrape Domain Disallowed Notes",
    "component": "ScrapeDomainDisallowedNotes",
    "kebab": "scrape-domain-disallowed-notes",
    "sqlFunctionRef": "p_scrape_domain_disallowed_notes",
    "RestAPI": "scrapeDomainDisallowedNotes",
    "GraphQL": "scrapeDomainDisallowedNotes",
    "custom": "scrapeDomainDisallowedNotes"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_domain_id', relatedTable: 'scrape_domain', relatedColumn: 'id', junctionTable: null }
        ],
    },
scrapeDomainNotes: {
        schemaType: 'table' as const,
        entityName: 'scrapeDomainNotes',
        displayName: 'Scrape Domain Notes',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_domain_notes',
        uniqueEntityId: 'supabase_automation_matrix:scrapeDomainNotes',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_notes:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainNotes:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainNotes',
            databaseTable: 'scrape_domain_notes',
            foreignKeyReference: null,
            description: '"Id" field for scrapeDomainNotes. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeDomainId: {
            fieldNameFormats: {
    "frontend": "scrapeDomainId",
    "backend": "scrape_domain_id",
    "database": "scrape_domain_id",
    "pretty": "Scrape Domain Id",
    "component": "ScrapeDomainId",
    "kebab": "scrape-domain-id",
    "sqlFunctionRef": "p_scrape_domain_id",
    "RestAPI": "scrapeDomainId",
    "GraphQL": "scrapeDomainId",
    "custom": "scrapeDomainId"
} as const,
            name: 'scrapeDomainId',
            displayName: 'Scrape Domain Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_notes:scrape_domain_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainNotes:scrapeDomainId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainNotes',
            databaseTable: 'scrape_domain_notes',
            foreignKeyReference: {"table": "scrape_domain", "column": "id", "entity": "scrapeDomain", "field": "id"},
            description: '"Scrape Domain Id" field for scrapeDomainNotes. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeDomain.',
        },
            notes: {
            fieldNameFormats: {
    "frontend": "notes",
    "backend": "notes",
    "database": "notes",
    "pretty": "Notes",
    "component": "Notes",
    "kebab": "notes",
    "sqlFunctionRef": "p_notes",
    "RestAPI": "notes",
    "GraphQL": "notes",
    "custom": "notes"
} as const,
            name: 'notes',
            displayName: 'Notes',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_notes:notes',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainNotes:notes',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainNotes',
            databaseTable: 'scrape_domain_notes',
            foreignKeyReference: null,
            description: '"Notes" field for scrapeDomainNotes. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_notes:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainNotes:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomainNotes',
            databaseTable: 'scrape_domain_notes',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeDomainNotes. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_notes:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainNotes:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomainNotes',
            databaseTable: 'scrape_domain_notes',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeDomainNotes. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_notes:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainNotes:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainNotes',
            databaseTable: 'scrape_domain_notes',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeDomainNotes. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_notes:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainNotes:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainNotes',
            databaseTable: 'scrape_domain_notes',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeDomainNotes. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeDomainReference: {
    fieldNameFormats: {
    "frontend": "scrapeDomainReference",
    "backend": "scrape_domain_reference",
    "database": "ref_scrape_domain",
    "pretty": "Scrape Domain Reference",
    "component": "ScrapeDomainReference",
    "kebab": "scrape-domainReference",
    "sqlFunctionRef": "p_ref_scrape_domain",
    "RestAPI": "scrapeDomainReference",
    "GraphQL": "scrapeDomainReference",
    "custom": "scrapeDomainReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_domain:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:id',
    name: 'scrapeDomainReference',
    displayName: 'Scrape Domain Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomain'][]>,
    entityName: 'scrapeDomain',
    databaseTable: 'scrape_domain',
    relationshipMap: {scrape_domain: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "scrapeDomainNotes",
    "backend": "scrape_domain_notes",
    "database": "scrape_domain_notes",
    "pretty": "Scrape Domain Notes",
    "component": "ScrapeDomainNotes",
    "kebab": "scrape-domain-notes",
    "sqlFunctionRef": "p_scrape_domain_notes",
    "RestAPI": "scrapeDomainNotes",
    "GraphQL": "scrapeDomainNotes",
    "custom": "scrapeDomainNotes"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_domain_id', relatedTable: 'scrape_domain', relatedColumn: 'id', junctionTable: null }
        ],
    },
scrapeDomainQuickScrapeSettings: {
        schemaType: 'table' as const,
        entityName: 'scrapeDomainQuickScrapeSettings',
        displayName: 'Scrape Domain Quick Scrape Settings',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_domain_quick_scrape_settings',
        uniqueEntityId: 'supabase_automation_matrix:scrapeDomainQuickScrapeSettings',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_quick_scrape_settings:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainQuickScrapeSettings:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainQuickScrapeSettings',
            databaseTable: 'scrape_domain_quick_scrape_settings',
            foreignKeyReference: null,
            description: '"Id" field for scrapeDomainQuickScrapeSettings. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeDomainId: {
            fieldNameFormats: {
    "frontend": "scrapeDomainId",
    "backend": "scrape_domain_id",
    "database": "scrape_domain_id",
    "pretty": "Scrape Domain Id",
    "component": "ScrapeDomainId",
    "kebab": "scrape-domain-id",
    "sqlFunctionRef": "p_scrape_domain_id",
    "RestAPI": "scrapeDomainId",
    "GraphQL": "scrapeDomainId",
    "custom": "scrapeDomainId"
} as const,
            name: 'scrapeDomainId',
            displayName: 'Scrape Domain Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_quick_scrape_settings:scrape_domain_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainQuickScrapeSettings:scrapeDomainId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainQuickScrapeSettings',
            databaseTable: 'scrape_domain_quick_scrape_settings',
            foreignKeyReference: {"table": "scrape_domain", "column": "id", "entity": "scrapeDomain", "field": "id"},
            description: '"Scrape Domain Id" field for scrapeDomainQuickScrapeSettings. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapeDomain.',
        },
            enabled: {
            fieldNameFormats: {
    "frontend": "enabled",
    "backend": "enabled",
    "database": "enabled",
    "pretty": "Enabled",
    "component": "Enabled",
    "kebab": "enabled",
    "sqlFunctionRef": "p_enabled",
    "RestAPI": "enabled",
    "GraphQL": "enabled",
    "custom": "enabled"
} as const,
            name: 'enabled',
            displayName: 'Enabled',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_quick_scrape_settings:enabled',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainQuickScrapeSettings:enabled',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainQuickScrapeSettings',
            databaseTable: 'scrape_domain_quick_scrape_settings',
            foreignKeyReference: null,
            description: '"Enabled" field for scrapeDomainQuickScrapeSettings. This is a required field. Your entry must be an boolean data type.',
        },
            proxyType: {
            fieldNameFormats: {
    "frontend": "proxyType",
    "backend": "proxy_type",
    "database": "proxy_type",
    "pretty": "Proxy Type",
    "component": "ProxyType",
    "kebab": "proxy-type",
    "sqlFunctionRef": "p_proxy_type",
    "RestAPI": "proxyType",
    "GraphQL": "proxyType",
    "custom": "proxyType"
} as const,
            name: 'proxyType',
            displayName: 'Proxy Type',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_quick_scrape_settings:proxy_type',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainQuickScrapeSettings:proxyType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "datacenter" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainQuickScrapeSettings',
            databaseTable: 'scrape_domain_quick_scrape_settings',
            foreignKeyReference: null,
            description: '"Proxy Type" field for scrapeDomainQuickScrapeSettings. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_quick_scrape_settings:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainQuickScrapeSettings:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomainQuickScrapeSettings',
            databaseTable: 'scrape_domain_quick_scrape_settings',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeDomainQuickScrapeSettings. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_quick_scrape_settings:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainQuickScrapeSettings:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomainQuickScrapeSettings',
            databaseTable: 'scrape_domain_quick_scrape_settings',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeDomainQuickScrapeSettings. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_quick_scrape_settings:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainQuickScrapeSettings:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainQuickScrapeSettings',
            databaseTable: 'scrape_domain_quick_scrape_settings',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeDomainQuickScrapeSettings. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_quick_scrape_settings:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainQuickScrapeSettings:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainQuickScrapeSettings',
            databaseTable: 'scrape_domain_quick_scrape_settings',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeDomainQuickScrapeSettings. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeDomainReference: {
    fieldNameFormats: {
    "frontend": "scrapeDomainReference",
    "backend": "scrape_domain_reference",
    "database": "ref_scrape_domain",
    "pretty": "Scrape Domain Reference",
    "component": "ScrapeDomainReference",
    "kebab": "scrape-domainReference",
    "sqlFunctionRef": "p_ref_scrape_domain",
    "RestAPI": "scrapeDomainReference",
    "GraphQL": "scrapeDomainReference",
    "custom": "scrapeDomainReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_domain:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:id',
    name: 'scrapeDomainReference',
    displayName: 'Scrape Domain Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomain'][]>,
    entityName: 'scrapeDomain',
    databaseTable: 'scrape_domain',
    relationshipMap: {scrape_domain: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "scrapeDomainQuickScrapeSettings",
    "backend": "scrape_domain_quick_scrape_settings",
    "database": "scrape_domain_quick_scrape_settings",
    "pretty": "Scrape Domain Quick Scrape Settings",
    "component": "ScrapeDomainQuickScrapeSettings",
    "kebab": "scrape-domain-quick-scrape-settings",
    "sqlFunctionRef": "p_scrape_domain_quick_scrape_settings",
    "RestAPI": "scrapeDomainQuickScrapeSettings",
    "GraphQL": "scrapeDomainQuickScrapeSettings",
    "custom": "scrapeDomainQuickScrapeSettings"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_domain_id', relatedTable: 'scrape_domain', relatedColumn: 'id', junctionTable: null }
        ],
    },
scrapeDomainRobotsTxt: {
        schemaType: 'table' as const,
        entityName: 'scrapeDomainRobotsTxt',
        displayName: 'Scrape Domain Robots Txt',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_domain_robots_txt',
        uniqueEntityId: 'supabase_automation_matrix:scrapeDomainRobotsTxt',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_robots_txt:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainRobotsTxt:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainRobotsTxt',
            databaseTable: 'scrape_domain_robots_txt',
            foreignKeyReference: null,
            description: '"Id" field for scrapeDomainRobotsTxt. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeDomainId: {
            fieldNameFormats: {
    "frontend": "scrapeDomainId",
    "backend": "scrape_domain_id",
    "database": "scrape_domain_id",
    "pretty": "Scrape Domain Id",
    "component": "ScrapeDomainId",
    "kebab": "scrape-domain-id",
    "sqlFunctionRef": "p_scrape_domain_id",
    "RestAPI": "scrapeDomainId",
    "GraphQL": "scrapeDomainId",
    "custom": "scrapeDomainId"
} as const,
            name: 'scrapeDomainId',
            displayName: 'Scrape Domain Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_robots_txt:scrape_domain_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainRobotsTxt:scrapeDomainId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainRobotsTxt',
            databaseTable: 'scrape_domain_robots_txt',
            foreignKeyReference: {"table": "scrape_domain", "column": "id", "entity": "scrapeDomain", "field": "id"},
            description: '"Scrape Domain Id" field for scrapeDomainRobotsTxt. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeDomain.',
        },
            robotsTxt: {
            fieldNameFormats: {
    "frontend": "robotsTxt",
    "backend": "robots_txt",
    "database": "robots_txt",
    "pretty": "Robots Txt",
    "component": "RobotsTxt",
    "kebab": "robots-txt",
    "sqlFunctionRef": "p_robots_txt",
    "RestAPI": "robotsTxt",
    "GraphQL": "robotsTxt",
    "custom": "robotsTxt"
} as const,
            name: 'robotsTxt',
            displayName: 'Robots Txt',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_robots_txt:robots_txt',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainRobotsTxt:robotsTxt',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainRobotsTxt',
            databaseTable: 'scrape_domain_robots_txt',
            foreignKeyReference: null,
            description: '"Robots Txt" field for scrapeDomainRobotsTxt. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_robots_txt:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainRobotsTxt:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomainRobotsTxt',
            databaseTable: 'scrape_domain_robots_txt',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeDomainRobotsTxt. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_robots_txt:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainRobotsTxt:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomainRobotsTxt',
            databaseTable: 'scrape_domain_robots_txt',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeDomainRobotsTxt. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_robots_txt:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainRobotsTxt:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainRobotsTxt',
            databaseTable: 'scrape_domain_robots_txt',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeDomainRobotsTxt. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_robots_txt:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainRobotsTxt:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainRobotsTxt',
            databaseTable: 'scrape_domain_robots_txt',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeDomainRobotsTxt. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeDomainReference: {
    fieldNameFormats: {
    "frontend": "scrapeDomainReference",
    "backend": "scrape_domain_reference",
    "database": "ref_scrape_domain",
    "pretty": "Scrape Domain Reference",
    "component": "ScrapeDomainReference",
    "kebab": "scrape-domainReference",
    "sqlFunctionRef": "p_ref_scrape_domain",
    "RestAPI": "scrapeDomainReference",
    "GraphQL": "scrapeDomainReference",
    "custom": "scrapeDomainReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_domain:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:id',
    name: 'scrapeDomainReference',
    displayName: 'Scrape Domain Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomain'][]>,
    entityName: 'scrapeDomain',
    databaseTable: 'scrape_domain',
    relationshipMap: {scrape_domain: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "scrapeDomainRobotsTxt",
    "backend": "scrape_domain_robots_txt",
    "database": "scrape_domain_robots_txt",
    "pretty": "Scrape Domain Robots Txt",
    "component": "ScrapeDomainRobotsTxt",
    "kebab": "scrape-domain-robots-txt",
    "sqlFunctionRef": "p_scrape_domain_robots_txt",
    "RestAPI": "scrapeDomainRobotsTxt",
    "GraphQL": "scrapeDomainRobotsTxt",
    "custom": "scrapeDomainRobotsTxt"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_domain_id', relatedTable: 'scrape_domain', relatedColumn: 'id', junctionTable: null }
        ],
    },
scrapeDomainSitemap: {
        schemaType: 'table' as const,
        entityName: 'scrapeDomainSitemap',
        displayName: 'Scrape Domain Sitemap',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_domain_sitemap',
        uniqueEntityId: 'supabase_automation_matrix:scrapeDomainSitemap',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_sitemap:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainSitemap:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainSitemap',
            databaseTable: 'scrape_domain_sitemap',
            foreignKeyReference: null,
            description: '"Id" field for scrapeDomainSitemap. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeDomainId: {
            fieldNameFormats: {
    "frontend": "scrapeDomainId",
    "backend": "scrape_domain_id",
    "database": "scrape_domain_id",
    "pretty": "Scrape Domain Id",
    "component": "ScrapeDomainId",
    "kebab": "scrape-domain-id",
    "sqlFunctionRef": "p_scrape_domain_id",
    "RestAPI": "scrapeDomainId",
    "GraphQL": "scrapeDomainId",
    "custom": "scrapeDomainId"
} as const,
            name: 'scrapeDomainId',
            displayName: 'Scrape Domain Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_sitemap:scrape_domain_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainSitemap:scrapeDomainId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainSitemap',
            databaseTable: 'scrape_domain_sitemap',
            foreignKeyReference: {"table": "scrape_domain", "column": "id", "entity": "scrapeDomain", "field": "id"},
            description: '"Scrape Domain Id" field for scrapeDomainSitemap. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeDomain.',
        },
            sitemap: {
            fieldNameFormats: {
    "frontend": "sitemap",
    "backend": "sitemap",
    "database": "sitemap",
    "pretty": "Sitemap",
    "component": "Sitemap",
    "kebab": "sitemap",
    "sqlFunctionRef": "p_sitemap",
    "RestAPI": "sitemap",
    "GraphQL": "sitemap",
    "custom": "sitemap"
} as const,
            name: 'sitemap',
            displayName: 'Sitemap',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_sitemap:sitemap',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainSitemap:sitemap',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeDomainSitemap',
            databaseTable: 'scrape_domain_sitemap',
            foreignKeyReference: null,
            description: '"Sitemap" field for scrapeDomainSitemap. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_sitemap:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainSitemap:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomainSitemap',
            databaseTable: 'scrape_domain_sitemap',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeDomainSitemap. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_sitemap:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainSitemap:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeDomainSitemap',
            databaseTable: 'scrape_domain_sitemap',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeDomainSitemap. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_sitemap:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainSitemap:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainSitemap',
            databaseTable: 'scrape_domain_sitemap',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeDomainSitemap. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_domain_sitemap:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeDomainSitemap:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeDomainSitemap',
            databaseTable: 'scrape_domain_sitemap',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeDomainSitemap. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeDomainReference: {
    fieldNameFormats: {
    "frontend": "scrapeDomainReference",
    "backend": "scrape_domain_reference",
    "database": "ref_scrape_domain",
    "pretty": "Scrape Domain Reference",
    "component": "ScrapeDomainReference",
    "kebab": "scrape-domainReference",
    "sqlFunctionRef": "p_ref_scrape_domain",
    "RestAPI": "scrapeDomainReference",
    "GraphQL": "scrapeDomainReference",
    "custom": "scrapeDomainReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_domain:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:id',
    name: 'scrapeDomainReference',
    displayName: 'Scrape Domain Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomain'][]>,
    entityName: 'scrapeDomain',
    databaseTable: 'scrape_domain',
    relationshipMap: {scrape_domain: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "scrapeDomainSitemap",
    "backend": "scrape_domain_sitemap",
    "database": "scrape_domain_sitemap",
    "pretty": "Scrape Domain Sitemap",
    "component": "ScrapeDomainSitemap",
    "kebab": "scrape-domain-sitemap",
    "sqlFunctionRef": "p_scrape_domain_sitemap",
    "RestAPI": "scrapeDomainSitemap",
    "GraphQL": "scrapeDomainSitemap",
    "custom": "scrapeDomainSitemap"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_domain_id', relatedTable: 'scrape_domain', relatedColumn: 'id', junctionTable: null }
        ],
    },
scrapeJob: {
        schemaType: 'table' as const,
        entityName: 'scrapeJob',
        displayName: 'Scrape Job',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_job',
        uniqueEntityId: 'supabase_automation_matrix:scrapeJob',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Id" field for scrapeJob. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeDomainId: {
            fieldNameFormats: {
    "frontend": "scrapeDomainId",
    "backend": "scrape_domain_id",
    "database": "scrape_domain_id",
    "pretty": "Scrape Domain Id",
    "component": "ScrapeDomainId",
    "kebab": "scrape-domain-id",
    "sqlFunctionRef": "p_scrape_domain_id",
    "RestAPI": "scrapeDomainId",
    "GraphQL": "scrapeDomainId",
    "custom": "scrapeDomainId"
} as const,
            name: 'scrapeDomainId',
            displayName: 'Scrape Domain Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:scrape_domain_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:scrapeDomainId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: {"table": "scrape_domain", "column": "id", "entity": "scrapeDomain", "field": "id"},
            description: '"Scrape Domain Id" field for scrapeJob. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapeDomain.',
        },
            startUrls: {
            fieldNameFormats: {
    "frontend": "startUrls",
    "backend": "start_urls",
    "database": "start_urls",
    "pretty": "Start Urls",
    "component": "StartUrls",
    "kebab": "start-urls",
    "sqlFunctionRef": "p_start_urls",
    "RestAPI": "startUrls",
    "GraphQL": "startUrls",
    "custom": "startUrls"
} as const,
            name: 'startUrls',
            displayName: 'Start Urls',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:start_urls',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:startUrls',

            dataType: 'string[]' as const,
            isRequired: true,
            maxLength: null,
            isArray: true,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXT_ARRAY' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 3,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string[]>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Start Urls" field for scrapeJob. This is a required field. Your entry must be an string[] data type. You can enter one or more entries.',
        },
            scrapeStatus: {
            fieldNameFormats: {
    "frontend": "scrapeStatus",
    "backend": "scrape_status",
    "database": "scrape_status",
    "pretty": "Scrape Status",
    "component": "ScrapeStatus",
    "kebab": "scrape-status",
    "sqlFunctionRef": "p_scrape_status",
    "RestAPI": "scrapeStatus",
    "GraphQL": "scrapeStatus",
    "custom": "scrapeStatus"
} as const,
            name: 'scrapeStatus',
            displayName: 'Scrape Status',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:scrape_status',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:scrapeStatus',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Scrape Status" field for scrapeJob. This is a required field. Your entry must be an string data type.',
        },
            parseStatus: {
            fieldNameFormats: {
    "frontend": "parseStatus",
    "backend": "parse_status",
    "database": "parse_status",
    "pretty": "Parse Status",
    "component": "ParseStatus",
    "kebab": "parse-status",
    "sqlFunctionRef": "p_parse_status",
    "RestAPI": "parseStatus",
    "GraphQL": "parseStatus",
    "custom": "parseStatus"
} as const,
            name: 'parseStatus',
            displayName: 'Parse Status',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:parse_status',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:parseStatus',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Parse Status" field for scrapeJob. This is a required field. Your entry must be an string data type.',
        },
            attemptLimit: {
            fieldNameFormats: {
    "frontend": "attemptLimit",
    "backend": "attempt_limit",
    "database": "attempt_limit",
    "pretty": "Attempt Limit",
    "component": "AttemptLimit",
    "kebab": "attempt-limit",
    "sqlFunctionRef": "p_attempt_limit",
    "RestAPI": "attemptLimit",
    "GraphQL": "attemptLimit",
    "custom": "attemptLimit"
} as const,
            name: 'attemptLimit',
            displayName: 'Attempt Limit',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:attempt_limit',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:attemptLimit',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "3" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Attempt Limit" field for scrapeJob. This is a required field. Your entry must be an number data type.',
        },
            startedAt: {
            fieldNameFormats: {
    "frontend": "startedAt",
    "backend": "started_at",
    "database": "started_at",
    "pretty": "Started At",
    "component": "StartedAt",
    "kebab": "started-at",
    "sqlFunctionRef": "p_started_at",
    "RestAPI": "startedAt",
    "GraphQL": "startedAt",
    "custom": "startedAt"
} as const,
            name: 'startedAt',
            displayName: 'Started At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:started_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:startedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Started At" field for scrapeJob. This is an optional field. Your entry must be an date data type.',
        },
            finishedAt: {
            fieldNameFormats: {
    "frontend": "finishedAt",
    "backend": "finished_at",
    "database": "finished_at",
    "pretty": "Finished At",
    "component": "FinishedAt",
    "kebab": "finished-at",
    "sqlFunctionRef": "p_finished_at",
    "RestAPI": "finishedAt",
    "GraphQL": "finishedAt",
    "custom": "finishedAt"
} as const,
            name: 'finishedAt',
            displayName: 'Finished At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:finished_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:finishedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Finished At" field for scrapeJob. This is an optional field. Your entry must be an date data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:name',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:name',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Name" field for scrapeJob. This is an optional field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:description',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Description" field for scrapeJob. This is an optional field. Your entry must be an string data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapeJob. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeJob. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeJob. This is a required field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeJob. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_job:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeJob:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeJob',
            databaseTable: 'scrape_job',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeJob. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeDomainReference: {
    fieldNameFormats: {
    "frontend": "scrapeDomainReference",
    "backend": "scrape_domain_reference",
    "database": "ref_scrape_domain",
    "pretty": "Scrape Domain Reference",
    "component": "ScrapeDomainReference",
    "kebab": "scrape-domainReference",
    "sqlFunctionRef": "p_ref_scrape_domain",
    "RestAPI": "scrapeDomainReference",
    "GraphQL": "scrapeDomainReference",
    "custom": "scrapeDomainReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_domain:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:id',
    name: 'scrapeDomainReference',
    displayName: 'Scrape Domain Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomain'][]>,
    entityName: 'scrapeDomain',
    databaseTable: 'scrape_domain',
    relationshipMap: {scrape_domain: 'id'},
},
            scrapeCycleTrackerInverse: {
    fieldNameFormats: {
    "frontend": "scrapeCycleTrackerInverse",
    "backend": "scrape_cycle_tracker_Inverse",
    "database": "ifk_scrape_cycle_tracker",
    "pretty": "Scrape Cycle Tracker Inverse",
    "component": "ScrapeCycleTrackerInverse",
    "kebab": "scrape-cycle-trackerInverse",
    "sqlFunctionRef": "p_ifk_scrape_cycle_tracker",
    "RestAPI": "scrapeCycleTrackerInverse",
    "GraphQL": "scrapeCycleTrackerInverse",
    "custom": "scrapeCycleTrackerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_cycle_tracker',
    uniqueEntityId: 'supabase_automation_matrix:scrapeCycleTracker',
    name: 'scrapeCycleTrackerInverse',
    displayName: 'Scrape Cycle Tracker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeCycleTracker'][]>,
    entityName: 'scrapeCycleTracker',
    databaseTable: 'scrape_cycle_tracker',
},
            scrapeTaskInverse: {
    fieldNameFormats: {
    "frontend": "scrapeTaskInverse",
    "backend": "scrape_task_Inverse",
    "database": "ifk_scrape_task",
    "pretty": "Scrape Task Inverse",
    "component": "ScrapeTaskInverse",
    "kebab": "scrape-taskInverse",
    "sqlFunctionRef": "p_ifk_scrape_task",
    "RestAPI": "scrapeTaskInverse",
    "GraphQL": "scrapeTaskInverse",
    "custom": "scrapeTaskInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_task',
    uniqueEntityId: 'supabase_automation_matrix:scrapeTask',
    name: 'scrapeTaskInverse',
    displayName: 'Scrape Task Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeTask'][]>,
    entityName: 'scrapeTask',
    databaseTable: 'scrape_task',
},
        },
        entityNameFormats: {
    "frontend": "scrapeJob",
    "backend": "scrape_job",
    "database": "scrape_job",
    "pretty": "Scrape Job",
    "component": "ScrapeJob",
    "kebab": "scrape-job",
    "sqlFunctionRef": "p_scrape_job",
    "RestAPI": "scrapeJob",
    "GraphQL": "scrapeJob",
    "custom": "scrapeJob"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_domain_id', relatedTable: 'scrape_domain', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_cycle_tracker', relatedColumn: 'scrape_job_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_task', relatedColumn: 'scrape_job_id', junctionTable: null }
        ],
    },
scrapeOverride: {
        schemaType: 'table' as const,
        entityName: 'scrapeOverride',
        displayName: 'Scrape Override',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_override',
        uniqueEntityId: 'supabase_automation_matrix:scrapeOverride',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: null,
            description: '"Id" field for scrapeOverride. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:name',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: null,
            description: '"Name" field for scrapeOverride. This is a required field. Your entry must be an string data type.',
        },
            configType: {
            fieldNameFormats: {
    "frontend": "configType",
    "backend": "config_type",
    "database": "config_type",
    "pretty": "Config Type",
    "component": "ConfigType",
    "kebab": "config-type",
    "sqlFunctionRef": "p_config_type",
    "RestAPI": "configType",
    "GraphQL": "configType",
    "custom": "configType"
} as const,
            name: 'configType',
            displayName: 'Config Type',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:config_type',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:configType',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: null,
            description: '"Config Type" field for scrapeOverride. This is a required field. Your entry must be an string data type.',
        },
            selectorType: {
            fieldNameFormats: {
    "frontend": "selectorType",
    "backend": "selector_type",
    "database": "selector_type",
    "pretty": "Selector Type",
    "component": "SelectorType",
    "kebab": "selector-type",
    "sqlFunctionRef": "p_selector_type",
    "RestAPI": "selectorType",
    "GraphQL": "selectorType",
    "custom": "selectorType"
} as const,
            name: 'selectorType',
            displayName: 'Selector Type',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:selector_type',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:selectorType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: null,
            description: '"Selector Type" field for scrapeOverride. This is an optional field. Your entry must be an string data type.',
        },
            matchType: {
            fieldNameFormats: {
    "frontend": "matchType",
    "backend": "match_type",
    "database": "match_type",
    "pretty": "Match Type",
    "component": "MatchType",
    "kebab": "match-type",
    "sqlFunctionRef": "p_match_type",
    "RestAPI": "matchType",
    "GraphQL": "matchType",
    "custom": "matchType"
} as const,
            name: 'matchType',
            displayName: 'Match Type',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:match_type',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:matchType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: null,
            description: '"Match Type" field for scrapeOverride. This is an optional field. Your entry must be an string data type.',
        },
            action: {
            fieldNameFormats: {
    "frontend": "action",
    "backend": "action",
    "database": "action",
    "pretty": "Action",
    "component": "Action",
    "kebab": "action",
    "sqlFunctionRef": "p_action",
    "RestAPI": "action",
    "GraphQL": "action",
    "custom": "action"
} as const,
            name: 'action',
            displayName: 'Action',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:action',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:action',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: null,
            description: '"Action" field for scrapeOverride. This is a required field. Your entry must be an string data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapeOverride. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeOverride. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeOverride. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeOverride. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeOverride',
            databaseTable: 'scrape_override',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeOverride. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeOverrideValueInverse: {
    fieldNameFormats: {
    "frontend": "scrapeOverrideValueInverse",
    "backend": "scrape_override_value_Inverse",
    "database": "ifk_scrape_override_value",
    "pretty": "Scrape Override Value Inverse",
    "component": "ScrapeOverrideValueInverse",
    "kebab": "scrape-override-valueInverse",
    "sqlFunctionRef": "p_ifk_scrape_override_value",
    "RestAPI": "scrapeOverrideValueInverse",
    "GraphQL": "scrapeOverrideValueInverse",
    "custom": "scrapeOverrideValueInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_override_value',
    uniqueEntityId: 'supabase_automation_matrix:scrapeOverrideValue',
    name: 'scrapeOverrideValueInverse',
    displayName: 'Scrape Override Value Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeOverrideValue'][]>,
    entityName: 'scrapeOverrideValue',
    databaseTable: 'scrape_override_value',
},
            scrapePathPatternOverrideInverse: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternOverrideInverse",
    "backend": "scrape_path_pattern_override_Inverse",
    "database": "ifk_scrape_path_pattern_override",
    "pretty": "Scrape Path Pattern Override Inverse",
    "component": "ScrapePathPatternOverrideInverse",
    "kebab": "scrape-path-pattern-overrideInverse",
    "sqlFunctionRef": "p_ifk_scrape_path_pattern_override",
    "RestAPI": "scrapePathPatternOverrideInverse",
    "GraphQL": "scrapePathPatternOverrideInverse",
    "custom": "scrapePathPatternOverrideInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_path_pattern_override',
    uniqueEntityId: 'supabase_automation_matrix:scrapePathPatternOverride',
    name: 'scrapePathPatternOverrideInverse',
    displayName: 'Scrape Path Pattern Override Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPatternOverride'][]>,
    entityName: 'scrapePathPatternOverride',
    databaseTable: 'scrape_path_pattern_override',
},
        },
        entityNameFormats: {
    "frontend": "scrapeOverride",
    "backend": "scrape_override",
    "database": "scrape_override",
    "pretty": "Scrape Override",
    "component": "ScrapeOverride",
    "kebab": "scrape-override",
    "sqlFunctionRef": "p_scrape_override",
    "RestAPI": "scrapeOverride",
    "GraphQL": "scrapeOverride",
    "custom": "scrapeOverride"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_override_value', relatedColumn: 'scrape_override_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_path_pattern_override', relatedColumn: 'scrape_override_id', junctionTable: null }
        ],
    },
scrapeOverrideValue: {
        schemaType: 'table' as const,
        entityName: 'scrapeOverrideValue',
        displayName: 'Scrape Override Value',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_override_value',
        uniqueEntityId: 'supabase_automation_matrix:scrapeOverrideValue',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override_value:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverrideValue:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverrideValue',
            databaseTable: 'scrape_override_value',
            foreignKeyReference: null,
            description: '"Id" field for scrapeOverrideValue. This is a required field. Your entry must be an uuid data type.',
        },
            value: {
            fieldNameFormats: {
    "frontend": "value",
    "backend": "value",
    "database": "value",
    "pretty": "Value",
    "component": "Value",
    "kebab": "value",
    "sqlFunctionRef": "p_value",
    "RestAPI": "value",
    "GraphQL": "value",
    "custom": "value"
} as const,
            name: 'value',
            displayName: 'Value',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override_value:value',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverrideValue:value',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverrideValue',
            databaseTable: 'scrape_override_value',
            foreignKeyReference: null,
            description: '"Value" field for scrapeOverrideValue. This is a required field. Your entry must be an string data type.',
        },
            scrapeOverrideId: {
            fieldNameFormats: {
    "frontend": "scrapeOverrideId",
    "backend": "scrape_override_id",
    "database": "scrape_override_id",
    "pretty": "Scrape Override Id",
    "component": "ScrapeOverrideId",
    "kebab": "scrape-override-id",
    "sqlFunctionRef": "p_scrape_override_id",
    "RestAPI": "scrapeOverrideId",
    "GraphQL": "scrapeOverrideId",
    "custom": "scrapeOverrideId"
} as const,
            name: 'scrapeOverrideId',
            displayName: 'Scrape Override Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override_value:scrape_override_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverrideValue:scrapeOverrideId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverrideValue',
            databaseTable: 'scrape_override_value',
            foreignKeyReference: {"table": "scrape_override", "column": "id", "entity": "scrapeOverride", "field": "id"},
            description: '"Scrape Override Id" field for scrapeOverrideValue. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapeOverride.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override_value:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverrideValue:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeOverrideValue',
            databaseTable: 'scrape_override_value',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapeOverrideValue. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override_value:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverrideValue:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeOverrideValue',
            databaseTable: 'scrape_override_value',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeOverrideValue. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override_value:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverrideValue:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeOverrideValue',
            databaseTable: 'scrape_override_value',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeOverrideValue. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override_value:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverrideValue:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeOverrideValue',
            databaseTable: 'scrape_override_value',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeOverrideValue. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_override_value:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeOverrideValue:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeOverrideValue',
            databaseTable: 'scrape_override_value',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeOverrideValue. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeOverrideReference: {
    fieldNameFormats: {
    "frontend": "scrapeOverrideReference",
    "backend": "scrape_override_reference",
    "database": "ref_scrape_override",
    "pretty": "Scrape Override Reference",
    "component": "ScrapeOverrideReference",
    "kebab": "scrape-overrideReference",
    "sqlFunctionRef": "p_ref_scrape_override",
    "RestAPI": "scrapeOverrideReference",
    "GraphQL": "scrapeOverrideReference",
    "custom": "scrapeOverrideReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_override:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:id',
    name: 'scrapeOverrideReference',
    displayName: 'Scrape Override Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeOverride'][]>,
    entityName: 'scrapeOverride',
    databaseTable: 'scrape_override',
    relationshipMap: {scrape_override: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "scrapeOverrideValue",
    "backend": "scrape_override_value",
    "database": "scrape_override_value",
    "pretty": "Scrape Override Value",
    "component": "ScrapeOverrideValue",
    "kebab": "scrape-override-value",
    "sqlFunctionRef": "p_scrape_override_value",
    "RestAPI": "scrapeOverrideValue",
    "GraphQL": "scrapeOverrideValue",
    "custom": "scrapeOverrideValue"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_override_id', relatedTable: 'scrape_override', relatedColumn: 'id', junctionTable: null }
        ],
    },
scrapeParsedPage: {
        schemaType: 'table' as const,
        entityName: 'scrapeParsedPage',
        displayName: 'Scrape Parsed Page',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_parsed_page',
        uniqueEntityId: 'supabase_automation_matrix:scrapeParsedPage',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'pageName', databaseFieldName: 'page_name' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Id" field for scrapeParsedPage. This is a required field. Your entry must be an uuid data type.',
        },
            pageName: {
            fieldNameFormats: {
    "frontend": "pageName",
    "backend": "page_name",
    "database": "page_name",
    "pretty": "Page Name",
    "component": "PageName",
    "kebab": "page-name",
    "sqlFunctionRef": "p_page_name",
    "RestAPI": "pageName",
    "GraphQL": "pageName",
    "custom": "pageName"
} as const,
            name: 'pageName',
            displayName: 'Page Name',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:page_name',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:pageName',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Page Name" field for scrapeParsedPage. This is a required field. Your entry must be an string data type.',
        },
            validity: {
            fieldNameFormats: {
    "frontend": "validity",
    "backend": "validity",
    "database": "validity",
    "pretty": "Validity",
    "component": "Validity",
    "kebab": "validity",
    "sqlFunctionRef": "p_validity",
    "RestAPI": "validity",
    "GraphQL": "validity",
    "custom": "validity"
} as const,
            name: 'validity',
            displayName: 'Validity',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:validity',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:validity',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Validity" field for scrapeParsedPage. This is a required field. Your entry must be an string data type.',
        },
            remotePath: {
            fieldNameFormats: {
    "frontend": "remotePath",
    "backend": "remote_path",
    "database": "remote_path",
    "pretty": "Remote Path",
    "component": "RemotePath",
    "kebab": "remote-path",
    "sqlFunctionRef": "p_remote_path",
    "RestAPI": "remotePath",
    "GraphQL": "remotePath",
    "custom": "remotePath"
} as const,
            name: 'remotePath',
            displayName: 'Remote Path',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:remote_path',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:remotePath',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Remote Path" field for scrapeParsedPage. This is an optional field. Your entry must be an string data type.',
        },
            localPath: {
            fieldNameFormats: {
    "frontend": "localPath",
    "backend": "local_path",
    "database": "local_path",
    "pretty": "Local Path",
    "component": "LocalPath",
    "kebab": "local-path",
    "sqlFunctionRef": "p_local_path",
    "RestAPI": "localPath",
    "GraphQL": "localPath",
    "custom": "localPath"
} as const,
            name: 'localPath',
            displayName: 'Local Path',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:local_path',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:localPath',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Local Path" field for scrapeParsedPage. This is an optional field. Your entry must be an string data type.',
        },
            scrapePathPatternCachePolicyId: {
            fieldNameFormats: {
    "frontend": "scrapePathPatternCachePolicyId",
    "backend": "scrape_path_pattern_cache_policy_id",
    "database": "scrape_path_pattern_cache_policy_id",
    "pretty": "Scrape Path Pattern Cache Policy Id",
    "component": "ScrapePathPatternCachePolicyId",
    "kebab": "scrape-path-pattern-cache-policy-id",
    "sqlFunctionRef": "p_scrape_path_pattern_cache_policy_id",
    "RestAPI": "scrapePathPatternCachePolicyId",
    "GraphQL": "scrapePathPatternCachePolicyId",
    "custom": "scrapePathPatternCachePolicyId"
} as const,
            name: 'scrapePathPatternCachePolicyId',
            displayName: 'Scrape Path Pattern Cache Policy Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:scrape_path_pattern_cache_policy_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:scrapePathPatternCachePolicyId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: {"table": "scrape_path_pattern_cache_policy", "column": "id", "entity": "scrapePathPatternCachePolicy", "field": "id"},
            description: '"Scrape Path Pattern Cache Policy Id" field for scrapeParsedPage. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapePathPatternCachePolicy.',
        },
            scrapeTaskId: {
            fieldNameFormats: {
    "frontend": "scrapeTaskId",
    "backend": "scrape_task_id",
    "database": "scrape_task_id",
    "pretty": "Scrape Task Id",
    "component": "ScrapeTaskId",
    "kebab": "scrape-task-id",
    "sqlFunctionRef": "p_scrape_task_id",
    "RestAPI": "scrapeTaskId",
    "GraphQL": "scrapeTaskId",
    "custom": "scrapeTaskId"
} as const,
            name: 'scrapeTaskId',
            displayName: 'Scrape Task Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:scrape_task_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:scrapeTaskId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: {"table": "scrape_task", "column": "id", "entity": "scrapeTask", "field": "id"},
            description: '"Scrape Task Id" field for scrapeParsedPage. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeTask.',
        },
            scrapeTaskResponseId: {
            fieldNameFormats: {
    "frontend": "scrapeTaskResponseId",
    "backend": "scrape_task_response_id",
    "database": "scrape_task_response_id",
    "pretty": "Scrape Task Response Id",
    "component": "ScrapeTaskResponseId",
    "kebab": "scrape-task-response-id",
    "sqlFunctionRef": "p_scrape_task_response_id",
    "RestAPI": "scrapeTaskResponseId",
    "GraphQL": "scrapeTaskResponseId",
    "custom": "scrapeTaskResponseId"
} as const,
            name: 'scrapeTaskResponseId',
            displayName: 'Scrape Task Response Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:scrape_task_response_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:scrapeTaskResponseId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: {"table": "scrape_task_response", "column": "id", "entity": "scrapeTaskResponse", "field": "id"},
            description: '"Scrape Task Response Id" field for scrapeParsedPage. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeTaskResponse.',
        },
            scrapeCycleRunId: {
            fieldNameFormats: {
    "frontend": "scrapeCycleRunId",
    "backend": "scrape_cycle_run_id",
    "database": "scrape_cycle_run_id",
    "pretty": "Scrape Cycle Run Id",
    "component": "ScrapeCycleRunId",
    "kebab": "scrape-cycle-run-id",
    "sqlFunctionRef": "p_scrape_cycle_run_id",
    "RestAPI": "scrapeCycleRunId",
    "GraphQL": "scrapeCycleRunId",
    "custom": "scrapeCycleRunId"
} as const,
            name: 'scrapeCycleRunId',
            displayName: 'Scrape Cycle Run Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:scrape_cycle_run_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:scrapeCycleRunId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: {"table": "scrape_cycle_run", "column": "id", "entity": "scrapeCycleRun", "field": "id"},
            description: '"Scrape Cycle Run Id" field for scrapeParsedPage. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeCycleRun.',
        },
            scrapeCycleTrackerId: {
            fieldNameFormats: {
    "frontend": "scrapeCycleTrackerId",
    "backend": "scrape_cycle_tracker_id",
    "database": "scrape_cycle_tracker_id",
    "pretty": "Scrape Cycle Tracker Id",
    "component": "ScrapeCycleTrackerId",
    "kebab": "scrape-cycle-tracker-id",
    "sqlFunctionRef": "p_scrape_cycle_tracker_id",
    "RestAPI": "scrapeCycleTrackerId",
    "GraphQL": "scrapeCycleTrackerId",
    "custom": "scrapeCycleTrackerId"
} as const,
            name: 'scrapeCycleTrackerId',
            displayName: 'Scrape Cycle Tracker Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:scrape_cycle_tracker_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:scrapeCycleTrackerId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: {"table": "scrape_cycle_tracker", "column": "id", "entity": "scrapeCycleTracker", "field": "id"},
            description: '"Scrape Cycle Tracker Id" field for scrapeParsedPage. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeCycleTracker.',
        },
            scrapeConfigurationId: {
            fieldNameFormats: {
    "frontend": "scrapeConfigurationId",
    "backend": "scrape_configuration_id",
    "database": "scrape_configuration_id",
    "pretty": "Scrape Configuration Id",
    "component": "ScrapeConfigurationId",
    "kebab": "scrape-configuration-id",
    "sqlFunctionRef": "p_scrape_configuration_id",
    "RestAPI": "scrapeConfigurationId",
    "GraphQL": "scrapeConfigurationId",
    "custom": "scrapeConfigurationId"
} as const,
            name: 'scrapeConfigurationId',
            displayName: 'Scrape Configuration Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:scrape_configuration_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:scrapeConfigurationId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: {"table": "scrape_configuration", "column": "id", "entity": "scrapeConfiguration", "field": "id"},
            description: '"Scrape Configuration Id" field for scrapeParsedPage. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeConfiguration.',
        },
            scrapePathPatternOverrideId: {
            fieldNameFormats: {
    "frontend": "scrapePathPatternOverrideId",
    "backend": "scrape_path_pattern_override_id",
    "database": "scrape_path_pattern_override_id",
    "pretty": "Scrape Path Pattern Override Id",
    "component": "ScrapePathPatternOverrideId",
    "kebab": "scrape-path-pattern-override-id",
    "sqlFunctionRef": "p_scrape_path_pattern_override_id",
    "RestAPI": "scrapePathPatternOverrideId",
    "GraphQL": "scrapePathPatternOverrideId",
    "custom": "scrapePathPatternOverrideId"
} as const,
            name: 'scrapePathPatternOverrideId',
            displayName: 'Scrape Path Pattern Override Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:scrape_path_pattern_override_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:scrapePathPatternOverrideId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: {"table": "scrape_path_pattern_override", "column": "id", "entity": "scrapePathPatternOverride", "field": "id"},
            description: '"Scrape Path Pattern Override Id" field for scrapeParsedPage. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapePathPatternOverride.',
        },
            scrapedAt: {
            fieldNameFormats: {
    "frontend": "scrapedAt",
    "backend": "scraped_at",
    "database": "scraped_at",
    "pretty": "Scraped At",
    "component": "ScrapedAt",
    "kebab": "scraped-at",
    "sqlFunctionRef": "p_scraped_at",
    "RestAPI": "scrapedAt",
    "GraphQL": "scrapedAt",
    "custom": "scrapedAt"
} as const,
            name: 'scrapedAt',
            displayName: 'Scraped At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:scraped_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:scrapedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Scraped At" field for scrapeParsedPage. This is an optional field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapeParsedPage. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeParsedPage. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeParsedPage. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeParsedPage. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeParsedPage. This is an optional field. Your entry must be an boolean data type.',
        },
            expiresAt: {
            fieldNameFormats: {
    "frontend": "expiresAt",
    "backend": "expires_at",
    "database": "expires_at",
    "pretty": "Expires At",
    "component": "ExpiresAt",
    "kebab": "expires-at",
    "sqlFunctionRef": "p_expires_at",
    "RestAPI": "expiresAt",
    "GraphQL": "expiresAt",
    "custom": "expiresAt"
} as const,
            name: 'expiresAt',
            displayName: 'Expires At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_parsed_page:expires_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeParsedPage:expiresAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeParsedPage',
            databaseTable: 'scrape_parsed_page',
            foreignKeyReference: null,
            description: '"Expires At" field for scrapeParsedPage. This is an optional field. Your entry must be an date data type.',
        },
            scrapeConfigurationReference: {
    fieldNameFormats: {
    "frontend": "scrapeConfigurationReference",
    "backend": "scrape_configuration_reference",
    "database": "ref_scrape_configuration",
    "pretty": "Scrape Configuration Reference",
    "component": "ScrapeConfigurationReference",
    "kebab": "scrape-configurationReference",
    "sqlFunctionRef": "p_ref_scrape_configuration",
    "RestAPI": "scrapeConfigurationReference",
    "GraphQL": "scrapeConfigurationReference",
    "custom": "scrapeConfigurationReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_configuration:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeConfiguration:id',
    name: 'scrapeConfigurationReference',
    displayName: 'Scrape Configuration Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeConfiguration'][]>,
    entityName: 'scrapeConfiguration',
    databaseTable: 'scrape_configuration',
    relationshipMap: {scrape_configuration: 'id', scrape_cycle_run: 'id', scrape_cycle_tracker: 'id', scrape_path_pattern_cache_policy: 'id', scrape_path_pattern_override: 'id', scrape_task: 'id', scrape_task_response: 'id'},
},
            scrapeCycleRunReference: {
    fieldNameFormats: {
    "frontend": "scrapeCycleRunReference",
    "backend": "scrape_cycle_run_reference",
    "database": "ref_scrape_cycle_run",
    "pretty": "Scrape Cycle Run Reference",
    "component": "ScrapeCycleRunReference",
    "kebab": "scrape-cycle-runReference",
    "sqlFunctionRef": "p_ref_scrape_cycle_run",
    "RestAPI": "scrapeCycleRunReference",
    "GraphQL": "scrapeCycleRunReference",
    "custom": "scrapeCycleRunReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_cycle_run:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:id',
    name: 'scrapeCycleRunReference',
    displayName: 'Scrape Cycle Run Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeCycleRun'][]>,
    entityName: 'scrapeCycleRun',
    databaseTable: 'scrape_cycle_run',
    relationshipMap: {scrape_configuration: 'id', scrape_cycle_run: 'id', scrape_cycle_tracker: 'id', scrape_path_pattern_cache_policy: 'id', scrape_path_pattern_override: 'id', scrape_task: 'id', scrape_task_response: 'id'},
},
            scrapeCycleTrackerReference: {
    fieldNameFormats: {
    "frontend": "scrapeCycleTrackerReference",
    "backend": "scrape_cycle_tracker_reference",
    "database": "ref_scrape_cycle_tracker",
    "pretty": "Scrape Cycle Tracker Reference",
    "component": "ScrapeCycleTrackerReference",
    "kebab": "scrape-cycle-trackerReference",
    "sqlFunctionRef": "p_ref_scrape_cycle_tracker",
    "RestAPI": "scrapeCycleTrackerReference",
    "GraphQL": "scrapeCycleTrackerReference",
    "custom": "scrapeCycleTrackerReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_cycle_tracker:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeCycleTracker:id',
    name: 'scrapeCycleTrackerReference',
    displayName: 'Scrape Cycle Tracker Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeCycleTracker'][]>,
    entityName: 'scrapeCycleTracker',
    databaseTable: 'scrape_cycle_tracker',
    relationshipMap: {scrape_configuration: 'id', scrape_cycle_run: 'id', scrape_cycle_tracker: 'id', scrape_path_pattern_cache_policy: 'id', scrape_path_pattern_override: 'id', scrape_task: 'id', scrape_task_response: 'id'},
},
            scrapePathPatternCachePolicyReference: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternCachePolicyReference",
    "backend": "scrape_path_pattern_cache_policy_reference",
    "database": "ref_scrape_path_pattern_cache_policy",
    "pretty": "Scrape Path Pattern Cache Policy Reference",
    "component": "ScrapePathPatternCachePolicyReference",
    "kebab": "scrape-path-pattern-cache-policyReference",
    "sqlFunctionRef": "p_ref_scrape_path_pattern_cache_policy",
    "RestAPI": "scrapePathPatternCachePolicyReference",
    "GraphQL": "scrapePathPatternCachePolicyReference",
    "custom": "scrapePathPatternCachePolicyReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_path_pattern_cache_policy:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternCachePolicy:id',
    name: 'scrapePathPatternCachePolicyReference',
    displayName: 'Scrape Path Pattern Cache Policy Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPatternCachePolicy'][]>,
    entityName: 'scrapePathPatternCachePolicy',
    databaseTable: 'scrape_path_pattern_cache_policy',
    relationshipMap: {scrape_configuration: 'id', scrape_cycle_run: 'id', scrape_cycle_tracker: 'id', scrape_path_pattern_cache_policy: 'id', scrape_path_pattern_override: 'id', scrape_task: 'id', scrape_task_response: 'id'},
},
            scrapePathPatternOverrideReference: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternOverrideReference",
    "backend": "scrape_path_pattern_override_reference",
    "database": "ref_scrape_path_pattern_override",
    "pretty": "Scrape Path Pattern Override Reference",
    "component": "ScrapePathPatternOverrideReference",
    "kebab": "scrape-path-pattern-overrideReference",
    "sqlFunctionRef": "p_ref_scrape_path_pattern_override",
    "RestAPI": "scrapePathPatternOverrideReference",
    "GraphQL": "scrapePathPatternOverrideReference",
    "custom": "scrapePathPatternOverrideReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_path_pattern_override:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:id',
    name: 'scrapePathPatternOverrideReference',
    displayName: 'Scrape Path Pattern Override Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPatternOverride'][]>,
    entityName: 'scrapePathPatternOverride',
    databaseTable: 'scrape_path_pattern_override',
    relationshipMap: {scrape_configuration: 'id', scrape_cycle_run: 'id', scrape_cycle_tracker: 'id', scrape_path_pattern_cache_policy: 'id', scrape_path_pattern_override: 'id', scrape_task: 'id', scrape_task_response: 'id'},
},
            scrapeTaskReference: {
    fieldNameFormats: {
    "frontend": "scrapeTaskReference",
    "backend": "scrape_task_reference",
    "database": "ref_scrape_task",
    "pretty": "Scrape Task Reference",
    "component": "ScrapeTaskReference",
    "kebab": "scrape-taskReference",
    "sqlFunctionRef": "p_ref_scrape_task",
    "RestAPI": "scrapeTaskReference",
    "GraphQL": "scrapeTaskReference",
    "custom": "scrapeTaskReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_task:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeTask:id',
    name: 'scrapeTaskReference',
    displayName: 'Scrape Task Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeTask'][]>,
    entityName: 'scrapeTask',
    databaseTable: 'scrape_task',
    relationshipMap: {scrape_configuration: 'id', scrape_cycle_run: 'id', scrape_cycle_tracker: 'id', scrape_path_pattern_cache_policy: 'id', scrape_path_pattern_override: 'id', scrape_task: 'id', scrape_task_response: 'id'},
},
            scrapeTaskResponseReference: {
    fieldNameFormats: {
    "frontend": "scrapeTaskResponseReference",
    "backend": "scrape_task_response_reference",
    "database": "ref_scrape_task_response",
    "pretty": "Scrape Task Response Reference",
    "component": "ScrapeTaskResponseReference",
    "kebab": "scrape-task-responseReference",
    "sqlFunctionRef": "p_ref_scrape_task_response",
    "RestAPI": "scrapeTaskResponseReference",
    "GraphQL": "scrapeTaskResponseReference",
    "custom": "scrapeTaskResponseReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_task_response:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:id',
    name: 'scrapeTaskResponseReference',
    displayName: 'Scrape Task Response Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeTaskResponse'][]>,
    entityName: 'scrapeTaskResponse',
    databaseTable: 'scrape_task_response',
    relationshipMap: {scrape_configuration: 'id', scrape_cycle_run: 'id', scrape_cycle_tracker: 'id', scrape_path_pattern_cache_policy: 'id', scrape_path_pattern_override: 'id', scrape_task: 'id', scrape_task_response: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "scrapeParsedPage",
    "backend": "scrape_parsed_page",
    "database": "scrape_parsed_page",
    "pretty": "Scrape Parsed Page",
    "component": "ScrapeParsedPage",
    "kebab": "scrape-parsed-page",
    "sqlFunctionRef": "p_scrape_parsed_page",
    "RestAPI": "scrapeParsedPage",
    "GraphQL": "scrapeParsedPage",
    "custom": "scrapeParsedPage"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_configuration_id', relatedTable: 'scrape_configuration', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_cycle_run_id', relatedTable: 'scrape_cycle_run', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_cycle_tracker_id', relatedTable: 'scrape_cycle_tracker', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_path_pattern_cache_policy_id', relatedTable: 'scrape_path_pattern_cache_policy', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_path_pattern_override_id', relatedTable: 'scrape_path_pattern_override', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_task_id', relatedTable: 'scrape_task', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_task_response_id', relatedTable: 'scrape_task_response', relatedColumn: 'id', junctionTable: null }
        ],
    },
scrapePathPattern: {
        schemaType: 'table' as const,
        entityName: 'scrapePathPattern',
        displayName: 'Scrape Path Pattern',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_path_pattern',
        uniqueEntityId: 'supabase_automation_matrix:scrapePathPattern',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPattern:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPattern',
            databaseTable: 'scrape_path_pattern',
            foreignKeyReference: null,
            description: '"Id" field for scrapePathPattern. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeDomainId: {
            fieldNameFormats: {
    "frontend": "scrapeDomainId",
    "backend": "scrape_domain_id",
    "database": "scrape_domain_id",
    "pretty": "Scrape Domain Id",
    "component": "ScrapeDomainId",
    "kebab": "scrape-domain-id",
    "sqlFunctionRef": "p_scrape_domain_id",
    "RestAPI": "scrapeDomainId",
    "GraphQL": "scrapeDomainId",
    "custom": "scrapeDomainId"
} as const,
            name: 'scrapeDomainId',
            displayName: 'Scrape Domain Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern:scrape_domain_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPattern:scrapeDomainId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPattern',
            databaseTable: 'scrape_path_pattern',
            foreignKeyReference: {"table": "scrape_domain", "column": "id", "entity": "scrapeDomain", "field": "id"},
            description: '"Scrape Domain Id" field for scrapePathPattern. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeDomain.',
        },
            pathPattern: {
            fieldNameFormats: {
    "frontend": "pathPattern",
    "backend": "path_pattern",
    "database": "path_pattern",
    "pretty": "Path Pattern",
    "component": "PathPattern",
    "kebab": "path-pattern",
    "sqlFunctionRef": "p_path_pattern",
    "RestAPI": "pathPattern",
    "GraphQL": "pathPattern",
    "custom": "pathPattern"
} as const,
            name: 'pathPattern',
            displayName: 'Path Pattern',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern:path_pattern',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPattern:pathPattern',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "/*" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPattern',
            databaseTable: 'scrape_path_pattern',
            foreignKeyReference: null,
            description: '"Path Pattern" field for scrapePathPattern. This is an optional field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPattern:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapePathPattern',
            databaseTable: 'scrape_path_pattern',
            foreignKeyReference: null,
            description: '"Created At" field for scrapePathPattern. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPattern:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapePathPattern',
            databaseTable: 'scrape_path_pattern',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapePathPattern. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPattern:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapePathPattern',
            databaseTable: 'scrape_path_pattern',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapePathPattern. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPattern:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapePathPattern',
            databaseTable: 'scrape_path_pattern',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapePathPattern. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeDomainReference: {
    fieldNameFormats: {
    "frontend": "scrapeDomainReference",
    "backend": "scrape_domain_reference",
    "database": "ref_scrape_domain",
    "pretty": "Scrape Domain Reference",
    "component": "ScrapeDomainReference",
    "kebab": "scrape-domainReference",
    "sqlFunctionRef": "p_ref_scrape_domain",
    "RestAPI": "scrapeDomainReference",
    "GraphQL": "scrapeDomainReference",
    "custom": "scrapeDomainReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_domain:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:id',
    name: 'scrapeDomainReference',
    displayName: 'Scrape Domain Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomain'][]>,
    entityName: 'scrapeDomain',
    databaseTable: 'scrape_domain',
    relationshipMap: {scrape_domain: 'id'},
},
            scrapeConfigurationInverse: {
    fieldNameFormats: {
    "frontend": "scrapeConfigurationInverse",
    "backend": "scrape_configuration_Inverse",
    "database": "ifk_scrape_configuration",
    "pretty": "Scrape Configuration Inverse",
    "component": "ScrapeConfigurationInverse",
    "kebab": "scrape-configurationInverse",
    "sqlFunctionRef": "p_ifk_scrape_configuration",
    "RestAPI": "scrapeConfigurationInverse",
    "GraphQL": "scrapeConfigurationInverse",
    "custom": "scrapeConfigurationInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_configuration',
    uniqueEntityId: 'supabase_automation_matrix:scrapeConfiguration',
    name: 'scrapeConfigurationInverse',
    displayName: 'Scrape Configuration Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeConfiguration'][]>,
    entityName: 'scrapeConfiguration',
    databaseTable: 'scrape_configuration',
},
            scrapePathPatternOverrideInverse: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternOverrideInverse",
    "backend": "scrape_path_pattern_override_Inverse",
    "database": "ifk_scrape_path_pattern_override",
    "pretty": "Scrape Path Pattern Override Inverse",
    "component": "ScrapePathPatternOverrideInverse",
    "kebab": "scrape-path-pattern-overrideInverse",
    "sqlFunctionRef": "p_ifk_scrape_path_pattern_override",
    "RestAPI": "scrapePathPatternOverrideInverse",
    "GraphQL": "scrapePathPatternOverrideInverse",
    "custom": "scrapePathPatternOverrideInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_path_pattern_override',
    uniqueEntityId: 'supabase_automation_matrix:scrapePathPatternOverride',
    name: 'scrapePathPatternOverrideInverse',
    displayName: 'Scrape Path Pattern Override Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPatternOverride'][]>,
    entityName: 'scrapePathPatternOverride',
    databaseTable: 'scrape_path_pattern_override',
},
            scrapePathPatternCachePolicyInverse: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternCachePolicyInverse",
    "backend": "scrape_path_pattern_cache_policy_Inverse",
    "database": "ifk_scrape_path_pattern_cache_policy",
    "pretty": "Scrape Path Pattern Cache Policy Inverse",
    "component": "ScrapePathPatternCachePolicyInverse",
    "kebab": "scrape-path-pattern-cache-policyInverse",
    "sqlFunctionRef": "p_ifk_scrape_path_pattern_cache_policy",
    "RestAPI": "scrapePathPatternCachePolicyInverse",
    "GraphQL": "scrapePathPatternCachePolicyInverse",
    "custom": "scrapePathPatternCachePolicyInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_path_pattern_cache_policy',
    uniqueEntityId: 'supabase_automation_matrix:scrapePathPatternCachePolicy',
    name: 'scrapePathPatternCachePolicyInverse',
    displayName: 'Scrape Path Pattern Cache Policy Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPatternCachePolicy'][]>,
    entityName: 'scrapePathPatternCachePolicy',
    databaseTable: 'scrape_path_pattern_cache_policy',
},
        },
        entityNameFormats: {
    "frontend": "scrapePathPattern",
    "backend": "scrape_path_pattern",
    "database": "scrape_path_pattern",
    "pretty": "Scrape Path Pattern",
    "component": "ScrapePathPattern",
    "kebab": "scrape-path-pattern",
    "sqlFunctionRef": "p_scrape_path_pattern",
    "RestAPI": "scrapePathPattern",
    "GraphQL": "scrapePathPattern",
    "custom": "scrapePathPattern"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_domain_id', relatedTable: 'scrape_domain', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_configuration', relatedColumn: 'scrape_path_pattern_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_path_pattern_override', relatedColumn: 'scrape_path_pattern_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_path_pattern_cache_policy', relatedColumn: 'scrape_path_pattern_id', junctionTable: null }
        ],
    },
scrapePathPatternCachePolicy: {
        schemaType: 'table' as const,
        entityName: 'scrapePathPatternCachePolicy',
        displayName: 'Scrape Path Pattern Cache Policy',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_path_pattern_cache_policy',
        uniqueEntityId: 'supabase_automation_matrix:scrapePathPatternCachePolicy',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_cache_policy:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternCachePolicy:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPatternCachePolicy',
            databaseTable: 'scrape_path_pattern_cache_policy',
            foreignKeyReference: null,
            description: '"Id" field for scrapePathPatternCachePolicy. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeCachePolicyId: {
            fieldNameFormats: {
    "frontend": "scrapeCachePolicyId",
    "backend": "scrape_cache_policy_id",
    "database": "scrape_cache_policy_id",
    "pretty": "Scrape Cache Policy Id",
    "component": "ScrapeCachePolicyId",
    "kebab": "scrape-cache-policy-id",
    "sqlFunctionRef": "p_scrape_cache_policy_id",
    "RestAPI": "scrapeCachePolicyId",
    "GraphQL": "scrapeCachePolicyId",
    "custom": "scrapeCachePolicyId"
} as const,
            name: 'scrapeCachePolicyId',
            displayName: 'Scrape Cache Policy Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_cache_policy:scrape_cache_policy_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternCachePolicy:scrapeCachePolicyId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPatternCachePolicy',
            databaseTable: 'scrape_path_pattern_cache_policy',
            foreignKeyReference: {"table": "scrape_cache_policy", "column": "id", "entity": "scrapeCachePolicy", "field": "id"},
            description: '"Scrape Cache Policy Id" field for scrapePathPatternCachePolicy. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapeCachePolicy.',
        },
            scrapePathPatternId: {
            fieldNameFormats: {
    "frontend": "scrapePathPatternId",
    "backend": "scrape_path_pattern_id",
    "database": "scrape_path_pattern_id",
    "pretty": "Scrape Path Pattern Id",
    "component": "ScrapePathPatternId",
    "kebab": "scrape-path-pattern-id",
    "sqlFunctionRef": "p_scrape_path_pattern_id",
    "RestAPI": "scrapePathPatternId",
    "GraphQL": "scrapePathPatternId",
    "custom": "scrapePathPatternId"
} as const,
            name: 'scrapePathPatternId',
            displayName: 'Scrape Path Pattern Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_cache_policy:scrape_path_pattern_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternCachePolicy:scrapePathPatternId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPatternCachePolicy',
            databaseTable: 'scrape_path_pattern_cache_policy',
            foreignKeyReference: {"table": "scrape_path_pattern", "column": "id", "entity": "scrapePathPattern", "field": "id"},
            description: '"Scrape Path Pattern Id" field for scrapePathPatternCachePolicy. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapePathPattern.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_cache_policy:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternCachePolicy:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPatternCachePolicy',
            databaseTable: 'scrape_path_pattern_cache_policy',
            foreignKeyReference: null,
            description: '"User Id" field for scrapePathPatternCachePolicy. This is an optional field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_cache_policy:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternCachePolicy:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapePathPatternCachePolicy',
            databaseTable: 'scrape_path_pattern_cache_policy',
            foreignKeyReference: null,
            description: '"Created At" field for scrapePathPatternCachePolicy. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_cache_policy:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternCachePolicy:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapePathPatternCachePolicy',
            databaseTable: 'scrape_path_pattern_cache_policy',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapePathPatternCachePolicy. This is a required field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_cache_policy:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternCachePolicy:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapePathPatternCachePolicy',
            databaseTable: 'scrape_path_pattern_cache_policy',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapePathPatternCachePolicy. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_cache_policy:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternCachePolicy:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapePathPatternCachePolicy',
            databaseTable: 'scrape_path_pattern_cache_policy',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapePathPatternCachePolicy. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeCachePolicyReference: {
    fieldNameFormats: {
    "frontend": "scrapeCachePolicyReference",
    "backend": "scrape_cache_policy_reference",
    "database": "ref_scrape_cache_policy",
    "pretty": "Scrape Cache Policy Reference",
    "component": "ScrapeCachePolicyReference",
    "kebab": "scrape-cache-policyReference",
    "sqlFunctionRef": "p_ref_scrape_cache_policy",
    "RestAPI": "scrapeCachePolicyReference",
    "GraphQL": "scrapeCachePolicyReference",
    "custom": "scrapeCachePolicyReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_cache_policy:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeCachePolicy:id',
    name: 'scrapeCachePolicyReference',
    displayName: 'Scrape Cache Policy Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeCachePolicy'][]>,
    entityName: 'scrapeCachePolicy',
    databaseTable: 'scrape_cache_policy',
    relationshipMap: {scrape_cache_policy: 'id', scrape_path_pattern: 'id'},
},
            scrapePathPatternReference: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternReference",
    "backend": "scrape_path_pattern_reference",
    "database": "ref_scrape_path_pattern",
    "pretty": "Scrape Path Pattern Reference",
    "component": "ScrapePathPatternReference",
    "kebab": "scrape-path-patternReference",
    "sqlFunctionRef": "p_ref_scrape_path_pattern",
    "RestAPI": "scrapePathPatternReference",
    "GraphQL": "scrapePathPatternReference",
    "custom": "scrapePathPatternReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_path_pattern:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapePathPattern:id',
    name: 'scrapePathPatternReference',
    displayName: 'Scrape Path Pattern Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPattern'][]>,
    entityName: 'scrapePathPattern',
    databaseTable: 'scrape_path_pattern',
    relationshipMap: {scrape_cache_policy: 'id', scrape_path_pattern: 'id'},
},
            scrapeCycleTrackerInverse: {
    fieldNameFormats: {
    "frontend": "scrapeCycleTrackerInverse",
    "backend": "scrape_cycle_tracker_Inverse",
    "database": "ifk_scrape_cycle_tracker",
    "pretty": "Scrape Cycle Tracker Inverse",
    "component": "ScrapeCycleTrackerInverse",
    "kebab": "scrape-cycle-trackerInverse",
    "sqlFunctionRef": "p_ifk_scrape_cycle_tracker",
    "RestAPI": "scrapeCycleTrackerInverse",
    "GraphQL": "scrapeCycleTrackerInverse",
    "custom": "scrapeCycleTrackerInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_cycle_tracker',
    uniqueEntityId: 'supabase_automation_matrix:scrapeCycleTracker',
    name: 'scrapeCycleTrackerInverse',
    displayName: 'Scrape Cycle Tracker Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeCycleTracker'][]>,
    entityName: 'scrapeCycleTracker',
    databaseTable: 'scrape_cycle_tracker',
},
            scrapeParsedPageInverse: {
    fieldNameFormats: {
    "frontend": "scrapeParsedPageInverse",
    "backend": "scrape_parsed_page_Inverse",
    "database": "ifk_scrape_parsed_page",
    "pretty": "Scrape Parsed Page Inverse",
    "component": "ScrapeParsedPageInverse",
    "kebab": "scrape-parsed-pageInverse",
    "sqlFunctionRef": "p_ifk_scrape_parsed_page",
    "RestAPI": "scrapeParsedPageInverse",
    "GraphQL": "scrapeParsedPageInverse",
    "custom": "scrapeParsedPageInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_parsed_page',
    uniqueEntityId: 'supabase_automation_matrix:scrapeParsedPage',
    name: 'scrapeParsedPageInverse',
    displayName: 'Scrape Parsed Page Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeParsedPage'][]>,
    entityName: 'scrapeParsedPage',
    databaseTable: 'scrape_parsed_page',
},
        },
        entityNameFormats: {
    "frontend": "scrapePathPatternCachePolicy",
    "backend": "scrape_path_pattern_cache_policy",
    "database": "scrape_path_pattern_cache_policy",
    "pretty": "Scrape Path Pattern Cache Policy",
    "component": "ScrapePathPatternCachePolicy",
    "kebab": "scrape-path-pattern-cache-policy",
    "sqlFunctionRef": "p_scrape_path_pattern_cache_policy",
    "RestAPI": "scrapePathPatternCachePolicy",
    "GraphQL": "scrapePathPatternCachePolicy",
    "custom": "scrapePathPatternCachePolicy"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_cache_policy_id', relatedTable: 'scrape_cache_policy', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_path_pattern_id', relatedTable: 'scrape_path_pattern', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_cycle_tracker', relatedColumn: 'scrape_path_pattern_cache_policy_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_parsed_page', relatedColumn: 'scrape_path_pattern_cache_policy_id', junctionTable: null }
        ],
    },
scrapePathPatternOverride: {
        schemaType: 'table' as const,
        entityName: 'scrapePathPatternOverride',
        displayName: 'Scrape Path Pattern Override',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_path_pattern_override',
        uniqueEntityId: 'supabase_automation_matrix:scrapePathPatternOverride',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_override:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPatternOverride',
            databaseTable: 'scrape_path_pattern_override',
            foreignKeyReference: null,
            description: '"Id" field for scrapePathPatternOverride. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_override:name',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPatternOverride',
            databaseTable: 'scrape_path_pattern_override',
            foreignKeyReference: null,
            description: '"Name" field for scrapePathPatternOverride. This is a required field. Your entry must be an string data type.',
        },
            scrapePathPatternId: {
            fieldNameFormats: {
    "frontend": "scrapePathPatternId",
    "backend": "scrape_path_pattern_id",
    "database": "scrape_path_pattern_id",
    "pretty": "Scrape Path Pattern Id",
    "component": "ScrapePathPatternId",
    "kebab": "scrape-path-pattern-id",
    "sqlFunctionRef": "p_scrape_path_pattern_id",
    "RestAPI": "scrapePathPatternId",
    "GraphQL": "scrapePathPatternId",
    "custom": "scrapePathPatternId"
} as const,
            name: 'scrapePathPatternId',
            displayName: 'Scrape Path Pattern Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_override:scrape_path_pattern_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:scrapePathPatternId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPatternOverride',
            databaseTable: 'scrape_path_pattern_override',
            foreignKeyReference: {"table": "scrape_path_pattern", "column": "id", "entity": "scrapePathPattern", "field": "id"},
            description: '"Scrape Path Pattern Id" field for scrapePathPatternOverride. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapePathPattern.',
        },
            scrapeOverrideId: {
            fieldNameFormats: {
    "frontend": "scrapeOverrideId",
    "backend": "scrape_override_id",
    "database": "scrape_override_id",
    "pretty": "Scrape Override Id",
    "component": "ScrapeOverrideId",
    "kebab": "scrape-override-id",
    "sqlFunctionRef": "p_scrape_override_id",
    "RestAPI": "scrapeOverrideId",
    "GraphQL": "scrapeOverrideId",
    "custom": "scrapeOverrideId"
} as const,
            name: 'scrapeOverrideId',
            displayName: 'Scrape Override Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_override:scrape_override_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:scrapeOverrideId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPatternOverride',
            databaseTable: 'scrape_path_pattern_override',
            foreignKeyReference: {"table": "scrape_override", "column": "id", "entity": "scrapeOverride", "field": "id"},
            description: '"Scrape Override Id" field for scrapePathPatternOverride. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapeOverride.',
        },
            isActive: {
            fieldNameFormats: {
    "frontend": "isActive",
    "backend": "is_active",
    "database": "is_active",
    "pretty": "Is Active",
    "component": "IsActive",
    "kebab": "is-active",
    "sqlFunctionRef": "p_is_active",
    "RestAPI": "isActive",
    "GraphQL": "isActive",
    "custom": "isActive"
} as const,
            name: 'isActive',
            displayName: 'Is Active',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_override:is_active',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:isActive',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapePathPatternOverride',
            databaseTable: 'scrape_path_pattern_override',
            foreignKeyReference: null,
            description: '"Is Active" field for scrapePathPatternOverride. This is a required field. Your entry must be an boolean data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_override:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapePathPatternOverride',
            databaseTable: 'scrape_path_pattern_override',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapePathPatternOverride. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_override:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapePathPatternOverride',
            databaseTable: 'scrape_path_pattern_override',
            foreignKeyReference: null,
            description: '"Created At" field for scrapePathPatternOverride. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_override:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapePathPatternOverride',
            databaseTable: 'scrape_path_pattern_override',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapePathPatternOverride. This is a required field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_override:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:isPublic',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapePathPatternOverride',
            databaseTable: 'scrape_path_pattern_override',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapePathPatternOverride. This is a required field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_path_pattern_override:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapePathPatternOverride:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapePathPatternOverride',
            databaseTable: 'scrape_path_pattern_override',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapePathPatternOverride. This is a required field. Your entry must be an boolean data type.',
        },
            scrapeOverrideReference: {
    fieldNameFormats: {
    "frontend": "scrapeOverrideReference",
    "backend": "scrape_override_reference",
    "database": "ref_scrape_override",
    "pretty": "Scrape Override Reference",
    "component": "ScrapeOverrideReference",
    "kebab": "scrape-overrideReference",
    "sqlFunctionRef": "p_ref_scrape_override",
    "RestAPI": "scrapeOverrideReference",
    "GraphQL": "scrapeOverrideReference",
    "custom": "scrapeOverrideReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_override:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeOverride:id',
    name: 'scrapeOverrideReference',
    displayName: 'Scrape Override Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeOverride'][]>,
    entityName: 'scrapeOverride',
    databaseTable: 'scrape_override',
    relationshipMap: {scrape_override: 'id', scrape_path_pattern: 'id'},
},
            scrapePathPatternReference: {
    fieldNameFormats: {
    "frontend": "scrapePathPatternReference",
    "backend": "scrape_path_pattern_reference",
    "database": "ref_scrape_path_pattern",
    "pretty": "Scrape Path Pattern Reference",
    "component": "ScrapePathPatternReference",
    "kebab": "scrape-path-patternReference",
    "sqlFunctionRef": "p_ref_scrape_path_pattern",
    "RestAPI": "scrapePathPatternReference",
    "GraphQL": "scrapePathPatternReference",
    "custom": "scrapePathPatternReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_path_pattern:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapePathPattern:id',
    name: 'scrapePathPatternReference',
    displayName: 'Scrape Path Pattern Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapePathPattern'][]>,
    entityName: 'scrapePathPattern',
    databaseTable: 'scrape_path_pattern',
    relationshipMap: {scrape_override: 'id', scrape_path_pattern: 'id'},
},
            scrapeParsedPageInverse: {
    fieldNameFormats: {
    "frontend": "scrapeParsedPageInverse",
    "backend": "scrape_parsed_page_Inverse",
    "database": "ifk_scrape_parsed_page",
    "pretty": "Scrape Parsed Page Inverse",
    "component": "ScrapeParsedPageInverse",
    "kebab": "scrape-parsed-pageInverse",
    "sqlFunctionRef": "p_ifk_scrape_parsed_page",
    "RestAPI": "scrapeParsedPageInverse",
    "GraphQL": "scrapeParsedPageInverse",
    "custom": "scrapeParsedPageInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_parsed_page',
    uniqueEntityId: 'supabase_automation_matrix:scrapeParsedPage',
    name: 'scrapeParsedPageInverse',
    displayName: 'Scrape Parsed Page Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeParsedPage'][]>,
    entityName: 'scrapeParsedPage',
    databaseTable: 'scrape_parsed_page',
},
        },
        entityNameFormats: {
    "frontend": "scrapePathPatternOverride",
    "backend": "scrape_path_pattern_override",
    "database": "scrape_path_pattern_override",
    "pretty": "Scrape Path Pattern Override",
    "component": "ScrapePathPatternOverride",
    "kebab": "scrape-path-pattern-override",
    "sqlFunctionRef": "p_scrape_path_pattern_override",
    "RestAPI": "scrapePathPatternOverride",
    "GraphQL": "scrapePathPatternOverride",
    "custom": "scrapePathPatternOverride"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_override_id', relatedTable: 'scrape_override', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_path_pattern_id', relatedTable: 'scrape_path_pattern', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_parsed_page', relatedColumn: 'scrape_path_pattern_override_id', junctionTable: null }
        ],
    },
scrapeQuickFailureLog: {
        schemaType: 'table' as const,
        entityName: 'scrapeQuickFailureLog',
        displayName: 'Scrape Quick Failure Log',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_quick_failure_log',
        uniqueEntityId: 'supabase_automation_matrix:scrapeQuickFailureLog',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'domainName', databaseFieldName: 'domain_name' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: null,
            description: '"Id" field for scrapeQuickFailureLog. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeDomainId: {
            fieldNameFormats: {
    "frontend": "scrapeDomainId",
    "backend": "scrape_domain_id",
    "database": "scrape_domain_id",
    "pretty": "Scrape Domain Id",
    "component": "ScrapeDomainId",
    "kebab": "scrape-domain-id",
    "sqlFunctionRef": "p_scrape_domain_id",
    "RestAPI": "scrapeDomainId",
    "GraphQL": "scrapeDomainId",
    "custom": "scrapeDomainId"
} as const,
            name: 'scrapeDomainId',
            displayName: 'Scrape Domain Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:scrape_domain_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:scrapeDomainId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: {"table": "scrape_domain", "column": "id", "entity": "scrapeDomain", "field": "id"},
            description: '"Scrape Domain Id" field for scrapeQuickFailureLog. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeDomain.',
        },
            domainName: {
            fieldNameFormats: {
    "frontend": "domainName",
    "backend": "domain_name",
    "database": "domain_name",
    "pretty": "Domain Name",
    "component": "DomainName",
    "kebab": "domain-name",
    "sqlFunctionRef": "p_domain_name",
    "RestAPI": "domainName",
    "GraphQL": "domainName",
    "custom": "domainName"
} as const,
            name: 'domainName',
            displayName: 'Domain Name',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:domain_name',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:domainName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: null,
            description: '"Domain Name" field for scrapeQuickFailureLog. This is an optional field. Your entry must be an string data type.',
        },
            targetUrl: {
            fieldNameFormats: {
    "frontend": "targetUrl",
    "backend": "target_url",
    "database": "target_url",
    "pretty": "Target Url",
    "component": "TargetUrl",
    "kebab": "target-url",
    "sqlFunctionRef": "p_target_url",
    "RestAPI": "targetUrl",
    "GraphQL": "targetUrl",
    "custom": "targetUrl"
} as const,
            name: 'targetUrl',
            displayName: 'Target Url',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:target_url',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:targetUrl',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: null,
            description: '"Target Url" field for scrapeQuickFailureLog. This is a required field. Your entry must be an string data type.',
        },
            failureReason: {
            fieldNameFormats: {
    "frontend": "failureReason",
    "backend": "failure_reason",
    "database": "failure_reason",
    "pretty": "Failure Reason",
    "component": "FailureReason",
    "kebab": "failure-reason",
    "sqlFunctionRef": "p_failure_reason",
    "RestAPI": "failureReason",
    "GraphQL": "failureReason",
    "custom": "failureReason"
} as const,
            name: 'failureReason',
            displayName: 'Failure Reason',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:failure_reason',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:failureReason',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: null,
            description: '"Failure Reason" field for scrapeQuickFailureLog. This is an optional field. Your entry must be an string data type.',
        },
            errorLog: {
            fieldNameFormats: {
    "frontend": "errorLog",
    "backend": "error_log",
    "database": "error_log",
    "pretty": "Error Log",
    "component": "ErrorLog",
    "kebab": "error-log",
    "sqlFunctionRef": "p_error_log",
    "RestAPI": "errorLog",
    "GraphQL": "errorLog",
    "custom": "errorLog"
} as const,
            name: 'errorLog',
            displayName: 'Error Log',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:error_log',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:errorLog',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: null,
            description: '"Error Log" field for scrapeQuickFailureLog. This is an optional field. Your entry must be an string data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapeQuickFailureLog. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeQuickFailureLog. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeQuickFailureLog. This is an optional field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeQuickFailureLog. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_quick_failure_log:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeQuickFailureLog:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeQuickFailureLog',
            databaseTable: 'scrape_quick_failure_log',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeQuickFailureLog. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeDomainReference: {
    fieldNameFormats: {
    "frontend": "scrapeDomainReference",
    "backend": "scrape_domain_reference",
    "database": "ref_scrape_domain",
    "pretty": "Scrape Domain Reference",
    "component": "ScrapeDomainReference",
    "kebab": "scrape-domainReference",
    "sqlFunctionRef": "p_ref_scrape_domain",
    "RestAPI": "scrapeDomainReference",
    "GraphQL": "scrapeDomainReference",
    "custom": "scrapeDomainReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_domain:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:id',
    name: 'scrapeDomainReference',
    displayName: 'Scrape Domain Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomain'][]>,
    entityName: 'scrapeDomain',
    databaseTable: 'scrape_domain',
    relationshipMap: {scrape_domain: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "scrapeQuickFailureLog",
    "backend": "scrape_quick_failure_log",
    "database": "scrape_quick_failure_log",
    "pretty": "Scrape Quick Failure Log",
    "component": "ScrapeQuickFailureLog",
    "kebab": "scrape-quick-failure-log",
    "sqlFunctionRef": "p_scrape_quick_failure_log",
    "RestAPI": "scrapeQuickFailureLog",
    "GraphQL": "scrapeQuickFailureLog",
    "custom": "scrapeQuickFailureLog"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_domain_id', relatedTable: 'scrape_domain', relatedColumn: 'id', junctionTable: null }
        ],
    },
scrapeTask: {
        schemaType: 'table' as const,
        entityName: 'scrapeTask',
        displayName: 'Scrape Task',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_task',
        uniqueEntityId: 'supabase_automation_matrix:scrapeTask',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'pageName', databaseFieldName: 'page_name' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Id" field for scrapeTask. This is a required field. Your entry must be an uuid data type.',
        },
            targetUrl: {
            fieldNameFormats: {
    "frontend": "targetUrl",
    "backend": "target_url",
    "database": "target_url",
    "pretty": "Target Url",
    "component": "TargetUrl",
    "kebab": "target-url",
    "sqlFunctionRef": "p_target_url",
    "RestAPI": "targetUrl",
    "GraphQL": "targetUrl",
    "custom": "targetUrl"
} as const,
            name: 'targetUrl',
            displayName: 'Target Url',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:target_url',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:targetUrl',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Target Url" field for scrapeTask. This is a required field. Your entry must be an string data type.',
        },
            pageName: {
            fieldNameFormats: {
    "frontend": "pageName",
    "backend": "page_name",
    "database": "page_name",
    "pretty": "Page Name",
    "component": "PageName",
    "kebab": "page-name",
    "sqlFunctionRef": "p_page_name",
    "RestAPI": "pageName",
    "GraphQL": "pageName",
    "custom": "pageName"
} as const,
            name: 'pageName',
            displayName: 'Page Name',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:page_name',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:pageName',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Page Name" field for scrapeTask. This is a required field. Your entry must be an string data type.',
        },
            scrapeDomainId: {
            fieldNameFormats: {
    "frontend": "scrapeDomainId",
    "backend": "scrape_domain_id",
    "database": "scrape_domain_id",
    "pretty": "Scrape Domain Id",
    "component": "ScrapeDomainId",
    "kebab": "scrape-domain-id",
    "sqlFunctionRef": "p_scrape_domain_id",
    "RestAPI": "scrapeDomainId",
    "GraphQL": "scrapeDomainId",
    "custom": "scrapeDomainId"
} as const,
            name: 'scrapeDomainId',
            displayName: 'Scrape Domain Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:scrape_domain_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:scrapeDomainId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: {"table": "scrape_domain", "column": "id", "entity": "scrapeDomain", "field": "id"},
            description: '"Scrape Domain Id" field for scrapeTask. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeDomain.',
        },
            parentTask: {
            fieldNameFormats: {
    "frontend": "parentTask",
    "backend": "parent_task",
    "database": "parent_task",
    "pretty": "Parent Task",
    "component": "ParentTask",
    "kebab": "parent-task",
    "sqlFunctionRef": "p_parent_task",
    "RestAPI": "parentTask",
    "GraphQL": "parentTask",
    "custom": "parentTask"
} as const,
            name: 'parentTask',
            displayName: 'Parent Task',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:parent_task',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:parentTask',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Parent Task" field for scrapeTask. This is an optional field. Your entry must be an uuid data type.',
        },
            attemptsLeft: {
            fieldNameFormats: {
    "frontend": "attemptsLeft",
    "backend": "attempts_left",
    "database": "attempts_left",
    "pretty": "Attempts Left",
    "component": "AttemptsLeft",
    "kebab": "attempts-left",
    "sqlFunctionRef": "p_attempts_left",
    "RestAPI": "attemptsLeft",
    "GraphQL": "attemptsLeft",
    "custom": "attemptsLeft"
} as const,
            name: 'attemptsLeft',
            displayName: 'Attempts Left',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:attempts_left',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:attemptsLeft',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Attempts Left" field for scrapeTask. This is a required field. Your entry must be an number data type.',
        },
            scrapeMode: {
            fieldNameFormats: {
    "frontend": "scrapeMode",
    "backend": "scrape_mode",
    "database": "scrape_mode",
    "pretty": "Scrape Mode",
    "component": "ScrapeMode",
    "kebab": "scrape-mode",
    "sqlFunctionRef": "p_scrape_mode",
    "RestAPI": "scrapeMode",
    "GraphQL": "scrapeMode",
    "custom": "scrapeMode"
} as const,
            name: 'scrapeMode',
            displayName: 'Scrape Mode',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:scrape_mode',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:scrapeMode',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "normal" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Scrape Mode" field for scrapeTask. This is a required field. Your entry must be an string data type.',
        },
            interactionConfig: {
            fieldNameFormats: {
    "frontend": "interactionConfig",
    "backend": "interaction_config",
    "database": "interaction_config",
    "pretty": "Interaction Config",
    "component": "InteractionConfig",
    "kebab": "interaction-config",
    "sqlFunctionRef": "p_interaction_config",
    "RestAPI": "interactionConfig",
    "GraphQL": "interactionConfig",
    "custom": "interactionConfig"
} as const,
            name: 'interactionConfig',
            displayName: 'Interaction Config',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:interaction_config',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:interactionConfig',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Interaction Config" field for scrapeTask. This is an optional field. Your entry must be an object data type.',
        },
            scrapeJobId: {
            fieldNameFormats: {
    "frontend": "scrapeJobId",
    "backend": "scrape_job_id",
    "database": "scrape_job_id",
    "pretty": "Scrape Job Id",
    "component": "ScrapeJobId",
    "kebab": "scrape-job-id",
    "sqlFunctionRef": "p_scrape_job_id",
    "RestAPI": "scrapeJobId",
    "GraphQL": "scrapeJobId",
    "custom": "scrapeJobId"
} as const,
            name: 'scrapeJobId',
            displayName: 'Scrape Job Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:scrape_job_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:scrapeJobId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: {"table": "scrape_job", "column": "id", "entity": "scrapeJob", "field": "id"},
            description: '"Scrape Job Id" field for scrapeTask. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeJob.',
        },
            priority: {
            fieldNameFormats: {
    "frontend": "priority",
    "backend": "priority",
    "database": "priority",
    "pretty": "Priority",
    "component": "Priority",
    "kebab": "priority",
    "sqlFunctionRef": "p_priority",
    "RestAPI": "priority",
    "GraphQL": "priority",
    "custom": "priority"
} as const,
            name: 'priority',
            displayName: 'Priority',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:priority',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:priority',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Priority" field for scrapeTask. This is an optional field. Your entry must be an number data type.',
        },
            discoveredLinks: {
            fieldNameFormats: {
    "frontend": "discoveredLinks",
    "backend": "discovered_links",
    "database": "discovered_links",
    "pretty": "Discovered Links",
    "component": "DiscoveredLinks",
    "kebab": "discovered-links",
    "sqlFunctionRef": "p_discovered_links",
    "RestAPI": "discoveredLinks",
    "GraphQL": "discoveredLinks",
    "custom": "discoveredLinks"
} as const,
            name: 'discoveredLinks',
            displayName: 'Discovered Links',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:discovered_links',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:discoveredLinks',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Discovered Links" field for scrapeTask. This is an optional field. Your entry must be an object data type.',
        },
            spawnedConcurrentTasks: {
            fieldNameFormats: {
    "frontend": "spawnedConcurrentTasks",
    "backend": "spawned_concurrent_tasks",
    "database": "spawned_concurrent_tasks",
    "pretty": "Spawned Concurrent Tasks",
    "component": "SpawnedConcurrentTasks",
    "kebab": "spawned-concurrent-tasks",
    "sqlFunctionRef": "p_spawned_concurrent_tasks",
    "RestAPI": "spawnedConcurrentTasks",
    "GraphQL": "spawnedConcurrentTasks",
    "custom": "spawnedConcurrentTasks"
} as const,
            name: 'spawnedConcurrentTasks',
            displayName: 'Spawned Concurrent Tasks',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:spawned_concurrent_tasks',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:spawnedConcurrentTasks',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Spawned Concurrent Tasks" field for scrapeTask. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeCycleRunId: {
            fieldNameFormats: {
    "frontend": "scrapeCycleRunId",
    "backend": "scrape_cycle_run_id",
    "database": "scrape_cycle_run_id",
    "pretty": "Scrape Cycle Run Id",
    "component": "ScrapeCycleRunId",
    "kebab": "scrape-cycle-run-id",
    "sqlFunctionRef": "p_scrape_cycle_run_id",
    "RestAPI": "scrapeCycleRunId",
    "GraphQL": "scrapeCycleRunId",
    "custom": "scrapeCycleRunId"
} as const,
            name: 'scrapeCycleRunId',
            displayName: 'Scrape Cycle Run Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:scrape_cycle_run_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:scrapeCycleRunId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: {"table": "scrape_cycle_run", "column": "id", "entity": "scrapeCycleRun", "field": "id"},
            description: '"Scrape Cycle Run Id" field for scrapeTask. This is an optional field. Your entry must be an uuid data type. This field is a reference to a scrapeCycleRun.',
        },
            failureReason: {
            fieldNameFormats: {
    "frontend": "failureReason",
    "backend": "failure_reason",
    "database": "failure_reason",
    "pretty": "Failure Reason",
    "component": "FailureReason",
    "kebab": "failure-reason",
    "sqlFunctionRef": "p_failure_reason",
    "RestAPI": "failureReason",
    "GraphQL": "failureReason",
    "custom": "failureReason"
} as const,
            name: 'failureReason',
            displayName: 'Failure Reason',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:failure_reason',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:failureReason',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Failure Reason" field for scrapeTask. This is an optional field. Your entry must be an string data type.',
        },
            scrapeStatus: {
            fieldNameFormats: {
    "frontend": "scrapeStatus",
    "backend": "scrape_status",
    "database": "scrape_status",
    "pretty": "Scrape Status",
    "component": "ScrapeStatus",
    "kebab": "scrape-status",
    "sqlFunctionRef": "p_scrape_status",
    "RestAPI": "scrapeStatus",
    "GraphQL": "scrapeStatus",
    "custom": "scrapeStatus"
} as const,
            name: 'scrapeStatus',
            displayName: 'Scrape Status',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:scrape_status',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:scrapeStatus',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Scrape Status" field for scrapeTask. This is an optional field. Your entry must be an string data type.',
        },
            parseStatus: {
            fieldNameFormats: {
    "frontend": "parseStatus",
    "backend": "parse_status",
    "database": "parse_status",
    "pretty": "Parse Status",
    "component": "ParseStatus",
    "kebab": "parse-status",
    "sqlFunctionRef": "p_parse_status",
    "RestAPI": "parseStatus",
    "GraphQL": "parseStatus",
    "custom": "parseStatus"
} as const,
            name: 'parseStatus',
            displayName: 'Parse Status',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:parse_status',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:parseStatus',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Parse Status" field for scrapeTask. This is an optional field. Your entry must be an string data type.',
        },
            cancelMessage: {
            fieldNameFormats: {
    "frontend": "cancelMessage",
    "backend": "cancel_message",
    "database": "cancel_message",
    "pretty": "Cancel Message",
    "component": "CancelMessage",
    "kebab": "cancel-message",
    "sqlFunctionRef": "p_cancel_message",
    "RestAPI": "cancelMessage",
    "GraphQL": "cancelMessage",
    "custom": "cancelMessage"
} as const,
            name: 'cancelMessage',
            displayName: 'Cancel Message',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:cancel_message',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:cancelMessage',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Cancel Message" field for scrapeTask. This is an optional field. Your entry must be an string data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapeTask. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeTask. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeTask. This is a required field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeTask. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTask:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeTask',
            databaseTable: 'scrape_task',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeTask. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeCycleRunReference: {
    fieldNameFormats: {
    "frontend": "scrapeCycleRunReference",
    "backend": "scrape_cycle_run_reference",
    "database": "ref_scrape_cycle_run",
    "pretty": "Scrape Cycle Run Reference",
    "component": "ScrapeCycleRunReference",
    "kebab": "scrape-cycle-runReference",
    "sqlFunctionRef": "p_ref_scrape_cycle_run",
    "RestAPI": "scrapeCycleRunReference",
    "GraphQL": "scrapeCycleRunReference",
    "custom": "scrapeCycleRunReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_cycle_run:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeCycleRun:id',
    name: 'scrapeCycleRunReference',
    displayName: 'Scrape Cycle Run Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeCycleRun'][]>,
    entityName: 'scrapeCycleRun',
    databaseTable: 'scrape_cycle_run',
    relationshipMap: {scrape_cycle_run: 'id', scrape_domain: 'id', scrape_job: 'id'},
},
            scrapeDomainReference: {
    fieldNameFormats: {
    "frontend": "scrapeDomainReference",
    "backend": "scrape_domain_reference",
    "database": "ref_scrape_domain",
    "pretty": "Scrape Domain Reference",
    "component": "ScrapeDomainReference",
    "kebab": "scrape-domainReference",
    "sqlFunctionRef": "p_ref_scrape_domain",
    "RestAPI": "scrapeDomainReference",
    "GraphQL": "scrapeDomainReference",
    "custom": "scrapeDomainReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_domain:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeDomain:id',
    name: 'scrapeDomainReference',
    displayName: 'Scrape Domain Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeDomain'][]>,
    entityName: 'scrapeDomain',
    databaseTable: 'scrape_domain',
    relationshipMap: {scrape_cycle_run: 'id', scrape_domain: 'id', scrape_job: 'id'},
},
            scrapeJobReference: {
    fieldNameFormats: {
    "frontend": "scrapeJobReference",
    "backend": "scrape_job_reference",
    "database": "ref_scrape_job",
    "pretty": "Scrape Job Reference",
    "component": "ScrapeJobReference",
    "kebab": "scrape-jobReference",
    "sqlFunctionRef": "p_ref_scrape_job",
    "RestAPI": "scrapeJobReference",
    "GraphQL": "scrapeJobReference",
    "custom": "scrapeJobReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_job:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeJob:id',
    name: 'scrapeJobReference',
    displayName: 'Scrape Job Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeJob'][]>,
    entityName: 'scrapeJob',
    databaseTable: 'scrape_job',
    relationshipMap: {scrape_cycle_run: 'id', scrape_domain: 'id', scrape_job: 'id'},
},
            scrapeTaskResponseInverse: {
    fieldNameFormats: {
    "frontend": "scrapeTaskResponseInverse",
    "backend": "scrape_task_response_Inverse",
    "database": "ifk_scrape_task_response",
    "pretty": "Scrape Task Response Inverse",
    "component": "ScrapeTaskResponseInverse",
    "kebab": "scrape-task-responseInverse",
    "sqlFunctionRef": "p_ifk_scrape_task_response",
    "RestAPI": "scrapeTaskResponseInverse",
    "GraphQL": "scrapeTaskResponseInverse",
    "custom": "scrapeTaskResponseInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_task_response',
    uniqueEntityId: 'supabase_automation_matrix:scrapeTaskResponse',
    name: 'scrapeTaskResponseInverse',
    displayName: 'Scrape Task Response Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeTaskResponse'][]>,
    entityName: 'scrapeTaskResponse',
    databaseTable: 'scrape_task_response',
},
            scrapeParsedPageInverse: {
    fieldNameFormats: {
    "frontend": "scrapeParsedPageInverse",
    "backend": "scrape_parsed_page_Inverse",
    "database": "ifk_scrape_parsed_page",
    "pretty": "Scrape Parsed Page Inverse",
    "component": "ScrapeParsedPageInverse",
    "kebab": "scrape-parsed-pageInverse",
    "sqlFunctionRef": "p_ifk_scrape_parsed_page",
    "RestAPI": "scrapeParsedPageInverse",
    "GraphQL": "scrapeParsedPageInverse",
    "custom": "scrapeParsedPageInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_parsed_page',
    uniqueEntityId: 'supabase_automation_matrix:scrapeParsedPage',
    name: 'scrapeParsedPageInverse',
    displayName: 'Scrape Parsed Page Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeParsedPage'][]>,
    entityName: 'scrapeParsedPage',
    databaseTable: 'scrape_parsed_page',
},
        },
        entityNameFormats: {
    "frontend": "scrapeTask",
    "backend": "scrape_task",
    "database": "scrape_task",
    "pretty": "Scrape Task",
    "component": "ScrapeTask",
    "kebab": "scrape-task",
    "sqlFunctionRef": "p_scrape_task",
    "RestAPI": "scrapeTask",
    "GraphQL": "scrapeTask",
    "custom": "scrapeTask"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_cycle_run_id', relatedTable: 'scrape_cycle_run', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_domain_id', relatedTable: 'scrape_domain', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'scrape_job_id', relatedTable: 'scrape_job', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_task_response', relatedColumn: 'scrape_task_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_parsed_page', relatedColumn: 'scrape_task_id', junctionTable: null }
        ],
    },
scrapeTaskResponse: {
        schemaType: 'table' as const,
        entityName: 'scrapeTaskResponse',
        displayName: 'Scrape Task Response',
        uniqueTableId: 'supabase_automation_matrix:public:scrape_task_response',
        uniqueEntityId: 'supabase_automation_matrix:scrapeTaskResponse',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Id" field for scrapeTaskResponse. This is a required field. Your entry must be an uuid data type.',
        },
            scrapeTaskId: {
            fieldNameFormats: {
    "frontend": "scrapeTaskId",
    "backend": "scrape_task_id",
    "database": "scrape_task_id",
    "pretty": "Scrape Task Id",
    "component": "ScrapeTaskId",
    "kebab": "scrape-task-id",
    "sqlFunctionRef": "p_scrape_task_id",
    "RestAPI": "scrapeTaskId",
    "GraphQL": "scrapeTaskId",
    "custom": "scrapeTaskId"
} as const,
            name: 'scrapeTaskId',
            displayName: 'Scrape Task Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:scrape_task_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:scrapeTaskId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: {"table": "scrape_task", "column": "id", "entity": "scrapeTask", "field": "id"},
            description: '"Scrape Task Id" field for scrapeTaskResponse. This is a required field. Your entry must be an uuid data type. This field is a reference to a scrapeTask.',
        },
            failureReason: {
            fieldNameFormats: {
    "frontend": "failureReason",
    "backend": "failure_reason",
    "database": "failure_reason",
    "pretty": "Failure Reason",
    "component": "FailureReason",
    "kebab": "failure-reason",
    "sqlFunctionRef": "p_failure_reason",
    "RestAPI": "failureReason",
    "GraphQL": "failureReason",
    "custom": "failureReason"
} as const,
            name: 'failureReason',
            displayName: 'Failure Reason',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:failure_reason',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:failureReason',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Failure Reason" field for scrapeTaskResponse. This is an optional field. Your entry must be an string data type.',
        },
            statusCode: {
            fieldNameFormats: {
    "frontend": "statusCode",
    "backend": "status_code",
    "database": "status_code",
    "pretty": "Status Code",
    "component": "StatusCode",
    "kebab": "status-code",
    "sqlFunctionRef": "p_status_code",
    "RestAPI": "statusCode",
    "GraphQL": "statusCode",
    "custom": "statusCode"
} as const,
            name: 'statusCode',
            displayName: 'Status Code',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:status_code',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:statusCode',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Status Code" field for scrapeTaskResponse. This is an optional field. Your entry must be an number data type.',
        },
            contentPath: {
            fieldNameFormats: {
    "frontend": "contentPath",
    "backend": "content_path",
    "database": "content_path",
    "pretty": "Content Path",
    "component": "ContentPath",
    "kebab": "content-path",
    "sqlFunctionRef": "p_content_path",
    "RestAPI": "contentPath",
    "GraphQL": "contentPath",
    "custom": "contentPath"
} as const,
            name: 'contentPath',
            displayName: 'Content Path',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:content_path',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:contentPath',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Content Path" field for scrapeTaskResponse. This is a required field. Your entry must be an string data type.',
        },
            contentSize: {
            fieldNameFormats: {
    "frontend": "contentSize",
    "backend": "content_size",
    "database": "content_size",
    "pretty": "Content Size",
    "component": "ContentSize",
    "kebab": "content-size",
    "sqlFunctionRef": "p_content_size",
    "RestAPI": "contentSize",
    "GraphQL": "contentSize",
    "custom": "contentSize"
} as const,
            name: 'contentSize',
            displayName: 'Content Size',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:content_size',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:contentSize',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Content Size" field for scrapeTaskResponse. This is an optional field. Your entry must be an number data type.',
        },
            contentType: {
            fieldNameFormats: {
    "frontend": "contentType",
    "backend": "content_type",
    "database": "content_type",
    "pretty": "Content Type",
    "component": "ContentType",
    "kebab": "content-type",
    "sqlFunctionRef": "p_content_type",
    "RestAPI": "contentType",
    "GraphQL": "contentType",
    "custom": "contentType"
} as const,
            name: 'contentType',
            displayName: 'Content Type',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:content_type',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:contentType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Content Type" field for scrapeTaskResponse. This is an optional field. Your entry must be an string data type.',
        },
            responseHeaders: {
            fieldNameFormats: {
    "frontend": "responseHeaders",
    "backend": "response_headers",
    "database": "response_headers",
    "pretty": "Response Headers",
    "component": "ResponseHeaders",
    "kebab": "response-headers",
    "sqlFunctionRef": "p_response_headers",
    "RestAPI": "responseHeaders",
    "GraphQL": "responseHeaders",
    "custom": "responseHeaders"
} as const,
            name: 'responseHeaders',
            displayName: 'Response Headers',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:response_headers',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:responseHeaders',

            dataType: 'object' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Response Headers" field for scrapeTaskResponse. This is a required field. Your entry must be an object data type.',
        },
            responseUrl: {
            fieldNameFormats: {
    "frontend": "responseUrl",
    "backend": "response_url",
    "database": "response_url",
    "pretty": "Response Url",
    "component": "ResponseUrl",
    "kebab": "response-url",
    "sqlFunctionRef": "p_response_url",
    "RestAPI": "responseUrl",
    "GraphQL": "responseUrl",
    "custom": "responseUrl"
} as const,
            name: 'responseUrl',
            displayName: 'Response Url',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:response_url',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:responseUrl',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Response Url" field for scrapeTaskResponse. This is a required field. Your entry must be an string data type.',
        },
            errorLog: {
            fieldNameFormats: {
    "frontend": "errorLog",
    "backend": "error_log",
    "database": "error_log",
    "pretty": "Error Log",
    "component": "ErrorLog",
    "kebab": "error-log",
    "sqlFunctionRef": "p_error_log",
    "RestAPI": "errorLog",
    "GraphQL": "errorLog",
    "custom": "errorLog"
} as const,
            name: 'errorLog',
            displayName: 'Error Log',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:error_log',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:errorLog',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Error Log" field for scrapeTaskResponse. This is an optional field. Your entry must be an string data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:user_id',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for scrapeTaskResponse. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:created_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Created At" field for scrapeTaskResponse. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Updated At" field for scrapeTaskResponse. This is a required field. Your entry must be an date data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:is_public',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Is Public" field for scrapeTaskResponse. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:scrape_task_response:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:scrapeTaskResponse:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'scrapeTaskResponse',
            databaseTable: 'scrape_task_response',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for scrapeTaskResponse. This is an optional field. Your entry must be an boolean data type.',
        },
            scrapeTaskReference: {
    fieldNameFormats: {
    "frontend": "scrapeTaskReference",
    "backend": "scrape_task_reference",
    "database": "ref_scrape_task",
    "pretty": "Scrape Task Reference",
    "component": "ScrapeTaskReference",
    "kebab": "scrape-taskReference",
    "sqlFunctionRef": "p_ref_scrape_task",
    "RestAPI": "scrapeTaskReference",
    "GraphQL": "scrapeTaskReference",
    "custom": "scrapeTaskReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:scrape_task:id',
    uniqueFieldId: 'supabase_automation_matrix:scrapeTask:id',
    name: 'scrapeTaskReference',
    displayName: 'Scrape Task Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeTask'][]>,
    entityName: 'scrapeTask',
    databaseTable: 'scrape_task',
    relationshipMap: {scrape_task: 'id'},
},
            scrapeParsedPageInverse: {
    fieldNameFormats: {
    "frontend": "scrapeParsedPageInverse",
    "backend": "scrape_parsed_page_Inverse",
    "database": "ifk_scrape_parsed_page",
    "pretty": "Scrape Parsed Page Inverse",
    "component": "ScrapeParsedPageInverse",
    "kebab": "scrape-parsed-pageInverse",
    "sqlFunctionRef": "p_ifk_scrape_parsed_page",
    "RestAPI": "scrapeParsedPageInverse",
    "GraphQL": "scrapeParsedPageInverse",
    "custom": "scrapeParsedPageInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:scrape_parsed_page',
    uniqueEntityId: 'supabase_automation_matrix:scrapeParsedPage',
    name: 'scrapeParsedPageInverse',
    displayName: 'Scrape Parsed Page Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['scrapeParsedPage'][]>,
    entityName: 'scrapeParsedPage',
    databaseTable: 'scrape_parsed_page',
},
        },
        entityNameFormats: {
    "frontend": "scrapeTaskResponse",
    "backend": "scrape_task_response",
    "database": "scrape_task_response",
    "pretty": "Scrape Task Response",
    "component": "ScrapeTaskResponse",
    "kebab": "scrape-task-response",
    "sqlFunctionRef": "p_scrape_task_response",
    "RestAPI": "scrapeTaskResponse",
    "GraphQL": "scrapeTaskResponse",
    "custom": "scrapeTaskResponse"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'scrape_task_id', relatedTable: 'scrape_task', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'scrape_parsed_page', relatedColumn: 'scrape_task_response_id', junctionTable: null }
        ],
    },
subcategory: {
        schemaType: 'table' as const,
        entityName: 'subcategory',
        displayName: 'Subcategory',
        uniqueTableId: 'supabase_automation_matrix:public:subcategory',
        uniqueEntityId: 'supabase_automation_matrix:subcategory',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:subcategory:id',
            uniqueFieldId: 'supabase_automation_matrix:subcategory:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'subcategory',
            databaseTable: 'subcategory',
            foreignKeyReference: null,
            description: '"Id" field for subcategory. This is a required field. Your entry must be an uuid data type.',
        },
            categoryId: {
            fieldNameFormats: {
    "frontend": "categoryId",
    "backend": "category_id",
    "database": "category_id",
    "pretty": "Category Id",
    "component": "CategoryId",
    "kebab": "category-id",
    "sqlFunctionRef": "p_category_id",
    "RestAPI": "categoryId",
    "GraphQL": "categoryId",
    "custom": "categoryId"
} as const,
            name: 'categoryId',
            displayName: 'Category Id',

            uniqueColumnId: 'supabase_automation_matrix:public:subcategory:category_id',
            uniqueFieldId: 'supabase_automation_matrix:subcategory:categoryId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'subcategory',
            databaseTable: 'subcategory',
            foreignKeyReference: {"table": "category", "column": "id", "entity": "category", "field": "id"},
            description: '"Category Id" field for subcategory. This is a required field. Your entry must be an uuid data type. This field is a reference to a category.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:subcategory:name',
            uniqueFieldId: 'supabase_automation_matrix:subcategory:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'subcategory',
            databaseTable: 'subcategory',
            foreignKeyReference: null,
            description: '"Name" field for subcategory. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:subcategory:description',
            uniqueFieldId: 'supabase_automation_matrix:subcategory:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'subcategory',
            databaseTable: 'subcategory',
            foreignKeyReference: null,
            description: '"Description" field for subcategory. This is an optional field. Your entry must be an string data type.',
        },
            slug: {
            fieldNameFormats: {
    "frontend": "slug",
    "backend": "slug",
    "database": "slug",
    "pretty": "Slug",
    "component": "Slug",
    "kebab": "slug",
    "sqlFunctionRef": "p_slug",
    "RestAPI": "slug",
    "GraphQL": "slug",
    "custom": "slug"
} as const,
            name: 'slug',
            displayName: 'Slug',

            uniqueColumnId: 'supabase_automation_matrix:public:subcategory:slug',
            uniqueFieldId: 'supabase_automation_matrix:subcategory:slug',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'subcategory',
            databaseTable: 'subcategory',
            foreignKeyReference: null,
            description: '"Slug" field for subcategory. This is an optional field. Your entry must be an string data type.',
        },
            icon: {
            fieldNameFormats: {
    "frontend": "icon",
    "backend": "icon",
    "database": "icon",
    "pretty": "Icon",
    "component": "Icon",
    "kebab": "icon",
    "sqlFunctionRef": "p_icon",
    "RestAPI": "icon",
    "GraphQL": "icon",
    "custom": "icon"
} as const,
            name: 'icon',
            displayName: 'Icon',

            uniqueColumnId: 'supabase_automation_matrix:public:subcategory:icon',
            uniqueFieldId: 'supabase_automation_matrix:subcategory:icon',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "Target" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'subcategory',
            databaseTable: 'subcategory',
            foreignKeyReference: null,
            description: '"Icon" field for subcategory. This is an optional field. Your entry must be an string data type.',
        },
            features: {
            fieldNameFormats: {
    "frontend": "features",
    "backend": "features",
    "database": "features",
    "pretty": "Features",
    "component": "Features",
    "kebab": "features",
    "sqlFunctionRef": "p_features",
    "RestAPI": "features",
    "GraphQL": "features",
    "custom": "features"
} as const,
            name: 'features',
            displayName: 'Features',

            uniqueColumnId: 'supabase_automation_matrix:public:subcategory:features',
            uniqueFieldId: 'supabase_automation_matrix:subcategory:features',

            dataType: 'string[]' as const,
            isRequired: true,
            maxLength: null,
            isArray: true,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXT_ARRAY' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 3,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string[]>,
            enumValues: null,
            entityName: 'subcategory',
            databaseTable: 'subcategory',
            foreignKeyReference: null,
            description: '"Features" field for subcategory. This is a required field. Your entry must be an string[] data type. You can enter one or more entries.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:subcategory:created_at',
            uniqueFieldId: 'supabase_automation_matrix:subcategory:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'subcategory',
            databaseTable: 'subcategory',
            foreignKeyReference: null,
            description: '"Created At" field for subcategory. This is a required field. Your entry must be an date data type.',
        },
            categoryReference: {
    fieldNameFormats: {
    "frontend": "categoryReference",
    "backend": "category_reference",
    "database": "ref_category",
    "pretty": "Category Reference",
    "component": "CategoryReference",
    "kebab": "categoryReference",
    "sqlFunctionRef": "p_ref_category",
    "RestAPI": "categoryReference",
    "GraphQL": "categoryReference",
    "custom": "categoryReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:category:id',
    uniqueFieldId: 'supabase_automation_matrix:category:id',
    name: 'categoryReference',
    displayName: 'Category Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['category'][]>,
    entityName: 'category',
    databaseTable: 'category',
    relationshipMap: {category: 'id'},
},
            appletInverse: {
    fieldNameFormats: {
    "frontend": "appletInverse",
    "backend": "applet_Inverse",
    "database": "ifk_applet",
    "pretty": "Applet Inverse",
    "component": "AppletInverse",
    "kebab": "appletInverse",
    "sqlFunctionRef": "p_ifk_applet",
    "RestAPI": "appletInverse",
    "GraphQL": "appletInverse",
    "custom": "appletInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:applet',
    uniqueEntityId: 'supabase_automation_matrix:applet',
    name: 'appletInverse',
    displayName: 'Applet Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['applet'][]>,
    entityName: 'applet',
    databaseTable: 'applet',
},
            customAppletConfigsInverse: {
    fieldNameFormats: {
    "frontend": "customAppletConfigsInverse",
    "backend": "custom_applet_configs_Inverse",
    "database": "ifk_custom_applet_configs",
    "pretty": "Custom Applet Configs Inverse",
    "component": "CustomAppletConfigsInverse",
    "kebab": "custom-applet-configsInverse",
    "sqlFunctionRef": "p_ifk_custom_applet_configs",
    "RestAPI": "customAppletConfigsInverse",
    "GraphQL": "customAppletConfigsInverse",
    "custom": "customAppletConfigsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:custom_applet_configs',
    uniqueEntityId: 'supabase_automation_matrix:customAppletConfigs',
    name: 'customAppletConfigsInverse',
    displayName: 'Custom Applet Configs Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['customAppletConfigs'][]>,
    entityName: 'customAppletConfigs',
    databaseTable: 'custom_applet_configs',
},
        },
        entityNameFormats: {
    "frontend": "subcategory",
    "backend": "subcategory",
    "database": "subcategory",
    "pretty": "Subcategory",
    "component": "Subcategory",
    "kebab": "subcategory",
    "sqlFunctionRef": "p_subcategory",
    "RestAPI": "subcategory",
    "GraphQL": "subcategory",
    "custom": "subcategory"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'category_id', relatedTable: 'category', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'applet', relatedColumn: 'subcategory_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'custom_applet_configs', relatedColumn: 'subcategory_id', junctionTable: null }
        ],
    },
systemFunction: {
        schemaType: 'table' as const,
        entityName: 'systemFunction',
        displayName: 'System Function',
        uniqueTableId: 'supabase_automation_matrix:public:system_function',
        uniqueEntityId: 'supabase_automation_matrix:systemFunction',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:system_function:id',
            uniqueFieldId: 'supabase_automation_matrix:systemFunction:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'systemFunction',
            databaseTable: 'system_function',
            foreignKeyReference: null,
            description: '"Id" field for systemFunction. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:system_function:name',
            uniqueFieldId: 'supabase_automation_matrix:systemFunction:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'systemFunction',
            databaseTable: 'system_function',
            foreignKeyReference: null,
            description: '"Name" field for systemFunction. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:system_function:description',
            uniqueFieldId: 'supabase_automation_matrix:systemFunction:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'systemFunction',
            databaseTable: 'system_function',
            foreignKeyReference: null,
            description: '"Description" field for systemFunction. This is an optional field. Your entry must be an string data type.',
        },
            sample: {
            fieldNameFormats: {
    "frontend": "sample",
    "backend": "sample",
    "database": "sample",
    "pretty": "Sample",
    "component": "Sample",
    "kebab": "sample",
    "sqlFunctionRef": "p_sample",
    "RestAPI": "sample",
    "GraphQL": "sample",
    "custom": "sample"
} as const,
            name: 'sample',
            displayName: 'Sample',

            uniqueColumnId: 'supabase_automation_matrix:public:system_function:sample',
            uniqueFieldId: 'supabase_automation_matrix:systemFunction:sample',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'systemFunction',
            databaseTable: 'system_function',
            foreignKeyReference: null,
            description: '"Sample" field for systemFunction. This is an optional field. Your entry must be an string data type.',
        },
            inputParams: {
            fieldNameFormats: {
    "frontend": "inputParams",
    "backend": "input_params",
    "database": "input_params",
    "pretty": "Input Params",
    "component": "InputParams",
    "kebab": "input-params",
    "sqlFunctionRef": "p_input_params",
    "RestAPI": "inputParams",
    "GraphQL": "inputParams",
    "custom": "inputParams"
} as const,
            name: 'inputParams',
            displayName: 'Input Params',

            uniqueColumnId: 'supabase_automation_matrix:public:system_function:input_params',
            uniqueFieldId: 'supabase_automation_matrix:systemFunction:inputParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'systemFunction',
            databaseTable: 'system_function',
            foreignKeyReference: null,
            description: '"Input Params" field for systemFunction. This is an optional field. Your entry must be an object data type.',
        },
            outputOptions: {
            fieldNameFormats: {
    "frontend": "outputOptions",
    "backend": "output_options",
    "database": "output_options",
    "pretty": "Output Options",
    "component": "OutputOptions",
    "kebab": "output-options",
    "sqlFunctionRef": "p_output_options",
    "RestAPI": "outputOptions",
    "GraphQL": "outputOptions",
    "custom": "outputOptions"
} as const,
            name: 'outputOptions',
            displayName: 'Output Options',

            uniqueColumnId: 'supabase_automation_matrix:public:system_function:output_options',
            uniqueFieldId: 'supabase_automation_matrix:systemFunction:outputOptions',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'systemFunction',
            databaseTable: 'system_function',
            foreignKeyReference: null,
            description: '"Output Options" field for systemFunction. This is an optional field. Your entry must be an object data type.',
        },
            rfId: {
            fieldNameFormats: {
    "frontend": "rfId",
    "backend": "rf_id",
    "database": "rf_id",
    "pretty": "Rf Id",
    "component": "RfId",
    "kebab": "rf-id",
    "sqlFunctionRef": "p_rf_id",
    "RestAPI": "rfId",
    "GraphQL": "rfId",
    "custom": "rfId"
} as const,
            name: 'rfId',
            displayName: 'Rf Id',

            uniqueColumnId: 'supabase_automation_matrix:public:system_function:rf_id',
            uniqueFieldId: 'supabase_automation_matrix:systemFunction:rfId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'systemFunction',
            databaseTable: 'system_function',
            foreignKeyReference: {"table": "registered_function", "column": "id", "entity": "registeredFunction", "field": "id"},
            description: '"Rf Id" field for systemFunction. This is a required field. Your entry must be an uuid data type. This field is a reference to a registeredFunction.',
        },
            registeredFunctionReference: {
    fieldNameFormats: {
    "frontend": "registeredFunctionReference",
    "backend": "registered_function_reference",
    "database": "ref_registered_function",
    "pretty": "Registered Function Reference",
    "component": "RegisteredFunctionReference",
    "kebab": "registered-functionReference",
    "sqlFunctionRef": "p_ref_registered_function",
    "RestAPI": "registeredFunctionReference",
    "GraphQL": "registeredFunctionReference",
    "custom": "registeredFunctionReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:registered_function:id',
    uniqueFieldId: 'supabase_automation_matrix:registeredFunction:id',
    name: 'registeredFunctionReference',
    displayName: 'Registered Function Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['registeredFunction'][]>,
    entityName: 'registeredFunction',
    databaseTable: 'registered_function',
    relationshipMap: {registered_function: 'id'},
},
            toolInverse: {
    fieldNameFormats: {
    "frontend": "toolInverse",
    "backend": "tool_Inverse",
    "database": "ifk_tool",
    "pretty": "Tool Inverse",
    "component": "ToolInverse",
    "kebab": "toolInverse",
    "sqlFunctionRef": "p_ifk_tool",
    "RestAPI": "toolInverse",
    "GraphQL": "toolInverse",
    "custom": "toolInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:tool',
    uniqueEntityId: 'supabase_automation_matrix:tool',
    name: 'toolInverse',
    displayName: 'Tool Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['tool'][]>,
    entityName: 'tool',
    databaseTable: 'tool',
},
            recipeFunctionInverse: {
    fieldNameFormats: {
    "frontend": "recipeFunctionInverse",
    "backend": "recipe_function_Inverse",
    "database": "ifk_recipe_function",
    "pretty": "Recipe Function Inverse",
    "component": "RecipeFunctionInverse",
    "kebab": "recipe-functionInverse",
    "sqlFunctionRef": "p_ifk_recipe_function",
    "RestAPI": "recipeFunctionInverse",
    "GraphQL": "recipeFunctionInverse",
    "custom": "recipeFunctionInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_function',
    uniqueEntityId: 'supabase_automation_matrix:recipeFunction',
    name: 'recipeFunctionInverse',
    displayName: 'Recipe Function Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeFunction'][]>,
    entityName: 'recipeFunction',
    databaseTable: 'recipe_function',
},
        },
        entityNameFormats: {
    "frontend": "systemFunction",
    "backend": "system_function",
    "database": "system_function",
    "pretty": "System Function",
    "component": "SystemFunction",
    "kebab": "system-function",
    "sqlFunctionRef": "p_system_function",
    "RestAPI": "systemFunction",
    "GraphQL": "systemFunction",
    "custom": "systemFunction"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'rf_id', relatedTable: 'registered_function', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'tool', relatedColumn: 'system_function', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_function', relatedColumn: 'function', junctionTable: null }
        ],
    },
tableData: {
        schemaType: 'table' as const,
        entityName: 'tableData',
        displayName: 'Table Data',
        uniqueTableId: 'supabase_automation_matrix:public:table_data',
        uniqueEntityId: 'supabase_automation_matrix:tableData',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:table_data:id',
            uniqueFieldId: 'supabase_automation_matrix:tableData:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tableData',
            databaseTable: 'table_data',
            foreignKeyReference: null,
            description: '"Id" field for tableData. This is a required field. Your entry must be an uuid data type. This must be a unique value.',
        },
            tableId: {
            fieldNameFormats: {
    "frontend": "tableId",
    "backend": "table_id",
    "database": "table_id",
    "pretty": "Table Id",
    "component": "TableId",
    "kebab": "table-id",
    "sqlFunctionRef": "p_table_id",
    "RestAPI": "tableId",
    "GraphQL": "tableId",
    "custom": "tableId"
} as const,
            name: 'tableId',
            displayName: 'Table Id',

            uniqueColumnId: 'supabase_automation_matrix:public:table_data:table_id',
            uniqueFieldId: 'supabase_automation_matrix:tableData:tableId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tableData',
            databaseTable: 'table_data',
            foreignKeyReference: {"table": "user_tables", "column": "id", "entity": "userTables", "field": "id"},
            description: '"Table Id" field for tableData. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a userTables.',
        },
            data: {
            fieldNameFormats: {
    "frontend": "data",
    "backend": "data",
    "database": "data",
    "pretty": "Data",
    "component": "Data",
    "kebab": "data",
    "sqlFunctionRef": "p_data",
    "RestAPI": "data",
    "GraphQL": "data",
    "custom": "data"
} as const,
            name: 'data',
            displayName: 'Data',

            uniqueColumnId: 'supabase_automation_matrix:public:table_data:data',
            uniqueFieldId: 'supabase_automation_matrix:tableData:data',

            dataType: 'object' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'tableData',
            databaseTable: 'table_data',
            foreignKeyReference: null,
            description: '"Data" field for tableData. This is a required field. Your entry must be an object data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:table_data:user_id',
            uniqueFieldId: 'supabase_automation_matrix:tableData:userId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tableData',
            databaseTable: 'table_data',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for tableData. This is a required field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:table_data:is_public',
            uniqueFieldId: 'supabase_automation_matrix:tableData:isPublic',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'tableData',
            databaseTable: 'table_data',
            foreignKeyReference: null,
            description: '"Is Public" field for tableData. This is a required field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:table_data:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:tableData:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'tableData',
            databaseTable: 'table_data',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for tableData. This is a required field. Your entry must be an boolean data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:table_data:created_at',
            uniqueFieldId: 'supabase_automation_matrix:tableData:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'tableData',
            databaseTable: 'table_data',
            foreignKeyReference: null,
            description: '"Created At" field for tableData. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:table_data:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:tableData:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'tableData',
            databaseTable: 'table_data',
            foreignKeyReference: null,
            description: '"Updated At" field for tableData. This is a required field. Your entry must be an date data type.',
        },
            userTablesReference: {
    fieldNameFormats: {
    "frontend": "userTablesReference",
    "backend": "user_tables_reference",
    "database": "ref_user_tables",
    "pretty": "User Tables Reference",
    "component": "UserTablesReference",
    "kebab": "user-tablesReference",
    "sqlFunctionRef": "p_ref_user_tables",
    "RestAPI": "userTablesReference",
    "GraphQL": "userTablesReference",
    "custom": "userTablesReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:user_tables:id',
    uniqueFieldId: 'supabase_automation_matrix:userTables:id',
    name: 'userTablesReference',
    displayName: 'User Tables Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['userTables'][]>,
    entityName: 'userTables',
    databaseTable: 'user_tables',
    relationshipMap: {user_tables: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "tableData",
    "backend": "table_data",
    "database": "table_data",
    "pretty": "Table Data",
    "component": "TableData",
    "kebab": "table-data",
    "sqlFunctionRef": "p_table_data",
    "RestAPI": "tableData",
    "GraphQL": "tableData",
    "custom": "tableData"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'table_id', relatedTable: 'user_tables', relatedColumn: 'id', junctionTable: null }
        ],
    },
tableFields: {
        schemaType: 'table' as const,
        entityName: 'tableFields',
        displayName: 'Table Fields',
        uniqueTableId: 'supabase_automation_matrix:public:table_fields',
        uniqueEntityId: 'supabase_automation_matrix:tableFields',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'fieldName', databaseFieldName: 'field_name' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:id',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Id" field for tableFields. This is a required field. Your entry must be an uuid data type.',
        },
            tableId: {
            fieldNameFormats: {
    "frontend": "tableId",
    "backend": "table_id",
    "database": "table_id",
    "pretty": "Table Id",
    "component": "TableId",
    "kebab": "table-id",
    "sqlFunctionRef": "p_table_id",
    "RestAPI": "tableId",
    "GraphQL": "tableId",
    "custom": "tableId"
} as const,
            name: 'tableId',
            displayName: 'Table Id',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:table_id',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:tableId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: {"table": "user_tables", "column": "id", "entity": "userTables", "field": "id"},
            description: '"Table Id" field for tableFields. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a userTables.',
        },
            fieldName: {
            fieldNameFormats: {
    "frontend": "fieldName",
    "backend": "field_name",
    "database": "field_name",
    "pretty": "Field Name",
    "component": "FieldName",
    "kebab": "field-name",
    "sqlFunctionRef": "p_field_name",
    "RestAPI": "fieldName",
    "GraphQL": "fieldName",
    "custom": "fieldName"
} as const,
            name: 'fieldName',
            displayName: 'Field Name',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:field_name',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:fieldName',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: 100,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Field Name" field for tableFields. This is a required field. Your entry must be an string data type. Maximum Length: 100 This must be a unique value.',
        },
            displayName: {
            fieldNameFormats: {
    "frontend": "displayName",
    "backend": "display_name",
    "database": "display_name",
    "pretty": "Display Name",
    "component": "DisplayName",
    "kebab": "display-name",
    "sqlFunctionRef": "p_display_name",
    "RestAPI": "displayName",
    "GraphQL": "displayName",
    "custom": "displayName"
} as const,
            name: 'displayName',
            displayName: 'Display Name',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:display_name',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:displayName',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: 255,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 3,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Display Name" field for tableFields. This is a required field. Your entry must be an string data type. Maximum Length: 255',
        },
            dataType: {
            fieldNameFormats: {
    "frontend": "dataType",
    "backend": "data_type",
    "database": "data_type",
    "pretty": "Data Type",
    "component": "DataType",
    "kebab": "data-type",
    "sqlFunctionRef": "p_data_type",
    "RestAPI": "dataType",
    "GraphQL": "dataType",
    "custom": "dataType"
} as const,
            name: 'dataType',
            displayName: 'Data Type',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:data_type',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:dataType',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "string" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Array",
            "value": "array"
        },
        {
            "label": "Boolean",
            "value": "boolean"
        },
        {
            "label": "Date",
            "value": "date"
        },
        {
            "label": "Datetime",
            "value": "datetime"
        },
        {
            "label": "Integer",
            "value": "integer"
        },
        {
            "label": "Json",
            "value": "json"
        },
        {
            "label": "Number",
            "value": "number"
        },
        {
            "label": "String",
            "value": "string"
        }
    ],
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"array" | "boolean" | "date" | "datetime" | "integer" | "json" | "number" | "string" | undefined>,
            enumValues: ['array', 'boolean', 'date', 'datetime', 'integer', 'json', 'number', 'string'] as const,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Data Type" field for tableFields. This is a required field. Your entry must be an string data type.',
        },
            fieldOrder: {
            fieldNameFormats: {
    "frontend": "fieldOrder",
    "backend": "field_order",
    "database": "field_order",
    "pretty": "Field Order",
    "component": "FieldOrder",
    "kebab": "field-order",
    "sqlFunctionRef": "p_field_order",
    "RestAPI": "fieldOrder",
    "GraphQL": "fieldOrder",
    "custom": "fieldOrder"
} as const,
            name: 'fieldOrder',
            displayName: 'Field Order',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:field_order',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:fieldOrder',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "0" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Field Order" field for tableFields. This is a required field. Your entry must be an number data type.',
        },
            isRequired: {
            fieldNameFormats: {
    "frontend": "isRequired",
    "backend": "is_required",
    "database": "is_required",
    "pretty": "Is Required",
    "component": "IsRequired",
    "kebab": "is-required",
    "sqlFunctionRef": "p_is_required",
    "RestAPI": "isRequired",
    "GraphQL": "isRequired",
    "custom": "isRequired"
} as const,
            name: 'isRequired',
            displayName: 'Is Required',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:is_required',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:isRequired',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Is Required" field for tableFields. This is a required field. Your entry must be an boolean data type.',
        },
            defaultValue: {
            fieldNameFormats: {
    "frontend": "defaultValue",
    "backend": "default_value",
    "database": "default_value",
    "pretty": "Default Value",
    "component": "DefaultValue",
    "kebab": "default-value",
    "sqlFunctionRef": "p_default_value",
    "RestAPI": "defaultValue",
    "GraphQL": "defaultValue",
    "custom": "defaultValue"
} as const,
            name: 'defaultValue',
            displayName: 'Default Value',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:default_value',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:defaultValue',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Default Value" field for tableFields. This is an optional field. Your entry must be an object data type.',
        },
            validationRules: {
            fieldNameFormats: {
    "frontend": "validationRules",
    "backend": "validation_rules",
    "database": "validation_rules",
    "pretty": "Validation Rules",
    "component": "ValidationRules",
    "kebab": "validation-rules",
    "sqlFunctionRef": "p_validation_rules",
    "RestAPI": "validationRules",
    "GraphQL": "validationRules",
    "custom": "validationRules"
} as const,
            name: 'validationRules',
            displayName: 'Validation Rules',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:validation_rules',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:validationRules',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Validation Rules" field for tableFields. This is an optional field. Your entry must be an object data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:user_id',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:userId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for tableFields. This is a required field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:is_public',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:isPublic',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Is Public" field for tableFields. This is a required field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for tableFields. This is a required field. Your entry must be an boolean data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:created_at',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Created At" field for tableFields. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:table_fields:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:tableFields:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'tableFields',
            databaseTable: 'table_fields',
            foreignKeyReference: null,
            description: '"Updated At" field for tableFields. This is a required field. Your entry must be an date data type.',
        },
            userTablesReference: {
    fieldNameFormats: {
    "frontend": "userTablesReference",
    "backend": "user_tables_reference",
    "database": "ref_user_tables",
    "pretty": "User Tables Reference",
    "component": "UserTablesReference",
    "kebab": "user-tablesReference",
    "sqlFunctionRef": "p_ref_user_tables",
    "RestAPI": "userTablesReference",
    "GraphQL": "userTablesReference",
    "custom": "userTablesReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:user_tables:id',
    uniqueFieldId: 'supabase_automation_matrix:userTables:id',
    name: 'userTablesReference',
    displayName: 'User Tables Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['userTables'][]>,
    entityName: 'userTables',
    databaseTable: 'user_tables',
    relationshipMap: {user_tables: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "tableFields",
    "backend": "table_fields",
    "database": "table_fields",
    "pretty": "Table Fields",
    "component": "TableFields",
    "kebab": "table-fields",
    "sqlFunctionRef": "p_table_fields",
    "RestAPI": "tableFields",
    "GraphQL": "tableFields",
    "custom": "tableFields"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'table_id', relatedTable: 'user_tables', relatedColumn: 'id', junctionTable: null }
        ],
    },
taskAssignments: {
        schemaType: 'table' as const,
        entityName: 'taskAssignments',
        displayName: 'Task Assignments',
        uniqueTableId: 'supabase_automation_matrix:public:task_assignments',
        uniqueEntityId: 'supabase_automation_matrix:taskAssignments',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:task_assignments:id',
            uniqueFieldId: 'supabase_automation_matrix:taskAssignments:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskAssignments',
            databaseTable: 'task_assignments',
            foreignKeyReference: null,
            description: '"Id" field for taskAssignments. This is a required field. Your entry must be an uuid data type.',
        },
            taskId: {
            fieldNameFormats: {
    "frontend": "taskId",
    "backend": "task_id",
    "database": "task_id",
    "pretty": "Task Id",
    "component": "TaskId",
    "kebab": "task-id",
    "sqlFunctionRef": "p_task_id",
    "RestAPI": "taskId",
    "GraphQL": "taskId",
    "custom": "taskId"
} as const,
            name: 'taskId',
            displayName: 'Task Id',

            uniqueColumnId: 'supabase_automation_matrix:public:task_assignments:task_id',
            uniqueFieldId: 'supabase_automation_matrix:taskAssignments:taskId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskAssignments',
            databaseTable: 'task_assignments',
            foreignKeyReference: {"table": "tasks", "column": "id", "entity": "tasks", "field": "id"},
            description: '"Task Id" field for taskAssignments. This is an optional field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a tasks.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:task_assignments:user_id',
            uniqueFieldId: 'supabase_automation_matrix:taskAssignments:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskAssignments',
            databaseTable: 'task_assignments',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for taskAssignments. This is an optional field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a users.',
        },
            assignedBy: {
            fieldNameFormats: {
    "frontend": "assignedBy",
    "backend": "assigned_by",
    "database": "assigned_by",
    "pretty": "Assigned By",
    "component": "AssignedBy",
    "kebab": "assigned-by",
    "sqlFunctionRef": "p_assigned_by",
    "RestAPI": "assignedBy",
    "GraphQL": "assignedBy",
    "custom": "assignedBy"
} as const,
            name: 'assignedBy',
            displayName: 'Assigned By',

            uniqueColumnId: 'supabase_automation_matrix:public:task_assignments:assigned_by',
            uniqueFieldId: 'supabase_automation_matrix:taskAssignments:assignedBy',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskAssignments',
            databaseTable: 'task_assignments',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"Assigned By" field for taskAssignments. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            assignedAt: {
            fieldNameFormats: {
    "frontend": "assignedAt",
    "backend": "assigned_at",
    "database": "assigned_at",
    "pretty": "Assigned At",
    "component": "AssignedAt",
    "kebab": "assigned-at",
    "sqlFunctionRef": "p_assigned_at",
    "RestAPI": "assignedAt",
    "GraphQL": "assignedAt",
    "custom": "assignedAt"
} as const,
            name: 'assignedAt',
            displayName: 'Assigned At',

            uniqueColumnId: 'supabase_automation_matrix:public:task_assignments:assigned_at',
            uniqueFieldId: 'supabase_automation_matrix:taskAssignments:assignedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'taskAssignments',
            databaseTable: 'task_assignments',
            foreignKeyReference: null,
            description: '"Assigned At" field for taskAssignments. This is an optional field. Your entry must be an date data type.',
        },
            tasksReference: {
    fieldNameFormats: {
    "frontend": "tasksReference",
    "backend": "tasks_reference",
    "database": "ref_tasks",
    "pretty": "Tasks Reference",
    "component": "TasksReference",
    "kebab": "tasksReference",
    "sqlFunctionRef": "p_ref_tasks",
    "RestAPI": "tasksReference",
    "GraphQL": "tasksReference",
    "custom": "tasksReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:tasks:id',
    uniqueFieldId: 'supabase_automation_matrix:tasks:id',
    name: 'tasksReference',
    displayName: 'Tasks Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['tasks'][]>,
    entityName: 'tasks',
    databaseTable: 'tasks',
    relationshipMap: {tasks: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "taskAssignments",
    "backend": "task_assignments",
    "database": "task_assignments",
    "pretty": "Task Assignments",
    "component": "TaskAssignments",
    "kebab": "task-assignments",
    "sqlFunctionRef": "p_task_assignments",
    "RestAPI": "taskAssignments",
    "GraphQL": "taskAssignments",
    "custom": "taskAssignments"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'task_id', relatedTable: 'tasks', relatedColumn: 'id', junctionTable: null }
        ],
    },
taskAttachments: {
        schemaType: 'table' as const,
        entityName: 'taskAttachments',
        displayName: 'Task Attachments',
        uniqueTableId: 'supabase_automation_matrix:public:task_attachments',
        uniqueEntityId: 'supabase_automation_matrix:taskAttachments',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'fileName', databaseFieldName: 'file_name' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:task_attachments:id',
            uniqueFieldId: 'supabase_automation_matrix:taskAttachments:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskAttachments',
            databaseTable: 'task_attachments',
            foreignKeyReference: null,
            description: '"Id" field for taskAttachments. This is a required field. Your entry must be an uuid data type.',
        },
            taskId: {
            fieldNameFormats: {
    "frontend": "taskId",
    "backend": "task_id",
    "database": "task_id",
    "pretty": "Task Id",
    "component": "TaskId",
    "kebab": "task-id",
    "sqlFunctionRef": "p_task_id",
    "RestAPI": "taskId",
    "GraphQL": "taskId",
    "custom": "taskId"
} as const,
            name: 'taskId',
            displayName: 'Task Id',

            uniqueColumnId: 'supabase_automation_matrix:public:task_attachments:task_id',
            uniqueFieldId: 'supabase_automation_matrix:taskAttachments:taskId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskAttachments',
            databaseTable: 'task_attachments',
            foreignKeyReference: {"table": "tasks", "column": "id", "entity": "tasks", "field": "id"},
            description: '"Task Id" field for taskAttachments. This is an optional field. Your entry must be an uuid data type. This field is a reference to a tasks.',
        },
            fileName: {
            fieldNameFormats: {
    "frontend": "fileName",
    "backend": "file_name",
    "database": "file_name",
    "pretty": "File Name",
    "component": "FileName",
    "kebab": "file-name",
    "sqlFunctionRef": "p_file_name",
    "RestAPI": "fileName",
    "GraphQL": "fileName",
    "custom": "fileName"
} as const,
            name: 'fileName',
            displayName: 'File Name',

            uniqueColumnId: 'supabase_automation_matrix:public:task_attachments:file_name',
            uniqueFieldId: 'supabase_automation_matrix:taskAttachments:fileName',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskAttachments',
            databaseTable: 'task_attachments',
            foreignKeyReference: null,
            description: '"File Name" field for taskAttachments. This is a required field. Your entry must be an string data type.',
        },
            fileType: {
            fieldNameFormats: {
    "frontend": "fileType",
    "backend": "file_type",
    "database": "file_type",
    "pretty": "File Type",
    "component": "FileType",
    "kebab": "file-type",
    "sqlFunctionRef": "p_file_type",
    "RestAPI": "fileType",
    "GraphQL": "fileType",
    "custom": "fileType"
} as const,
            name: 'fileType',
            displayName: 'File Type',

            uniqueColumnId: 'supabase_automation_matrix:public:task_attachments:file_type',
            uniqueFieldId: 'supabase_automation_matrix:taskAttachments:fileType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskAttachments',
            databaseTable: 'task_attachments',
            foreignKeyReference: null,
            description: '"File Type" field for taskAttachments. This is an optional field. Your entry must be an string data type.',
        },
            fileSize: {
            fieldNameFormats: {
    "frontend": "fileSize",
    "backend": "file_size",
    "database": "file_size",
    "pretty": "File Size",
    "component": "FileSize",
    "kebab": "file-size",
    "sqlFunctionRef": "p_file_size",
    "RestAPI": "fileSize",
    "GraphQL": "fileSize",
    "custom": "fileSize"
} as const,
            name: 'fileSize',
            displayName: 'File Size',

            uniqueColumnId: 'supabase_automation_matrix:public:task_attachments:file_size',
            uniqueFieldId: 'supabase_automation_matrix:taskAttachments:fileSize',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'taskAttachments',
            databaseTable: 'task_attachments',
            foreignKeyReference: null,
            description: '"File Size" field for taskAttachments. This is an optional field. Your entry must be an number data type.',
        },
            filePath: {
            fieldNameFormats: {
    "frontend": "filePath",
    "backend": "file_path",
    "database": "file_path",
    "pretty": "File Path",
    "component": "FilePath",
    "kebab": "file-path",
    "sqlFunctionRef": "p_file_path",
    "RestAPI": "filePath",
    "GraphQL": "filePath",
    "custom": "filePath"
} as const,
            name: 'filePath',
            displayName: 'File Path',

            uniqueColumnId: 'supabase_automation_matrix:public:task_attachments:file_path',
            uniqueFieldId: 'supabase_automation_matrix:taskAttachments:filePath',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskAttachments',
            databaseTable: 'task_attachments',
            foreignKeyReference: null,
            description: '"File Path" field for taskAttachments. This is a required field. Your entry must be an string data type.',
        },
            uploadedBy: {
            fieldNameFormats: {
    "frontend": "uploadedBy",
    "backend": "uploaded_by",
    "database": "uploaded_by",
    "pretty": "Uploaded By",
    "component": "UploadedBy",
    "kebab": "uploaded-by",
    "sqlFunctionRef": "p_uploaded_by",
    "RestAPI": "uploadedBy",
    "GraphQL": "uploadedBy",
    "custom": "uploadedBy"
} as const,
            name: 'uploadedBy',
            displayName: 'Uploaded By',

            uniqueColumnId: 'supabase_automation_matrix:public:task_attachments:uploaded_by',
            uniqueFieldId: 'supabase_automation_matrix:taskAttachments:uploadedBy',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskAttachments',
            databaseTable: 'task_attachments',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"Uploaded By" field for taskAttachments. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            uploadedAt: {
            fieldNameFormats: {
    "frontend": "uploadedAt",
    "backend": "uploaded_at",
    "database": "uploaded_at",
    "pretty": "Uploaded At",
    "component": "UploadedAt",
    "kebab": "uploaded-at",
    "sqlFunctionRef": "p_uploaded_at",
    "RestAPI": "uploadedAt",
    "GraphQL": "uploadedAt",
    "custom": "uploadedAt"
} as const,
            name: 'uploadedAt',
            displayName: 'Uploaded At',

            uniqueColumnId: 'supabase_automation_matrix:public:task_attachments:uploaded_at',
            uniqueFieldId: 'supabase_automation_matrix:taskAttachments:uploadedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'taskAttachments',
            databaseTable: 'task_attachments',
            foreignKeyReference: null,
            description: '"Uploaded At" field for taskAttachments. This is an optional field. Your entry must be an date data type.',
        },
            tasksReference: {
    fieldNameFormats: {
    "frontend": "tasksReference",
    "backend": "tasks_reference",
    "database": "ref_tasks",
    "pretty": "Tasks Reference",
    "component": "TasksReference",
    "kebab": "tasksReference",
    "sqlFunctionRef": "p_ref_tasks",
    "RestAPI": "tasksReference",
    "GraphQL": "tasksReference",
    "custom": "tasksReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:tasks:id',
    uniqueFieldId: 'supabase_automation_matrix:tasks:id',
    name: 'tasksReference',
    displayName: 'Tasks Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['tasks'][]>,
    entityName: 'tasks',
    databaseTable: 'tasks',
    relationshipMap: {tasks: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "taskAttachments",
    "backend": "task_attachments",
    "database": "task_attachments",
    "pretty": "Task Attachments",
    "component": "TaskAttachments",
    "kebab": "task-attachments",
    "sqlFunctionRef": "p_task_attachments",
    "RestAPI": "taskAttachments",
    "GraphQL": "taskAttachments",
    "custom": "taskAttachments"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'task_id', relatedTable: 'tasks', relatedColumn: 'id', junctionTable: null }
        ],
    },
taskComments: {
        schemaType: 'table' as const,
        entityName: 'taskComments',
        displayName: 'Task Comments',
        uniqueTableId: 'supabase_automation_matrix:public:task_comments',
        uniqueEntityId: 'supabase_automation_matrix:taskComments',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:task_comments:id',
            uniqueFieldId: 'supabase_automation_matrix:taskComments:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskComments',
            databaseTable: 'task_comments',
            foreignKeyReference: null,
            description: '"Id" field for taskComments. This is a required field. Your entry must be an uuid data type.',
        },
            taskId: {
            fieldNameFormats: {
    "frontend": "taskId",
    "backend": "task_id",
    "database": "task_id",
    "pretty": "Task Id",
    "component": "TaskId",
    "kebab": "task-id",
    "sqlFunctionRef": "p_task_id",
    "RestAPI": "taskId",
    "GraphQL": "taskId",
    "custom": "taskId"
} as const,
            name: 'taskId',
            displayName: 'Task Id',

            uniqueColumnId: 'supabase_automation_matrix:public:task_comments:task_id',
            uniqueFieldId: 'supabase_automation_matrix:taskComments:taskId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskComments',
            databaseTable: 'task_comments',
            foreignKeyReference: {"table": "tasks", "column": "id", "entity": "tasks", "field": "id"},
            description: '"Task Id" field for taskComments. This is an optional field. Your entry must be an uuid data type. This field is a reference to a tasks.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:task_comments:user_id',
            uniqueFieldId: 'supabase_automation_matrix:taskComments:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskComments',
            databaseTable: 'task_comments',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for taskComments. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            content: {
            fieldNameFormats: {
    "frontend": "content",
    "backend": "content",
    "database": "content",
    "pretty": "Content",
    "component": "Content",
    "kebab": "content",
    "sqlFunctionRef": "p_content",
    "RestAPI": "content",
    "GraphQL": "content",
    "custom": "content"
} as const,
            name: 'content',
            displayName: 'Content',

            uniqueColumnId: 'supabase_automation_matrix:public:task_comments:content',
            uniqueFieldId: 'supabase_automation_matrix:taskComments:content',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'taskComments',
            databaseTable: 'task_comments',
            foreignKeyReference: null,
            description: '"Content" field for taskComments. This is a required field. Your entry must be an string data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:task_comments:created_at',
            uniqueFieldId: 'supabase_automation_matrix:taskComments:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'taskComments',
            databaseTable: 'task_comments',
            foreignKeyReference: null,
            description: '"Created At" field for taskComments. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:task_comments:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:taskComments:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'taskComments',
            databaseTable: 'task_comments',
            foreignKeyReference: null,
            description: '"Updated At" field for taskComments. This is an optional field. Your entry must be an date data type.',
        },
            tasksReference: {
    fieldNameFormats: {
    "frontend": "tasksReference",
    "backend": "tasks_reference",
    "database": "ref_tasks",
    "pretty": "Tasks Reference",
    "component": "TasksReference",
    "kebab": "tasksReference",
    "sqlFunctionRef": "p_ref_tasks",
    "RestAPI": "tasksReference",
    "GraphQL": "tasksReference",
    "custom": "tasksReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:tasks:id',
    uniqueFieldId: 'supabase_automation_matrix:tasks:id',
    name: 'tasksReference',
    displayName: 'Tasks Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['tasks'][]>,
    entityName: 'tasks',
    databaseTable: 'tasks',
    relationshipMap: {tasks: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "taskComments",
    "backend": "task_comments",
    "database": "task_comments",
    "pretty": "Task Comments",
    "component": "TaskComments",
    "kebab": "task-comments",
    "sqlFunctionRef": "p_task_comments",
    "RestAPI": "taskComments",
    "GraphQL": "taskComments",
    "custom": "taskComments"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'task_id', relatedTable: 'tasks', relatedColumn: 'id', junctionTable: null }
        ],
    },
tasks: {
        schemaType: 'table' as const,
        entityName: 'tasks',
        displayName: 'Tasks',
        uniqueTableId: 'supabase_automation_matrix:public:tasks',
        uniqueEntityId: 'supabase_automation_matrix:tasks',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'title', databaseFieldName: 'title' },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:tasks:id',
            uniqueFieldId: 'supabase_automation_matrix:tasks:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tasks',
            databaseTable: 'tasks',
            foreignKeyReference: null,
            description: '"Id" field for tasks. This is a required field. Your entry must be an uuid data type.',
        },
            title: {
            fieldNameFormats: {
    "frontend": "title",
    "backend": "title",
    "database": "title",
    "pretty": "Title",
    "component": "Title",
    "kebab": "title",
    "sqlFunctionRef": "p_title",
    "RestAPI": "title",
    "GraphQL": "title",
    "custom": "title"
} as const,
            name: 'title',
            displayName: 'Title',

            uniqueColumnId: 'supabase_automation_matrix:public:tasks:title',
            uniqueFieldId: 'supabase_automation_matrix:tasks:title',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tasks',
            databaseTable: 'tasks',
            foreignKeyReference: null,
            description: '"Title" field for tasks. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:tasks:description',
            uniqueFieldId: 'supabase_automation_matrix:tasks:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tasks',
            databaseTable: 'tasks',
            foreignKeyReference: null,
            description: '"Description" field for tasks. This is an optional field. Your entry must be an string data type.',
        },
            projectId: {
            fieldNameFormats: {
    "frontend": "projectId",
    "backend": "project_id",
    "database": "project_id",
    "pretty": "Project Id",
    "component": "ProjectId",
    "kebab": "project-id",
    "sqlFunctionRef": "p_project_id",
    "RestAPI": "projectId",
    "GraphQL": "projectId",
    "custom": "projectId"
} as const,
            name: 'projectId',
            displayName: 'Project Id',

            uniqueColumnId: 'supabase_automation_matrix:public:tasks:project_id',
            uniqueFieldId: 'supabase_automation_matrix:tasks:projectId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tasks',
            databaseTable: 'tasks',
            foreignKeyReference: {"table": "projects", "column": "id", "entity": "projects", "field": "id"},
            description: '"Project Id" field for tasks. This is an optional field. Your entry must be an uuid data type. This field is a reference to a projects.',
        },
            status: {
            fieldNameFormats: {
    "frontend": "status",
    "backend": "status",
    "database": "status",
    "pretty": "Status",
    "component": "Status",
    "kebab": "status",
    "sqlFunctionRef": "p_status",
    "RestAPI": "status",
    "GraphQL": "status",
    "custom": "status"
} as const,
            name: 'status',
            displayName: 'Status',

            uniqueColumnId: 'supabase_automation_matrix:public:tasks:status',
            uniqueFieldId: 'supabase_automation_matrix:tasks:status',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "incomplete" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tasks',
            databaseTable: 'tasks',
            foreignKeyReference: null,
            description: '"Status" field for tasks. This is a required field. Your entry must be an string data type.',
        },
            dueDate: {
            fieldNameFormats: {
    "frontend": "dueDate",
    "backend": "due_date",
    "database": "due_date",
    "pretty": "Due Date",
    "component": "DueDate",
    "kebab": "due-date",
    "sqlFunctionRef": "p_due_date",
    "RestAPI": "dueDate",
    "GraphQL": "dueDate",
    "custom": "dueDate"
} as const,
            name: 'dueDate',
            displayName: 'Due Date',

            uniqueColumnId: 'supabase_automation_matrix:public:tasks:due_date',
            uniqueFieldId: 'supabase_automation_matrix:tasks:dueDate',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'tasks',
            databaseTable: 'tasks',
            foreignKeyReference: null,
            description: '"Due Date" field for tasks. This is an optional field. Your entry must be an date data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:tasks:created_at',
            uniqueFieldId: 'supabase_automation_matrix:tasks:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'tasks',
            databaseTable: 'tasks',
            foreignKeyReference: null,
            description: '"Created At" field for tasks. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:tasks:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:tasks:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'tasks',
            databaseTable: 'tasks',
            foreignKeyReference: null,
            description: '"Updated At" field for tasks. This is an optional field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:tasks:user_id',
            uniqueFieldId: 'supabase_automation_matrix:tasks:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tasks',
            databaseTable: 'tasks',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for tasks. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:tasks:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:tasks:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'tasks',
            databaseTable: 'tasks',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for tasks. This is an optional field. Your entry must be an boolean data type.',
        },
            projectsReference: {
    fieldNameFormats: {
    "frontend": "projectsReference",
    "backend": "projects_reference",
    "database": "ref_projects",
    "pretty": "Projects Reference",
    "component": "ProjectsReference",
    "kebab": "projectsReference",
    "sqlFunctionRef": "p_ref_projects",
    "RestAPI": "projectsReference",
    "GraphQL": "projectsReference",
    "custom": "projectsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:projects:id',
    uniqueFieldId: 'supabase_automation_matrix:projects:id',
    name: 'projectsReference',
    displayName: 'Projects Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['projects'][]>,
    entityName: 'projects',
    databaseTable: 'projects',
    relationshipMap: {projects: 'id'},
},
            taskAssignmentsInverse: {
    fieldNameFormats: {
    "frontend": "taskAssignmentsInverse",
    "backend": "task_assignments_Inverse",
    "database": "ifk_task_assignments",
    "pretty": "Task Assignments Inverse",
    "component": "TaskAssignmentsInverse",
    "kebab": "task-assignmentsInverse",
    "sqlFunctionRef": "p_ifk_task_assignments",
    "RestAPI": "taskAssignmentsInverse",
    "GraphQL": "taskAssignmentsInverse",
    "custom": "taskAssignmentsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:task_assignments',
    uniqueEntityId: 'supabase_automation_matrix:taskAssignments',
    name: 'taskAssignmentsInverse',
    displayName: 'Task Assignments Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['taskAssignments'][]>,
    entityName: 'taskAssignments',
    databaseTable: 'task_assignments',
},
            taskAttachmentsInverse: {
    fieldNameFormats: {
    "frontend": "taskAttachmentsInverse",
    "backend": "task_attachments_Inverse",
    "database": "ifk_task_attachments",
    "pretty": "Task Attachments Inverse",
    "component": "TaskAttachmentsInverse",
    "kebab": "task-attachmentsInverse",
    "sqlFunctionRef": "p_ifk_task_attachments",
    "RestAPI": "taskAttachmentsInverse",
    "GraphQL": "taskAttachmentsInverse",
    "custom": "taskAttachmentsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:task_attachments',
    uniqueEntityId: 'supabase_automation_matrix:taskAttachments',
    name: 'taskAttachmentsInverse',
    displayName: 'Task Attachments Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['taskAttachments'][]>,
    entityName: 'taskAttachments',
    databaseTable: 'task_attachments',
},
            taskCommentsInverse: {
    fieldNameFormats: {
    "frontend": "taskCommentsInverse",
    "backend": "task_comments_Inverse",
    "database": "ifk_task_comments",
    "pretty": "Task Comments Inverse",
    "component": "TaskCommentsInverse",
    "kebab": "task-commentsInverse",
    "sqlFunctionRef": "p_ifk_task_comments",
    "RestAPI": "taskCommentsInverse",
    "GraphQL": "taskCommentsInverse",
    "custom": "taskCommentsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:task_comments',
    uniqueEntityId: 'supabase_automation_matrix:taskComments',
    name: 'taskCommentsInverse',
    displayName: 'Task Comments Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['taskComments'][]>,
    entityName: 'taskComments',
    databaseTable: 'task_comments',
},
        },
        entityNameFormats: {
    "frontend": "tasks",
    "backend": "tasks",
    "database": "tasks",
    "pretty": "Tasks",
    "component": "Tasks",
    "kebab": "tasks",
    "sqlFunctionRef": "p_tasks",
    "RestAPI": "tasks",
    "GraphQL": "tasks",
    "custom": "tasks"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'project_id', relatedTable: 'projects', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'task_assignments', relatedColumn: 'task_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'task_attachments', relatedColumn: 'task_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'task_comments', relatedColumn: 'task_id', junctionTable: null }
        ],
    },
tool: {
        schemaType: 'table' as const,
        entityName: 'tool',
        displayName: 'Tool',
        uniqueTableId: 'supabase_automation_matrix:public:tool',
        uniqueEntityId: 'supabase_automation_matrix:tool',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:tool:id',
            uniqueFieldId: 'supabase_automation_matrix:tool:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tool',
            databaseTable: 'tool',
            foreignKeyReference: null,
            description: '"Id" field for tool. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:tool:name',
            uniqueFieldId: 'supabase_automation_matrix:tool:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tool',
            databaseTable: 'tool',
            foreignKeyReference: null,
            description: '"Name" field for tool. This is a required field. Your entry must be an string data type.',
        },
            source: {
            fieldNameFormats: {
    "frontend": "source",
    "backend": "source",
    "database": "source",
    "pretty": "Source",
    "component": "Source",
    "kebab": "source",
    "sqlFunctionRef": "p_source",
    "RestAPI": "source",
    "GraphQL": "source",
    "custom": "source"
} as const,
            name: 'source',
            displayName: 'Source',

            uniqueColumnId: 'supabase_automation_matrix:public:tool:source',
            uniqueFieldId: 'supabase_automation_matrix:tool:source',

            dataType: 'object' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "{'host': 'ame'}" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'tool',
            databaseTable: 'tool',
            foreignKeyReference: null,
            description: '"Source" field for tool. This is a required field. Your entry must be an object data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:tool:description',
            uniqueFieldId: 'supabase_automation_matrix:tool:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tool',
            databaseTable: 'tool',
            foreignKeyReference: null,
            description: '"Description" field for tool. This is an optional field. Your entry must be an string data type.',
        },
            parameters: {
            fieldNameFormats: {
    "frontend": "parameters",
    "backend": "parameters",
    "database": "parameters",
    "pretty": "Parameters",
    "component": "Parameters",
    "kebab": "parameters",
    "sqlFunctionRef": "p_parameters",
    "RestAPI": "parameters",
    "GraphQL": "parameters",
    "custom": "parameters"
} as const,
            name: 'parameters',
            displayName: 'Parameters',

            uniqueColumnId: 'supabase_automation_matrix:public:tool:parameters',
            uniqueFieldId: 'supabase_automation_matrix:tool:parameters',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'tool',
            databaseTable: 'tool',
            foreignKeyReference: null,
            description: '"Parameters" field for tool. This is an optional field. Your entry must be an object data type.',
        },
            requiredArgs: {
            fieldNameFormats: {
    "frontend": "requiredArgs",
    "backend": "required_args",
    "database": "required_args",
    "pretty": "Required Args",
    "component": "RequiredArgs",
    "kebab": "required-args",
    "sqlFunctionRef": "p_required_args",
    "RestAPI": "requiredArgs",
    "GraphQL": "requiredArgs",
    "custom": "requiredArgs"
} as const,
            name: 'requiredArgs',
            displayName: 'Required Args',

            uniqueColumnId: 'supabase_automation_matrix:public:tool:required_args',
            uniqueFieldId: 'supabase_automation_matrix:tool:requiredArgs',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'tool',
            databaseTable: 'tool',
            foreignKeyReference: null,
            description: '"Required Args" field for tool. This is an optional field. Your entry must be an object data type.',
        },
            systemFunction: {
            fieldNameFormats: {
    "frontend": "systemFunction",
    "backend": "system_function",
    "database": "system_function",
    "pretty": "System Function",
    "component": "SystemFunction",
    "kebab": "system-function",
    "sqlFunctionRef": "p_system_function",
    "RestAPI": "systemFunction",
    "GraphQL": "systemFunction",
    "custom": "systemFunction"
} as const,
            name: 'systemFunction',
            displayName: 'System Function',

            uniqueColumnId: 'supabase_automation_matrix:public:tool:system_function',
            uniqueFieldId: 'supabase_automation_matrix:tool:systemFunction',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'tool',
            databaseTable: 'tool',
            foreignKeyReference: {"table": "system_function", "column": "id", "entity": "systemFunction", "field": "id"},
            description: '"System Function" field for tool. This is an optional field. Your entry must be an uuid data type. This field is a reference to a systemFunction.',
        },
            additionalParams: {
            fieldNameFormats: {
    "frontend": "additionalParams",
    "backend": "additional_params",
    "database": "additional_params",
    "pretty": "Additional Params",
    "component": "AdditionalParams",
    "kebab": "additional-params",
    "sqlFunctionRef": "p_additional_params",
    "RestAPI": "additionalParams",
    "GraphQL": "additionalParams",
    "custom": "additionalParams"
} as const,
            name: 'additionalParams',
            displayName: 'Additional Params',

            uniqueColumnId: 'supabase_automation_matrix:public:tool:additional_params',
            uniqueFieldId: 'supabase_automation_matrix:tool:additionalParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'tool',
            databaseTable: 'tool',
            foreignKeyReference: null,
            description: '"Additional Params" field for tool. This is an optional field. Your entry must be an object data type.',
        },
            systemFunctionReference: {
    fieldNameFormats: {
    "frontend": "systemFunctionReference",
    "backend": "system_function_reference",
    "database": "ref_system_function",
    "pretty": "System Function Reference",
    "component": "SystemFunctionReference",
    "kebab": "system-functionReference",
    "sqlFunctionRef": "p_ref_system_function",
    "RestAPI": "systemFunctionReference",
    "GraphQL": "systemFunctionReference",
    "custom": "systemFunctionReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:system_function:id',
    uniqueFieldId: 'supabase_automation_matrix:systemFunction:id',
    name: 'systemFunctionReference',
    displayName: 'System Function Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['systemFunction'][]>,
    entityName: 'systemFunction',
    databaseTable: 'system_function',
    relationshipMap: {system_function: 'id'},
},
            recipeToolInverse: {
    fieldNameFormats: {
    "frontend": "recipeToolInverse",
    "backend": "recipe_tool_Inverse",
    "database": "ifk_recipe_tool",
    "pretty": "Recipe Tool Inverse",
    "component": "RecipeToolInverse",
    "kebab": "recipe-toolInverse",
    "sqlFunctionRef": "p_ifk_recipe_tool",
    "RestAPI": "recipeToolInverse",
    "GraphQL": "recipeToolInverse",
    "custom": "recipeToolInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:recipe_tool',
    uniqueEntityId: 'supabase_automation_matrix:recipeTool',
    name: 'recipeToolInverse',
    displayName: 'Recipe Tool Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['recipeTool'][]>,
    entityName: 'recipeTool',
    databaseTable: 'recipe_tool',
},
        },
        entityNameFormats: {
    "frontend": "tool",
    "backend": "tool",
    "database": "tool",
    "pretty": "Tool",
    "component": "Tool",
    "kebab": "tool",
    "sqlFunctionRef": "p_tool",
    "RestAPI": "tool",
    "GraphQL": "tool",
    "custom": "tool"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'system_function', relatedTable: 'system_function', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'recipe_tool', relatedColumn: 'tool', junctionTable: null }
        ],
    },
transformer: {
        schemaType: 'table' as const,
        entityName: 'transformer',
        displayName: 'Transformer',
        uniqueTableId: 'supabase_automation_matrix:public:transformer',
        uniqueEntityId: 'supabase_automation_matrix:transformer',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:transformer:id',
            uniqueFieldId: 'supabase_automation_matrix:transformer:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'transformer',
            databaseTable: 'transformer',
            foreignKeyReference: null,
            description: '"Id" field for transformer. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:transformer:name',
            uniqueFieldId: 'supabase_automation_matrix:transformer:name',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'transformer',
            databaseTable: 'transformer',
            foreignKeyReference: null,
            description: '"Name" field for transformer. This is an optional field. Your entry must be an string data type.',
        },
            inputParams: {
            fieldNameFormats: {
    "frontend": "inputParams",
    "backend": "input_params",
    "database": "input_params",
    "pretty": "Input Params",
    "component": "InputParams",
    "kebab": "input-params",
    "sqlFunctionRef": "p_input_params",
    "RestAPI": "inputParams",
    "GraphQL": "inputParams",
    "custom": "inputParams"
} as const,
            name: 'inputParams',
            displayName: 'Input Params',

            uniqueColumnId: 'supabase_automation_matrix:public:transformer:input_params',
            uniqueFieldId: 'supabase_automation_matrix:transformer:inputParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'transformer',
            databaseTable: 'transformer',
            foreignKeyReference: null,
            description: '"Input Params" field for transformer. This is an optional field. Your entry must be an object data type.',
        },
            outputParams: {
            fieldNameFormats: {
    "frontend": "outputParams",
    "backend": "output_params",
    "database": "output_params",
    "pretty": "Output Params",
    "component": "OutputParams",
    "kebab": "output-params",
    "sqlFunctionRef": "p_output_params",
    "RestAPI": "outputParams",
    "GraphQL": "outputParams",
    "custom": "outputParams"
} as const,
            name: 'outputParams',
            displayName: 'Output Params',

            uniqueColumnId: 'supabase_automation_matrix:public:transformer:output_params',
            uniqueFieldId: 'supabase_automation_matrix:transformer:outputParams',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'transformer',
            databaseTable: 'transformer',
            foreignKeyReference: null,
            description: '"Output Params" field for transformer. This is an optional field. Your entry must be an object data type.',
        },
            actionInverse: {
    fieldNameFormats: {
    "frontend": "actionInverse",
    "backend": "action_Inverse",
    "database": "ifk_action",
    "pretty": "Action Inverse",
    "component": "ActionInverse",
    "kebab": "actionInverse",
    "sqlFunctionRef": "p_ifk_action",
    "RestAPI": "actionInverse",
    "GraphQL": "actionInverse",
    "custom": "actionInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:action',
    uniqueEntityId: 'supabase_automation_matrix:action',
    name: 'actionInverse',
    displayName: 'Action Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['action'][]>,
    entityName: 'action',
    databaseTable: 'action',
},
        },
        entityNameFormats: {
    "frontend": "transformer",
    "backend": "transformer",
    "database": "transformer",
    "pretty": "Transformer",
    "component": "Transformer",
    "kebab": "transformer",
    "sqlFunctionRef": "p_transformer",
    "RestAPI": "transformer",
    "GraphQL": "transformer",
    "custom": "transformer"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'action', relatedColumn: 'transformer', junctionTable: null }
        ],
    },
userListItems: {
        schemaType: 'table' as const,
        entityName: 'userListItems',
        displayName: 'User List Items',
        uniqueTableId: 'supabase_automation_matrix:public:user_list_items',
        uniqueEntityId: 'supabase_automation_matrix:userListItems',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'label', databaseFieldName: 'label' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:id',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Id" field for userListItems. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:created_at',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Created At" field for userListItems. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Updated At" field for userListItems. This is an optional field. Your entry must be an date data type.',
        },
            label: {
            fieldNameFormats: {
    "frontend": "label",
    "backend": "label",
    "database": "label",
    "pretty": "Label",
    "component": "Label",
    "kebab": "label",
    "sqlFunctionRef": "p_label",
    "RestAPI": "label",
    "GraphQL": "label",
    "custom": "label"
} as const,
            name: 'label',
            displayName: 'Label',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:label',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:label',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Label" field for userListItems. This is an optional field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:description',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Description" field for userListItems. This is an optional field. Your entry must be an string data type.',
        },
            helpText: {
            fieldNameFormats: {
    "frontend": "helpText",
    "backend": "help_text",
    "database": "help_text",
    "pretty": "Help Text",
    "component": "HelpText",
    "kebab": "help-text",
    "sqlFunctionRef": "p_help_text",
    "RestAPI": "helpText",
    "GraphQL": "helpText",
    "custom": "helpText"
} as const,
            name: 'helpText',
            displayName: 'Help Text',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:help_text',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:helpText',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Help Text" field for userListItems. This is an optional field. Your entry must be an string data type.',
        },
            groupName: {
            fieldNameFormats: {
    "frontend": "groupName",
    "backend": "group_name",
    "database": "group_name",
    "pretty": "Group Name",
    "component": "GroupName",
    "kebab": "group-name",
    "sqlFunctionRef": "p_group_name",
    "RestAPI": "groupName",
    "GraphQL": "groupName",
    "custom": "groupName"
} as const,
            name: 'groupName',
            displayName: 'Group Name',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:group_name',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:groupName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Group Name" field for userListItems. This is an optional field. Your entry must be an string data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:user_id',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for userListItems. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:is_public',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Is Public" field for userListItems. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for userListItems. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:public_read',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Public Read" field for userListItems. This is an optional field. Your entry must be an boolean data type.',
        },
            listId: {
            fieldNameFormats: {
    "frontend": "listId",
    "backend": "list_id",
    "database": "list_id",
    "pretty": "List Id",
    "component": "ListId",
    "kebab": "list-id",
    "sqlFunctionRef": "p_list_id",
    "RestAPI": "listId",
    "GraphQL": "listId",
    "custom": "listId"
} as const,
            name: 'listId',
            displayName: 'List Id',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:list_id',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:listId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: {"table": "user_lists", "column": "id", "entity": "userLists", "field": "id"},
            description: '"List Id" field for userListItems. This is an optional field. Your entry must be an uuid data type. This field is a reference to a userLists.',
        },
            iconName: {
            fieldNameFormats: {
    "frontend": "iconName",
    "backend": "icon_name",
    "database": "icon_name",
    "pretty": "Icon Name",
    "component": "IconName",
    "kebab": "icon-name",
    "sqlFunctionRef": "p_icon_name",
    "RestAPI": "iconName",
    "GraphQL": "iconName",
    "custom": "iconName"
} as const,
            name: 'iconName',
            displayName: 'Icon Name',

            uniqueColumnId: 'supabase_automation_matrix:public:user_list_items:icon_name',
            uniqueFieldId: 'supabase_automation_matrix:userListItems:iconName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userListItems',
            databaseTable: 'user_list_items',
            foreignKeyReference: null,
            description: '"Icon Name" field for userListItems. This is an optional field. Your entry must be an string data type.',
        },
            userListsReference: {
    fieldNameFormats: {
    "frontend": "userListsReference",
    "backend": "user_lists_reference",
    "database": "ref_user_lists",
    "pretty": "User Lists Reference",
    "component": "UserListsReference",
    "kebab": "user-listsReference",
    "sqlFunctionRef": "p_ref_user_lists",
    "RestAPI": "userListsReference",
    "GraphQL": "userListsReference",
    "custom": "userListsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:user_lists:id',
    uniqueFieldId: 'supabase_automation_matrix:userLists:id',
    name: 'userListsReference',
    displayName: 'User Lists Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['userLists'][]>,
    entityName: 'userLists',
    databaseTable: 'user_lists',
    relationshipMap: {user_lists: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "userListItems",
    "backend": "user_list_items",
    "database": "user_list_items",
    "pretty": "User List Items",
    "component": "UserListItems",
    "kebab": "user-list-items",
    "sqlFunctionRef": "p_user_list_items",
    "RestAPI": "userListItems",
    "GraphQL": "userListItems",
    "custom": "userListItems"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'list_id', relatedTable: 'user_lists', relatedColumn: 'id', junctionTable: null }
        ],
    },
userLists: {
        schemaType: 'table' as const,
        entityName: 'userLists',
        displayName: 'User Lists',
        uniqueTableId: 'supabase_automation_matrix:public:user_lists',
        uniqueEntityId: 'supabase_automation_matrix:userLists',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'listName', databaseFieldName: 'list_name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:user_lists:id',
            uniqueFieldId: 'supabase_automation_matrix:userLists:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userLists',
            databaseTable: 'user_lists',
            foreignKeyReference: null,
            description: '"Id" field for userLists. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:user_lists:created_at',
            uniqueFieldId: 'supabase_automation_matrix:userLists:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'userLists',
            databaseTable: 'user_lists',
            foreignKeyReference: null,
            description: '"Created At" field for userLists. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:user_lists:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:userLists:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'userLists',
            databaseTable: 'user_lists',
            foreignKeyReference: null,
            description: '"Updated At" field for userLists. This is an optional field. Your entry must be an date data type.',
        },
            listName: {
            fieldNameFormats: {
    "frontend": "listName",
    "backend": "list_name",
    "database": "list_name",
    "pretty": "List Name",
    "component": "ListName",
    "kebab": "list-name",
    "sqlFunctionRef": "p_list_name",
    "RestAPI": "listName",
    "GraphQL": "listName",
    "custom": "listName"
} as const,
            name: 'listName',
            displayName: 'List Name',

            uniqueColumnId: 'supabase_automation_matrix:public:user_lists:list_name',
            uniqueFieldId: 'supabase_automation_matrix:userLists:listName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userLists',
            databaseTable: 'user_lists',
            foreignKeyReference: null,
            description: '"List Name" field for userLists. This is an optional field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:user_lists:description',
            uniqueFieldId: 'supabase_automation_matrix:userLists:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userLists',
            databaseTable: 'user_lists',
            foreignKeyReference: null,
            description: '"Description" field for userLists. This is an optional field. Your entry must be an string data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:user_lists:user_id',
            uniqueFieldId: 'supabase_automation_matrix:userLists:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userLists',
            databaseTable: 'user_lists',
            foreignKeyReference: null,
            description: '"User Id" field for userLists. This is an optional field. Your entry must be an uuid data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:user_lists:is_public',
            uniqueFieldId: 'supabase_automation_matrix:userLists:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'userLists',
            databaseTable: 'user_lists',
            foreignKeyReference: null,
            description: '"Is Public" field for userLists. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:user_lists:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:userLists:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'userLists',
            databaseTable: 'user_lists',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for userLists. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:user_lists:public_read',
            uniqueFieldId: 'supabase_automation_matrix:userLists:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'userLists',
            databaseTable: 'user_lists',
            foreignKeyReference: null,
            description: '"Public Read" field for userLists. This is an optional field. Your entry must be an boolean data type.',
        },
            userListItemsInverse: {
    fieldNameFormats: {
    "frontend": "userListItemsInverse",
    "backend": "user_list_items_Inverse",
    "database": "ifk_user_list_items",
    "pretty": "User List Items Inverse",
    "component": "UserListItemsInverse",
    "kebab": "user-list-itemsInverse",
    "sqlFunctionRef": "p_ifk_user_list_items",
    "RestAPI": "userListItemsInverse",
    "GraphQL": "userListItemsInverse",
    "custom": "userListItemsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:user_list_items',
    uniqueEntityId: 'supabase_automation_matrix:userListItems',
    name: 'userListItemsInverse',
    displayName: 'User List Items Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['userListItems'][]>,
    entityName: 'userListItems',
    databaseTable: 'user_list_items',
},
        },
        entityNameFormats: {
    "frontend": "userLists",
    "backend": "user_lists",
    "database": "user_lists",
    "pretty": "User Lists",
    "component": "UserLists",
    "kebab": "user-lists",
    "sqlFunctionRef": "p_user_lists",
    "RestAPI": "userLists",
    "GraphQL": "userLists",
    "custom": "userLists"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'user_list_items', relatedColumn: 'list_id', junctionTable: null }
        ],
    },
userPreferences: {
        schemaType: 'table' as const,
        entityName: 'userPreferences',
        displayName: 'User Preferences',
        uniqueTableId: 'supabase_automation_matrix:public:user_preferences',
        uniqueEntityId: 'supabase_automation_matrix:userPreferences',
        primaryKey: 'userId',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "userId"
    ],
    "database_fields": [
        "user_id"
    ],
    "where_template": {
        "user_id": null
    }
},
        displayFieldMetadata: { fieldName: 'userId', databaseFieldName: 'user_id' },
        defaultFetchStrategy: 'simple',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:user_preferences:user_id',
            uniqueFieldId: 'supabase_automation_matrix:userPreferences:userId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userPreferences',
            databaseTable: 'user_preferences',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for userPreferences. This is a required field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            preferences: {
            fieldNameFormats: {
    "frontend": "preferences",
    "backend": "preferences",
    "database": "preferences",
    "pretty": "Preferences",
    "component": "Preferences",
    "kebab": "preferences",
    "sqlFunctionRef": "p_preferences",
    "RestAPI": "preferences",
    "GraphQL": "preferences",
    "custom": "preferences"
} as const,
            name: 'preferences',
            displayName: 'Preferences',

            uniqueColumnId: 'supabase_automation_matrix:public:user_preferences:preferences',
            uniqueFieldId: 'supabase_automation_matrix:userPreferences:preferences',

            dataType: 'object' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'userPreferences',
            databaseTable: 'user_preferences',
            foreignKeyReference: null,
            description: '"Preferences" field for userPreferences. This is a required field. Your entry must be an object data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:user_preferences:created_at',
            uniqueFieldId: 'supabase_automation_matrix:userPreferences:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'userPreferences',
            databaseTable: 'user_preferences',
            foreignKeyReference: null,
            description: '"Created At" field for userPreferences. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:user_preferences:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:userPreferences:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'userPreferences',
            databaseTable: 'user_preferences',
            foreignKeyReference: null,
            description: '"Updated At" field for userPreferences. This is a required field. Your entry must be an date data type.',
        },
        },
        entityNameFormats: {
    "frontend": "userPreferences",
    "backend": "user_preferences",
    "database": "user_preferences",
    "pretty": "User Preferences",
    "component": "UserPreferences",
    "kebab": "user-preferences",
    "sqlFunctionRef": "p_user_preferences",
    "RestAPI": "userPreferences",
    "GraphQL": "userPreferences",
    "custom": "userPreferences"
},
        relationships: [
            
        ],
    },
userTables: {
        schemaType: 'table' as const,
        entityName: 'userTables',
        displayName: 'User Tables',
        uniqueTableId: 'supabase_automation_matrix:public:user_tables',
        uniqueEntityId: 'supabase_automation_matrix:userTables',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'tableName', databaseFieldName: 'table_name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:user_tables:id',
            uniqueFieldId: 'supabase_automation_matrix:userTables:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userTables',
            databaseTable: 'user_tables',
            foreignKeyReference: null,
            description: '"Id" field for userTables. This is a required field. Your entry must be an uuid data type.',
        },
            tableName: {
            fieldNameFormats: {
    "frontend": "tableName",
    "backend": "table_name",
    "database": "table_name",
    "pretty": "Table Name",
    "component": "TableName",
    "kebab": "table-name",
    "sqlFunctionRef": "p_table_name",
    "RestAPI": "tableName",
    "GraphQL": "tableName",
    "custom": "tableName"
} as const,
            name: 'tableName',
            displayName: 'Table Name',

            uniqueColumnId: 'supabase_automation_matrix:public:user_tables:table_name',
            uniqueFieldId: 'supabase_automation_matrix:userTables:tableName',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: 255,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 3,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userTables',
            databaseTable: 'user_tables',
            foreignKeyReference: null,
            description: '"Table Name" field for userTables. This is a required field. Your entry must be an string data type. Maximum Length: 255 This must be a unique value.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:user_tables:description',
            uniqueFieldId: 'supabase_automation_matrix:userTables:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userTables',
            databaseTable: 'user_tables',
            foreignKeyReference: null,
            description: '"Description" field for userTables. This is an optional field. Your entry must be an string data type.',
        },
            version: {
            fieldNameFormats: {
    "frontend": "version",
    "backend": "version",
    "database": "version",
    "pretty": "Version",
    "component": "Version",
    "kebab": "version",
    "sqlFunctionRef": "p_version",
    "RestAPI": "version",
    "GraphQL": "version",
    "custom": "version"
} as const,
            name: 'version',
            displayName: 'Version',

            uniqueColumnId: 'supabase_automation_matrix:public:user_tables:version',
            uniqueFieldId: 'supabase_automation_matrix:userTables:version',

            dataType: 'number' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "1" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "integer",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'userTables',
            databaseTable: 'user_tables',
            foreignKeyReference: null,
            description: '"Version" field for userTables. This is a required field. Your entry must be an number data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:user_tables:user_id',
            uniqueFieldId: 'supabase_automation_matrix:userTables:userId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'userTables',
            databaseTable: 'user_tables',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for userTables. This is a required field. Your entry must be an uuid data type. This must be a unique value. This field is a reference to a users.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:user_tables:is_public',
            uniqueFieldId: 'supabase_automation_matrix:userTables:isPublic',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'userTables',
            databaseTable: 'user_tables',
            foreignKeyReference: null,
            description: '"Is Public" field for userTables. This is a required field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:user_tables:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:userTables:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'userTables',
            databaseTable: 'user_tables',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for userTables. This is a required field. Your entry must be an boolean data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:user_tables:created_at',
            uniqueFieldId: 'supabase_automation_matrix:userTables:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'userTables',
            databaseTable: 'user_tables',
            foreignKeyReference: null,
            description: '"Created At" field for userTables. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:user_tables:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:userTables:updatedAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'userTables',
            databaseTable: 'user_tables',
            foreignKeyReference: null,
            description: '"Updated At" field for userTables. This is a required field. Your entry must be an date data type.',
        },
            tableFieldsInverse: {
    fieldNameFormats: {
    "frontend": "tableFieldsInverse",
    "backend": "table_fields_Inverse",
    "database": "ifk_table_fields",
    "pretty": "Table Fields Inverse",
    "component": "TableFieldsInverse",
    "kebab": "table-fieldsInverse",
    "sqlFunctionRef": "p_ifk_table_fields",
    "RestAPI": "tableFieldsInverse",
    "GraphQL": "tableFieldsInverse",
    "custom": "tableFieldsInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:table_fields',
    uniqueEntityId: 'supabase_automation_matrix:tableFields',
    name: 'tableFieldsInverse',
    displayName: 'Table Fields Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['tableFields'][]>,
    entityName: 'tableFields',
    databaseTable: 'table_fields',
},
            tableDataInverse: {
    fieldNameFormats: {
    "frontend": "tableDataInverse",
    "backend": "table_data_Inverse",
    "database": "ifk_table_data",
    "pretty": "Table Data Inverse",
    "component": "TableDataInverse",
    "kebab": "table-dataInverse",
    "sqlFunctionRef": "p_ifk_table_data",
    "RestAPI": "tableDataInverse",
    "GraphQL": "tableDataInverse",
    "custom": "tableDataInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:table_data',
    uniqueEntityId: 'supabase_automation_matrix:tableData',
    name: 'tableDataInverse',
    displayName: 'Table Data Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['tableData'][]>,
    entityName: 'tableData',
    databaseTable: 'table_data',
},
        },
        entityNameFormats: {
    "frontend": "userTables",
    "backend": "user_tables",
    "database": "user_tables",
    "pretty": "User Tables",
    "component": "UserTables",
    "kebab": "user-tables",
    "sqlFunctionRef": "p_user_tables",
    "RestAPI": "userTables",
    "GraphQL": "userTables",
    "custom": "userTables"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'table_fields', relatedColumn: 'table_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'table_data', relatedColumn: 'table_id', junctionTable: null }
        ],
    },
wcClaim: {
        schemaType: 'table' as const,
        entityName: 'wcClaim',
        displayName: 'Wc Claim',
        uniqueTableId: 'supabase_automation_matrix:public:wc_claim',
        uniqueEntityId: 'supabase_automation_matrix:wcClaim',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'applicantName', databaseFieldName: 'applicant_name' },
        defaultFetchStrategy: 'ifk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_claim:id',
            uniqueFieldId: 'supabase_automation_matrix:wcClaim:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcClaim',
            databaseTable: 'wc_claim',
            foreignKeyReference: null,
            description: '"Id" field for wcClaim. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_claim:created_at',
            uniqueFieldId: 'supabase_automation_matrix:wcClaim:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'wcClaim',
            databaseTable: 'wc_claim',
            foreignKeyReference: null,
            description: '"Created At" field for wcClaim. This is a required field. Your entry must be an date data type.',
        },
            applicantName: {
            fieldNameFormats: {
    "frontend": "applicantName",
    "backend": "applicant_name",
    "database": "applicant_name",
    "pretty": "Applicant Name",
    "component": "ApplicantName",
    "kebab": "applicant-name",
    "sqlFunctionRef": "p_applicant_name",
    "RestAPI": "applicantName",
    "GraphQL": "applicantName",
    "custom": "applicantName"
} as const,
            name: 'applicantName',
            displayName: 'Applicant Name',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_claim:applicant_name',
            uniqueFieldId: 'supabase_automation_matrix:wcClaim:applicantName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcClaim',
            databaseTable: 'wc_claim',
            foreignKeyReference: null,
            description: '"Applicant Name" field for wcClaim. This is an optional field. Your entry must be an string data type.',
        },
            personId: {
            fieldNameFormats: {
    "frontend": "personId",
    "backend": "person_id",
    "database": "person_id",
    "pretty": "Person Id",
    "component": "PersonId",
    "kebab": "person-id",
    "sqlFunctionRef": "p_person_id",
    "RestAPI": "personId",
    "GraphQL": "personId",
    "custom": "personId"
} as const,
            name: 'personId',
            displayName: 'Person Id',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_claim:person_id',
            uniqueFieldId: 'supabase_automation_matrix:wcClaim:personId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcClaim',
            databaseTable: 'wc_claim',
            foreignKeyReference: null,
            description: '"Person Id" field for wcClaim. This is an optional field. Your entry must be an uuid data type.',
        },
            dateOfBirth: {
            fieldNameFormats: {
    "frontend": "dateOfBirth",
    "backend": "date_of_birth",
    "database": "date_of_birth",
    "pretty": "Date Of Birth",
    "component": "DateOfBirth",
    "kebab": "date-of-birth",
    "sqlFunctionRef": "p_date_of_birth",
    "RestAPI": "dateOfBirth",
    "GraphQL": "dateOfBirth",
    "custom": "dateOfBirth"
} as const,
            name: 'dateOfBirth',
            displayName: 'Date Of Birth',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_claim:date_of_birth',
            uniqueFieldId: 'supabase_automation_matrix:wcClaim:dateOfBirth',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'wcClaim',
            databaseTable: 'wc_claim',
            foreignKeyReference: null,
            description: '"Date Of Birth" field for wcClaim. This is an optional field. Your entry must be an date data type.',
        },
            dateOfInjury: {
            fieldNameFormats: {
    "frontend": "dateOfInjury",
    "backend": "date_of_injury",
    "database": "date_of_injury",
    "pretty": "Date Of Injury",
    "component": "DateOfInjury",
    "kebab": "date-of-injury",
    "sqlFunctionRef": "p_date_of_injury",
    "RestAPI": "dateOfInjury",
    "GraphQL": "dateOfInjury",
    "custom": "dateOfInjury"
} as const,
            name: 'dateOfInjury',
            displayName: 'Date Of Injury',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_claim:date_of_injury',
            uniqueFieldId: 'supabase_automation_matrix:wcClaim:dateOfInjury',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'wcClaim',
            databaseTable: 'wc_claim',
            foreignKeyReference: null,
            description: '"Date Of Injury" field for wcClaim. This is an optional field. Your entry must be an date data type.',
        },
            ageAtDoi: {
            fieldNameFormats: {
    "frontend": "ageAtDoi",
    "backend": "age_at_doi",
    "database": "age_at_doi",
    "pretty": "Age At Doi",
    "component": "AgeAtDoi",
    "kebab": "age-at-doi",
    "sqlFunctionRef": "p_age_at_doi",
    "RestAPI": "ageAtDoi",
    "GraphQL": "ageAtDoi",
    "custom": "ageAtDoi"
} as const,
            name: 'ageAtDoi',
            displayName: 'Age At Doi',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_claim:age_at_doi',
            uniqueFieldId: 'supabase_automation_matrix:wcClaim:ageAtDoi',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcClaim',
            databaseTable: 'wc_claim',
            foreignKeyReference: null,
            description: '"Age At Doi" field for wcClaim. This is an optional field. Your entry must be an number data type.',
        },
            occupationalCode: {
            fieldNameFormats: {
    "frontend": "occupationalCode",
    "backend": "occupational_code",
    "database": "occupational_code",
    "pretty": "Occupational Code",
    "component": "OccupationalCode",
    "kebab": "occupational-code",
    "sqlFunctionRef": "p_occupational_code",
    "RestAPI": "occupationalCode",
    "GraphQL": "occupationalCode",
    "custom": "occupationalCode"
} as const,
            name: 'occupationalCode',
            displayName: 'Occupational Code',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_claim:occupational_code',
            uniqueFieldId: 'supabase_automation_matrix:wcClaim:occupationalCode',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcClaim',
            databaseTable: 'wc_claim',
            foreignKeyReference: null,
            description: '"Occupational Code" field for wcClaim. This is an optional field. Your entry must be an number data type.',
        },
            weeklyEarnings: {
            fieldNameFormats: {
    "frontend": "weeklyEarnings",
    "backend": "weekly_earnings",
    "database": "weekly_earnings",
    "pretty": "Weekly Earnings",
    "component": "WeeklyEarnings",
    "kebab": "weekly-earnings",
    "sqlFunctionRef": "p_weekly_earnings",
    "RestAPI": "weeklyEarnings",
    "GraphQL": "weeklyEarnings",
    "custom": "weeklyEarnings"
} as const,
            name: 'weeklyEarnings',
            displayName: 'Weekly Earnings',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_claim:weekly_earnings',
            uniqueFieldId: 'supabase_automation_matrix:wcClaim:weeklyEarnings',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "real",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcClaim',
            databaseTable: 'wc_claim',
            foreignKeyReference: null,
            description: '"Weekly Earnings" field for wcClaim. This is an optional field. Your entry must be an number data type.',
        },
            wcReportInverse: {
    fieldNameFormats: {
    "frontend": "wcReportInverse",
    "backend": "wc_report_Inverse",
    "database": "ifk_wc_report",
    "pretty": "Wc Report Inverse",
    "component": "WcReportInverse",
    "kebab": "wc-reportInverse",
    "sqlFunctionRef": "p_ifk_wc_report",
    "RestAPI": "wcReportInverse",
    "GraphQL": "wcReportInverse",
    "custom": "wcReportInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:wc_report',
    uniqueEntityId: 'supabase_automation_matrix:wcReport',
    name: 'wcReportInverse',
    displayName: 'Wc Report Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['wcReport'][]>,
    entityName: 'wcReport',
    databaseTable: 'wc_report',
},
        },
        entityNameFormats: {
    "frontend": "wcClaim",
    "backend": "wc_claim",
    "database": "wc_claim",
    "pretty": "Wc Claim",
    "component": "WcClaim",
    "kebab": "wc-claim",
    "sqlFunctionRef": "p_wc_claim",
    "RestAPI": "wcClaim",
    "GraphQL": "wcClaim",
    "custom": "wcClaim"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'wc_report', relatedColumn: 'claim_id', junctionTable: null }
        ],
    },
wcImpairmentDefinition: {
        schemaType: 'table' as const,
        entityName: 'wcImpairmentDefinition',
        displayName: 'Wc Impairment Definition',
        uniqueTableId: 'supabase_automation_matrix:public:wc_impairment_definition',
        uniqueEntityId: 'supabase_automation_matrix:wcImpairmentDefinition',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_impairment_definition:id',
            uniqueFieldId: 'supabase_automation_matrix:wcImpairmentDefinition:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcImpairmentDefinition',
            databaseTable: 'wc_impairment_definition',
            foreignKeyReference: null,
            description: '"Id" field for wcImpairmentDefinition. This is a required field. Your entry must be an uuid data type.',
        },
            impairmentNumber: {
            fieldNameFormats: {
    "frontend": "impairmentNumber",
    "backend": "impairment_number",
    "database": "impairment_number",
    "pretty": "Impairment Number",
    "component": "ImpairmentNumber",
    "kebab": "impairment-number",
    "sqlFunctionRef": "p_impairment_number",
    "RestAPI": "impairmentNumber",
    "GraphQL": "impairmentNumber",
    "custom": "impairmentNumber"
} as const,
            name: 'impairmentNumber',
            displayName: 'Impairment Number',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_impairment_definition:impairment_number',
            uniqueFieldId: 'supabase_automation_matrix:wcImpairmentDefinition:impairmentNumber',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcImpairmentDefinition',
            databaseTable: 'wc_impairment_definition',
            foreignKeyReference: null,
            description: '"Impairment Number" field for wcImpairmentDefinition. This is an optional field. Your entry must be an string data type.',
        },
            fecRank: {
            fieldNameFormats: {
    "frontend": "fecRank",
    "backend": "fec_rank",
    "database": "fec_rank",
    "pretty": "Fec Rank",
    "component": "FecRank",
    "kebab": "fec-rank",
    "sqlFunctionRef": "p_fec_rank",
    "RestAPI": "fecRank",
    "GraphQL": "fecRank",
    "custom": "fecRank"
} as const,
            name: 'fecRank',
            displayName: 'Fec Rank',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_impairment_definition:fec_rank',
            uniqueFieldId: 'supabase_automation_matrix:wcImpairmentDefinition:fecRank',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcImpairmentDefinition',
            databaseTable: 'wc_impairment_definition',
            foreignKeyReference: null,
            description: '"Fec Rank" field for wcImpairmentDefinition. This is an optional field. Your entry must be an number data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_impairment_definition:name',
            uniqueFieldId: 'supabase_automation_matrix:wcImpairmentDefinition:name',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcImpairmentDefinition',
            databaseTable: 'wc_impairment_definition',
            foreignKeyReference: null,
            description: '"Name" field for wcImpairmentDefinition. This is an optional field. Your entry must be an string data type.',
        },
            attributes: {
            fieldNameFormats: {
    "frontend": "attributes",
    "backend": "attributes",
    "database": "attributes",
    "pretty": "Attributes",
    "component": "Attributes",
    "kebab": "attributes",
    "sqlFunctionRef": "p_attributes",
    "RestAPI": "attributes",
    "GraphQL": "attributes",
    "custom": "attributes"
} as const,
            name: 'attributes',
            displayName: 'Attributes',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_impairment_definition:attributes',
            uniqueFieldId: 'supabase_automation_matrix:wcImpairmentDefinition:attributes',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'wcImpairmentDefinition',
            databaseTable: 'wc_impairment_definition',
            foreignKeyReference: null,
            description: '"Attributes" field for wcImpairmentDefinition. This is an optional field. Your entry must be an object data type.',
        },
            fingerType: {
            fieldNameFormats: {
    "frontend": "fingerType",
    "backend": "finger_type",
    "database": "finger_type",
    "pretty": "Finger Type",
    "component": "FingerType",
    "kebab": "finger-type",
    "sqlFunctionRef": "p_finger_type",
    "RestAPI": "fingerType",
    "GraphQL": "fingerType",
    "custom": "fingerType"
} as const,
            name: 'fingerType',
            displayName: 'Finger Type',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_impairment_definition:finger_type',
            uniqueFieldId: 'supabase_automation_matrix:wcImpairmentDefinition:fingerType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Index",
            "value": "index"
        },
        {
            "label": "Little",
            "value": "little"
        },
        {
            "label": "Middle",
            "value": "middle"
        },
        {
            "label": "Ring",
            "value": "ring"
        },
        {
            "label": "Thumb",
            "value": "thumb"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"index" | "little" | "middle" | "ring" | "thumb" | undefined>,
            enumValues: ['index', 'little', 'middle', 'ring', 'thumb'] as const,
            entityName: 'wcImpairmentDefinition',
            databaseTable: 'wc_impairment_definition',
            foreignKeyReference: null,
            description: '"Finger Type" field for wcImpairmentDefinition. This is an optional field. Your entry must be an string data type.',
        },
            wcInjuryInverse: {
    fieldNameFormats: {
    "frontend": "wcInjuryInverse",
    "backend": "wc_injury_Inverse",
    "database": "ifk_wc_injury",
    "pretty": "Wc Injury Inverse",
    "component": "WcInjuryInverse",
    "kebab": "wc-injuryInverse",
    "sqlFunctionRef": "p_ifk_wc_injury",
    "RestAPI": "wcInjuryInverse",
    "GraphQL": "wcInjuryInverse",
    "custom": "wcInjuryInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:wc_injury',
    uniqueEntityId: 'supabase_automation_matrix:wcInjury',
    name: 'wcInjuryInverse',
    displayName: 'Wc Injury Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['wcInjury'][]>,
    entityName: 'wcInjury',
    databaseTable: 'wc_injury',
},
        },
        entityNameFormats: {
    "frontend": "wcImpairmentDefinition",
    "backend": "wc_impairment_definition",
    "database": "wc_impairment_definition",
    "pretty": "Wc Impairment Definition",
    "component": "WcImpairmentDefinition",
    "kebab": "wc-impairment-definition",
    "sqlFunctionRef": "p_wc_impairment_definition",
    "RestAPI": "wcImpairmentDefinition",
    "GraphQL": "wcImpairmentDefinition",
    "custom": "wcImpairmentDefinition"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'wc_injury', relatedColumn: 'impairment_definition_id', junctionTable: null }
        ],
    },
wcInjury: {
        schemaType: 'table' as const,
        entityName: 'wcInjury',
        displayName: 'Wc Injury',
        uniqueTableId: 'supabase_automation_matrix:public:wc_injury',
        uniqueEntityId: 'supabase_automation_matrix:wcInjury',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:id',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Id" field for wcInjury. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:created_at',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Created At" field for wcInjury. This is a required field. Your entry must be an date data type.',
        },
            reportId: {
            fieldNameFormats: {
    "frontend": "reportId",
    "backend": "report_id",
    "database": "report_id",
    "pretty": "Report Id",
    "component": "ReportId",
    "kebab": "report-id",
    "sqlFunctionRef": "p_report_id",
    "RestAPI": "reportId",
    "GraphQL": "reportId",
    "custom": "reportId"
} as const,
            name: 'reportId',
            displayName: 'Report Id',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:report_id',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:reportId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: {"table": "wc_report", "column": "id", "entity": "wcReport", "field": "id"},
            description: '"Report Id" field for wcInjury. This is an optional field. Your entry must be an uuid data type. This field is a reference to a wcReport.',
        },
            impairmentDefinitionId: {
            fieldNameFormats: {
    "frontend": "impairmentDefinitionId",
    "backend": "impairment_definition_id",
    "database": "impairment_definition_id",
    "pretty": "Impairment Definition Id",
    "component": "ImpairmentDefinitionId",
    "kebab": "impairment-definition-id",
    "sqlFunctionRef": "p_impairment_definition_id",
    "RestAPI": "impairmentDefinitionId",
    "GraphQL": "impairmentDefinitionId",
    "custom": "impairmentDefinitionId"
} as const,
            name: 'impairmentDefinitionId',
            displayName: 'Impairment Definition Id',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:impairment_definition_id',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:impairmentDefinitionId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: {"table": "wc_impairment_definition", "column": "id", "entity": "wcImpairmentDefinition", "field": "id"},
            description: '"Impairment Definition Id" field for wcInjury. This is an optional field. Your entry must be an uuid data type. This field is a reference to a wcImpairmentDefinition.',
        },
            digit: {
            fieldNameFormats: {
    "frontend": "digit",
    "backend": "digit",
    "database": "digit",
    "pretty": "Digit",
    "component": "Digit",
    "kebab": "digit",
    "sqlFunctionRef": "p_digit",
    "RestAPI": "digit",
    "GraphQL": "digit",
    "custom": "digit"
} as const,
            name: 'digit',
            displayName: 'Digit',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:digit',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:digit',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Digit" field for wcInjury. This is an optional field. Your entry must be an number data type.',
        },
            le: {
            fieldNameFormats: {
    "frontend": "le",
    "backend": "le",
    "database": "le",
    "pretty": "Le",
    "component": "Le",
    "kebab": "le",
    "sqlFunctionRef": "p_le",
    "RestAPI": "le",
    "GraphQL": "le",
    "custom": "le"
} as const,
            name: 'le',
            displayName: 'Le',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:le',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:le',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Le" field for wcInjury. This is an optional field. Your entry must be an number data type.',
        },
            side: {
            fieldNameFormats: {
    "frontend": "side",
    "backend": "side",
    "database": "side",
    "pretty": "Side",
    "component": "Side",
    "kebab": "side",
    "sqlFunctionRef": "p_side",
    "RestAPI": "side",
    "GraphQL": "side",
    "custom": "side"
} as const,
            name: 'side',
            displayName: 'Side',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:side',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:side',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "default" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SELECT' as const,
            componentProps: {
    "subComponent": "enumSelect",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": [
        {
            "label": "Default",
            "value": "default"
        },
        {
            "label": "Left",
            "value": "left"
        },
        {
            "label": "Right",
            "value": "right"
        }
    ],
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<"default" | "left" | "right" | undefined>,
            enumValues: ['default', 'left', 'right'] as const,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Side" field for wcInjury. This is an optional field. Your entry must be an string data type.',
        },
            ue: {
            fieldNameFormats: {
    "frontend": "ue",
    "backend": "ue",
    "database": "ue",
    "pretty": "Ue",
    "component": "Ue",
    "kebab": "ue",
    "sqlFunctionRef": "p_ue",
    "RestAPI": "ue",
    "GraphQL": "ue",
    "custom": "ue"
} as const,
            name: 'ue',
            displayName: 'Ue',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:ue',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:ue',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Ue" field for wcInjury. This is an optional field. Your entry must be an number data type.',
        },
            wpi: {
            fieldNameFormats: {
    "frontend": "wpi",
    "backend": "wpi",
    "database": "wpi",
    "pretty": "Wpi",
    "component": "Wpi",
    "kebab": "wpi",
    "sqlFunctionRef": "p_wpi",
    "RestAPI": "wpi",
    "GraphQL": "wpi",
    "custom": "wpi"
} as const,
            name: 'wpi',
            displayName: 'Wpi',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:wpi',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:wpi',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Wpi" field for wcInjury. This is an optional field. Your entry must be an number data type.',
        },
            pain: {
            fieldNameFormats: {
    "frontend": "pain",
    "backend": "pain",
    "database": "pain",
    "pretty": "Pain",
    "component": "Pain",
    "kebab": "pain",
    "sqlFunctionRef": "p_pain",
    "RestAPI": "pain",
    "GraphQL": "pain",
    "custom": "pain"
} as const,
            name: 'pain',
            displayName: 'Pain',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:pain',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:pain',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "0" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Pain" field for wcInjury. This is an optional field. Your entry must be an number data type.',
        },
            industrial: {
            fieldNameFormats: {
    "frontend": "industrial",
    "backend": "industrial",
    "database": "industrial",
    "pretty": "Industrial",
    "component": "Industrial",
    "kebab": "industrial",
    "sqlFunctionRef": "p_industrial",
    "RestAPI": "industrial",
    "GraphQL": "industrial",
    "custom": "industrial"
} as const,
            name: 'industrial',
            displayName: 'Industrial',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:industrial',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:industrial',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "100" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Industrial" field for wcInjury. This is an optional field. Your entry must be an number data type.',
        },
            rating: {
            fieldNameFormats: {
    "frontend": "rating",
    "backend": "rating",
    "database": "rating",
    "pretty": "Rating",
    "component": "Rating",
    "kebab": "rating",
    "sqlFunctionRef": "p_rating",
    "RestAPI": "rating",
    "GraphQL": "rating",
    "custom": "rating"
} as const,
            name: 'rating',
            displayName: 'Rating',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:rating',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:rating',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Rating" field for wcInjury. This is an optional field. Your entry must be an number data type.',
        },
            formula: {
            fieldNameFormats: {
    "frontend": "formula",
    "backend": "formula",
    "database": "formula",
    "pretty": "Formula",
    "component": "Formula",
    "kebab": "formula",
    "sqlFunctionRef": "p_formula",
    "RestAPI": "formula",
    "GraphQL": "formula",
    "custom": "formula"
} as const,
            name: 'formula',
            displayName: 'Formula',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:formula',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:formula',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Formula" field for wcInjury. This is an optional field. Your entry must be an string data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_injury:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:wcInjury:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TIME_PICKER' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'wcInjury',
            databaseTable: 'wc_injury',
            foreignKeyReference: null,
            description: '"Updated At" field for wcInjury. This is an optional field. Your entry must be an date data type.',
        },
            wcImpairmentDefinitionReference: {
    fieldNameFormats: {
    "frontend": "wcImpairmentDefinitionReference",
    "backend": "wc_impairment_definition_reference",
    "database": "ref_wc_impairment_definition",
    "pretty": "Wc Impairment Definition Reference",
    "component": "WcImpairmentDefinitionReference",
    "kebab": "wc-impairment-definitionReference",
    "sqlFunctionRef": "p_ref_wc_impairment_definition",
    "RestAPI": "wcImpairmentDefinitionReference",
    "GraphQL": "wcImpairmentDefinitionReference",
    "custom": "wcImpairmentDefinitionReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:wc_impairment_definition:id',
    uniqueFieldId: 'supabase_automation_matrix:wcImpairmentDefinition:id',
    name: 'wcImpairmentDefinitionReference',
    displayName: 'Wc Impairment Definition Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['wcImpairmentDefinition'][]>,
    entityName: 'wcImpairmentDefinition',
    databaseTable: 'wc_impairment_definition',
    relationshipMap: {wc_impairment_definition: 'id', wc_report: 'id'},
},
            wcReportReference: {
    fieldNameFormats: {
    "frontend": "wcReportReference",
    "backend": "wc_report_reference",
    "database": "ref_wc_report",
    "pretty": "Wc Report Reference",
    "component": "WcReportReference",
    "kebab": "wc-reportReference",
    "sqlFunctionRef": "p_ref_wc_report",
    "RestAPI": "wcReportReference",
    "GraphQL": "wcReportReference",
    "custom": "wcReportReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:wc_report:id',
    uniqueFieldId: 'supabase_automation_matrix:wcReport:id',
    name: 'wcReportReference',
    displayName: 'Wc Report Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['wcReport'][]>,
    entityName: 'wcReport',
    databaseTable: 'wc_report',
    relationshipMap: {wc_impairment_definition: 'id', wc_report: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "wcInjury",
    "backend": "wc_injury",
    "database": "wc_injury",
    "pretty": "Wc Injury",
    "component": "WcInjury",
    "kebab": "wc-injury",
    "sqlFunctionRef": "p_wc_injury",
    "RestAPI": "wcInjury",
    "GraphQL": "wcInjury",
    "custom": "wcInjury"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'impairment_definition_id', relatedTable: 'wc_impairment_definition', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'report_id', relatedTable: 'wc_report', relatedColumn: 'id', junctionTable: null }
        ],
    },
wcReport: {
        schemaType: 'table' as const,
        entityName: 'wcReport',
        displayName: 'Wc Report',
        uniqueTableId: 'supabase_automation_matrix:public:wc_report',
        uniqueEntityId: 'supabase_automation_matrix:wcReport',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_report:id',
            uniqueFieldId: 'supabase_automation_matrix:wcReport:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcReport',
            databaseTable: 'wc_report',
            foreignKeyReference: null,
            description: '"Id" field for wcReport. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_report:created_at',
            uniqueFieldId: 'supabase_automation_matrix:wcReport:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'wcReport',
            databaseTable: 'wc_report',
            foreignKeyReference: null,
            description: '"Created At" field for wcReport. This is a required field. Your entry must be an date data type.',
        },
            claimId: {
            fieldNameFormats: {
    "frontend": "claimId",
    "backend": "claim_id",
    "database": "claim_id",
    "pretty": "Claim Id",
    "component": "ClaimId",
    "kebab": "claim-id",
    "sqlFunctionRef": "p_claim_id",
    "RestAPI": "claimId",
    "GraphQL": "claimId",
    "custom": "claimId"
} as const,
            name: 'claimId',
            displayName: 'Claim Id',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_report:claim_id',
            uniqueFieldId: 'supabase_automation_matrix:wcReport:claimId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'wcReport',
            databaseTable: 'wc_report',
            foreignKeyReference: {"table": "wc_claim", "column": "id", "entity": "wcClaim", "field": "id"},
            description: '"Claim Id" field for wcReport. This is a required field. Your entry must be an uuid data type. This field is a reference to a wcClaim.',
        },
            finalRating: {
            fieldNameFormats: {
    "frontend": "finalRating",
    "backend": "final_rating",
    "database": "final_rating",
    "pretty": "Final Rating",
    "component": "FinalRating",
    "kebab": "final-rating",
    "sqlFunctionRef": "p_final_rating",
    "RestAPI": "finalRating",
    "GraphQL": "finalRating",
    "custom": "finalRating"
} as const,
            name: 'finalRating',
            displayName: 'Final Rating',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_report:final_rating',
            uniqueFieldId: 'supabase_automation_matrix:wcReport:finalRating',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcReport',
            databaseTable: 'wc_report',
            foreignKeyReference: null,
            description: '"Final Rating" field for wcReport. This is an optional field. Your entry must be an number data type.',
        },
            leftSideTotal: {
            fieldNameFormats: {
    "frontend": "leftSideTotal",
    "backend": "left_side_total",
    "database": "left_side_total",
    "pretty": "Left Side Total",
    "component": "LeftSideTotal",
    "kebab": "left-side-total",
    "sqlFunctionRef": "p_left_side_total",
    "RestAPI": "leftSideTotal",
    "GraphQL": "leftSideTotal",
    "custom": "leftSideTotal"
} as const,
            name: 'leftSideTotal',
            displayName: 'Left Side Total',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_report:left_side_total',
            uniqueFieldId: 'supabase_automation_matrix:wcReport:leftSideTotal',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcReport',
            databaseTable: 'wc_report',
            foreignKeyReference: null,
            description: '"Left Side Total" field for wcReport. This is an optional field. Your entry must be an number data type.',
        },
            rightSideTotal: {
            fieldNameFormats: {
    "frontend": "rightSideTotal",
    "backend": "right_side_total",
    "database": "right_side_total",
    "pretty": "Right Side Total",
    "component": "RightSideTotal",
    "kebab": "right-side-total",
    "sqlFunctionRef": "p_right_side_total",
    "RestAPI": "rightSideTotal",
    "GraphQL": "rightSideTotal",
    "custom": "rightSideTotal"
} as const,
            name: 'rightSideTotal',
            displayName: 'Right Side Total',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_report:right_side_total',
            uniqueFieldId: 'supabase_automation_matrix:wcReport:rightSideTotal',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcReport',
            databaseTable: 'wc_report',
            foreignKeyReference: null,
            description: '"Right Side Total" field for wcReport. This is an optional field. Your entry must be an number data type.',
        },
            defaultSideTotal: {
            fieldNameFormats: {
    "frontend": "defaultSideTotal",
    "backend": "default_side_total",
    "database": "default_side_total",
    "pretty": "Default Side Total",
    "component": "DefaultSideTotal",
    "kebab": "default-side-total",
    "sqlFunctionRef": "p_default_side_total",
    "RestAPI": "defaultSideTotal",
    "GraphQL": "defaultSideTotal",
    "custom": "defaultSideTotal"
} as const,
            name: 'defaultSideTotal',
            displayName: 'Default Side Total',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_report:default_side_total',
            uniqueFieldId: 'supabase_automation_matrix:wcReport:defaultSideTotal',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcReport',
            databaseTable: 'wc_report',
            foreignKeyReference: null,
            description: '"Default Side Total" field for wcReport. This is an optional field. Your entry must be an number data type.',
        },
            compensationAmount: {
            fieldNameFormats: {
    "frontend": "compensationAmount",
    "backend": "compensation_amount",
    "database": "compensation_amount",
    "pretty": "Compensation Amount",
    "component": "CompensationAmount",
    "kebab": "compensation-amount",
    "sqlFunctionRef": "p_compensation_amount",
    "RestAPI": "compensationAmount",
    "GraphQL": "compensationAmount",
    "custom": "compensationAmount"
} as const,
            name: 'compensationAmount',
            displayName: 'Compensation Amount',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_report:compensation_amount',
            uniqueFieldId: 'supabase_automation_matrix:wcReport:compensationAmount',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "real",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcReport',
            databaseTable: 'wc_report',
            foreignKeyReference: null,
            description: '"Compensation Amount" field for wcReport. This is an optional field. Your entry must be an number data type.',
        },
            compensationWeeks: {
            fieldNameFormats: {
    "frontend": "compensationWeeks",
    "backend": "compensation_weeks",
    "database": "compensation_weeks",
    "pretty": "Compensation Weeks",
    "component": "CompensationWeeks",
    "kebab": "compensation-weeks",
    "sqlFunctionRef": "p_compensation_weeks",
    "RestAPI": "compensationWeeks",
    "GraphQL": "compensationWeeks",
    "custom": "compensationWeeks"
} as const,
            name: 'compensationWeeks',
            displayName: 'Compensation Weeks',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_report:compensation_weeks',
            uniqueFieldId: 'supabase_automation_matrix:wcReport:compensationWeeks',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcReport',
            databaseTable: 'wc_report',
            foreignKeyReference: null,
            description: '"Compensation Weeks" field for wcReport. This is an optional field. Your entry must be an number data type.',
        },
            compensationDays: {
            fieldNameFormats: {
    "frontend": "compensationDays",
    "backend": "compensation_days",
    "database": "compensation_days",
    "pretty": "Compensation Days",
    "component": "CompensationDays",
    "kebab": "compensation-days",
    "sqlFunctionRef": "p_compensation_days",
    "RestAPI": "compensationDays",
    "GraphQL": "compensationDays",
    "custom": "compensationDays"
} as const,
            name: 'compensationDays',
            displayName: 'Compensation Days',

            uniqueColumnId: 'supabase_automation_matrix:public:wc_report:compensation_days',
            uniqueFieldId: 'supabase_automation_matrix:wcReport:compensationDays',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'wcReport',
            databaseTable: 'wc_report',
            foreignKeyReference: null,
            description: '"Compensation Days" field for wcReport. This is an optional field. Your entry must be an number data type.',
        },
            wcClaimReference: {
    fieldNameFormats: {
    "frontend": "wcClaimReference",
    "backend": "wc_claim_reference",
    "database": "ref_wc_claim",
    "pretty": "Wc Claim Reference",
    "component": "WcClaimReference",
    "kebab": "wc-claimReference",
    "sqlFunctionRef": "p_ref_wc_claim",
    "RestAPI": "wcClaimReference",
    "GraphQL": "wcClaimReference",
    "custom": "wcClaimReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:wc_claim:id',
    uniqueFieldId: 'supabase_automation_matrix:wcClaim:id',
    name: 'wcClaimReference',
    displayName: 'Wc Claim Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['wcClaim'][]>,
    entityName: 'wcClaim',
    databaseTable: 'wc_claim',
    relationshipMap: {wc_claim: 'id'},
},
            wcInjuryInverse: {
    fieldNameFormats: {
    "frontend": "wcInjuryInverse",
    "backend": "wc_injury_Inverse",
    "database": "ifk_wc_injury",
    "pretty": "Wc Injury Inverse",
    "component": "WcInjuryInverse",
    "kebab": "wc-injuryInverse",
    "sqlFunctionRef": "p_ifk_wc_injury",
    "RestAPI": "wcInjuryInverse",
    "GraphQL": "wcInjuryInverse",
    "custom": "wcInjuryInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:wc_injury',
    uniqueEntityId: 'supabase_automation_matrix:wcInjury',
    name: 'wcInjuryInverse',
    displayName: 'Wc Injury Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['wcInjury'][]>,
    entityName: 'wcInjury',
    databaseTable: 'wc_injury',
},
        },
        entityNameFormats: {
    "frontend": "wcReport",
    "backend": "wc_report",
    "database": "wc_report",
    "pretty": "Wc Report",
    "component": "WcReport",
    "kebab": "wc-report",
    "sqlFunctionRef": "p_wc_report",
    "RestAPI": "wcReport",
    "GraphQL": "wcReport",
    "custom": "wcReport"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'claim_id', relatedTable: 'wc_claim', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'wc_injury', relatedColumn: 'report_id', junctionTable: null }
        ],
    },
workflow: {
        schemaType: 'table' as const,
        entityName: 'workflow',
        displayName: 'Workflow',
        uniqueTableId: 'supabase_automation_matrix:public:workflow',
        uniqueEntityId: 'supabase_automation_matrix:workflow',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:id',
            uniqueFieldId: 'supabase_automation_matrix:workflow:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Id" field for workflow. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:created_at',
            uniqueFieldId: 'supabase_automation_matrix:workflow:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Created At" field for workflow. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:workflow:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Updated At" field for workflow. This is an optional field. Your entry must be an date data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:name',
            uniqueFieldId: 'supabase_automation_matrix:workflow:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Name" field for workflow. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:description',
            uniqueFieldId: 'supabase_automation_matrix:workflow:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Description" field for workflow. This is an optional field. Your entry must be an string data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:user_id',
            uniqueFieldId: 'supabase_automation_matrix:workflow:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for workflow. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            version: {
            fieldNameFormats: {
    "frontend": "version",
    "backend": "version",
    "database": "version",
    "pretty": "Version",
    "component": "Version",
    "kebab": "version",
    "sqlFunctionRef": "p_version",
    "RestAPI": "version",
    "GraphQL": "version",
    "custom": "version"
} as const,
            name: 'version',
            displayName: 'Version',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:version',
            uniqueFieldId: 'supabase_automation_matrix:workflow:version',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Version" field for workflow. This is an optional field. Your entry must be an number data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:is_public',
            uniqueFieldId: 'supabase_automation_matrix:workflow:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Is Public" field for workflow. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:workflow:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for workflow. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:public_read',
            uniqueFieldId: 'supabase_automation_matrix:workflow:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Public Read" field for workflow. This is an optional field. Your entry must be an boolean data type.',
        },
            isActive: {
            fieldNameFormats: {
    "frontend": "isActive",
    "backend": "is_active",
    "database": "is_active",
    "pretty": "Is Active",
    "component": "IsActive",
    "kebab": "is-active",
    "sqlFunctionRef": "p_is_active",
    "RestAPI": "isActive",
    "GraphQL": "isActive",
    "custom": "isActive"
} as const,
            name: 'isActive',
            displayName: 'Is Active',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:is_active',
            uniqueFieldId: 'supabase_automation_matrix:workflow:isActive',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Is Active" field for workflow. This is an optional field. Your entry must be an boolean data type.',
        },
            isDeleted: {
            fieldNameFormats: {
    "frontend": "isDeleted",
    "backend": "is_deleted",
    "database": "is_deleted",
    "pretty": "Is Deleted",
    "component": "IsDeleted",
    "kebab": "is-deleted",
    "sqlFunctionRef": "p_is_deleted",
    "RestAPI": "isDeleted",
    "GraphQL": "isDeleted",
    "custom": "isDeleted"
} as const,
            name: 'isDeleted',
            displayName: 'Is Deleted',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:is_deleted',
            uniqueFieldId: 'supabase_automation_matrix:workflow:isDeleted',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Is Deleted" field for workflow. This is an optional field. Your entry must be an boolean data type.',
        },
            autoExecute: {
            fieldNameFormats: {
    "frontend": "autoExecute",
    "backend": "auto_execute",
    "database": "auto_execute",
    "pretty": "Auto Execute",
    "component": "AutoExecute",
    "kebab": "auto-execute",
    "sqlFunctionRef": "p_auto_execute",
    "RestAPI": "autoExecute",
    "GraphQL": "autoExecute",
    "custom": "autoExecute"
} as const,
            name: 'autoExecute',
            displayName: 'Auto Execute',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:auto_execute',
            uniqueFieldId: 'supabase_automation_matrix:workflow:autoExecute',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Auto Execute" field for workflow. This is an optional field. Your entry must be an boolean data type.',
        },
            category: {
            fieldNameFormats: {
    "frontend": "category",
    "backend": "category",
    "database": "category",
    "pretty": "Category",
    "component": "Category",
    "kebab": "category",
    "sqlFunctionRef": "p_category",
    "RestAPI": "category",
    "GraphQL": "category",
    "custom": "category"
} as const,
            name: 'category',
            displayName: 'Category',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:category',
            uniqueFieldId: 'supabase_automation_matrix:workflow:category',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Category" field for workflow. This is an optional field. Your entry must be an string data type.',
        },
            tags: {
            fieldNameFormats: {
    "frontend": "tags",
    "backend": "tags",
    "database": "tags",
    "pretty": "Tags",
    "component": "Tags",
    "kebab": "tags",
    "sqlFunctionRef": "p_tags",
    "RestAPI": "tags",
    "GraphQL": "tags",
    "custom": "tags"
} as const,
            name: 'tags',
            displayName: 'Tags',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:tags',
            uniqueFieldId: 'supabase_automation_matrix:workflow:tags',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Tags" field for workflow. This is an optional field. Your entry must be an object data type.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:metadata',
            uniqueFieldId: 'supabase_automation_matrix:workflow:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Metadata" field for workflow. This is an optional field. Your entry must be an object data type.',
        },
            viewport: {
            fieldNameFormats: {
    "frontend": "viewport",
    "backend": "viewport",
    "database": "viewport",
    "pretty": "Viewport",
    "component": "Viewport",
    "kebab": "viewport",
    "sqlFunctionRef": "p_viewport",
    "RestAPI": "viewport",
    "GraphQL": "viewport",
    "custom": "viewport"
} as const,
            name: 'viewport',
            displayName: 'Viewport',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow:viewport',
            uniqueFieldId: 'supabase_automation_matrix:workflow:viewport',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflow',
            databaseTable: 'workflow',
            foreignKeyReference: null,
            description: '"Viewport" field for workflow. This is an optional field. Your entry must be an object data type.',
        },
            workflowNodeInverse: {
    fieldNameFormats: {
    "frontend": "workflowNodeInverse",
    "backend": "workflow_node_Inverse",
    "database": "ifk_workflow_node",
    "pretty": "Workflow Node Inverse",
    "component": "WorkflowNodeInverse",
    "kebab": "workflow-nodeInverse",
    "sqlFunctionRef": "p_ifk_workflow_node",
    "RestAPI": "workflowNodeInverse",
    "GraphQL": "workflowNodeInverse",
    "custom": "workflowNodeInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:workflow_node',
    uniqueEntityId: 'supabase_automation_matrix:workflowNode',
    name: 'workflowNodeInverse',
    displayName: 'Workflow Node Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflowNode'][]>,
    entityName: 'workflowNode',
    databaseTable: 'workflow_node',
},
            workflowEdgeInverse: {
    fieldNameFormats: {
    "frontend": "workflowEdgeInverse",
    "backend": "workflow_edge_Inverse",
    "database": "ifk_workflow_edge",
    "pretty": "Workflow Edge Inverse",
    "component": "WorkflowEdgeInverse",
    "kebab": "workflow-edgeInverse",
    "sqlFunctionRef": "p_ifk_workflow_edge",
    "RestAPI": "workflowEdgeInverse",
    "GraphQL": "workflowEdgeInverse",
    "custom": "workflowEdgeInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:workflow_edge',
    uniqueEntityId: 'supabase_automation_matrix:workflowEdge',
    name: 'workflowEdgeInverse',
    displayName: 'Workflow Edge Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflowEdge'][]>,
    entityName: 'workflowEdge',
    databaseTable: 'workflow_edge',
},
            workflowRelayInverse: {
    fieldNameFormats: {
    "frontend": "workflowRelayInverse",
    "backend": "workflow_relay_Inverse",
    "database": "ifk_workflow_relay",
    "pretty": "Workflow Relay Inverse",
    "component": "WorkflowRelayInverse",
    "kebab": "workflow-relayInverse",
    "sqlFunctionRef": "p_ifk_workflow_relay",
    "RestAPI": "workflowRelayInverse",
    "GraphQL": "workflowRelayInverse",
    "custom": "workflowRelayInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:workflow_relay',
    uniqueEntityId: 'supabase_automation_matrix:workflowRelay',
    name: 'workflowRelayInverse',
    displayName: 'Workflow Relay Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflowRelay'][]>,
    entityName: 'workflowRelay',
    databaseTable: 'workflow_relay',
},
            workflowUserInputInverse: {
    fieldNameFormats: {
    "frontend": "workflowUserInputInverse",
    "backend": "workflow_user_input_Inverse",
    "database": "ifk_workflow_user_input",
    "pretty": "Workflow User Input Inverse",
    "component": "WorkflowUserInputInverse",
    "kebab": "workflow-user-inputInverse",
    "sqlFunctionRef": "p_ifk_workflow_user_input",
    "RestAPI": "workflowUserInputInverse",
    "GraphQL": "workflowUserInputInverse",
    "custom": "workflowUserInputInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:workflow_user_input',
    uniqueEntityId: 'supabase_automation_matrix:workflowUserInput',
    name: 'workflowUserInputInverse',
    displayName: 'Workflow User Input Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflowUserInput'][]>,
    entityName: 'workflowUserInput',
    databaseTable: 'workflow_user_input',
},
        },
        entityNameFormats: {
    "frontend": "workflow",
    "backend": "workflow",
    "database": "workflow",
    "pretty": "Workflow",
    "component": "Workflow",
    "kebab": "workflow",
    "sqlFunctionRef": "p_workflow",
    "RestAPI": "workflow",
    "GraphQL": "workflow",
    "custom": "workflow"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'workflow_node', relatedColumn: 'workflow_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'workflow_edge', relatedColumn: 'workflow_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'workflow_relay', relatedColumn: 'workflow_id', junctionTable: null },
        { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'workflow_user_input', relatedColumn: 'workflow_id', junctionTable: null }
        ],
    },
workflowData: {
        schemaType: 'table' as const,
        entityName: 'workflowData',
        displayName: 'Workflow Data',
        uniqueTableId: 'supabase_automation_matrix:public:workflow_data',
        uniqueEntityId: 'supabase_automation_matrix:workflowData',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'name', databaseFieldName: 'name' },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:id',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Id" field for workflowData. This is a required field. Your entry must be an uuid data type.',
        },
            name: {
            fieldNameFormats: {
    "frontend": "name",
    "backend": "name",
    "database": "name",
    "pretty": "Name",
    "component": "Name",
    "kebab": "name",
    "sqlFunctionRef": "p_name",
    "RestAPI": "name",
    "GraphQL": "name",
    "custom": "name"
} as const,
            name: 'name',
            displayName: 'Name',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:name',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:name',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Name" field for workflowData. This is a required field. Your entry must be an string data type.',
        },
            description: {
            fieldNameFormats: {
    "frontend": "description",
    "backend": "description",
    "database": "description",
    "pretty": "Description",
    "component": "Description",
    "kebab": "description",
    "sqlFunctionRef": "p_description",
    "RestAPI": "description",
    "GraphQL": "description",
    "custom": "description"
} as const,
            name: 'description',
            displayName: 'Description',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:description',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:description',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Description" field for workflowData. This is an optional field. Your entry must be an string data type.',
        },
            workflowType: {
            fieldNameFormats: {
    "frontend": "workflowType",
    "backend": "workflow_type",
    "database": "workflow_type",
    "pretty": "Workflow Type",
    "component": "WorkflowType",
    "kebab": "workflow-type",
    "sqlFunctionRef": "p_workflow_type",
    "RestAPI": "workflowType",
    "GraphQL": "workflowType",
    "custom": "workflowType"
} as const,
            name: 'workflowType',
            displayName: 'Workflow Type',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:workflow_type',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:workflowType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Workflow Type" field for workflowData. This is an optional field. Your entry must be an string data type.',
        },
            inputs: {
            fieldNameFormats: {
    "frontend": "inputs",
    "backend": "inputs",
    "database": "inputs",
    "pretty": "Inputs",
    "component": "Inputs",
    "kebab": "inputs",
    "sqlFunctionRef": "p_inputs",
    "RestAPI": "inputs",
    "GraphQL": "inputs",
    "custom": "inputs"
} as const,
            name: 'inputs',
            displayName: 'Inputs',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:inputs',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:inputs',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Inputs" field for workflowData. This is an optional field. Your entry must be an object data type.',
        },
            outputs: {
            fieldNameFormats: {
    "frontend": "outputs",
    "backend": "outputs",
    "database": "outputs",
    "pretty": "Outputs",
    "component": "Outputs",
    "kebab": "outputs",
    "sqlFunctionRef": "p_outputs",
    "RestAPI": "outputs",
    "GraphQL": "outputs",
    "custom": "outputs"
} as const,
            name: 'outputs',
            displayName: 'Outputs',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:outputs',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:outputs',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Outputs" field for workflowData. This is an optional field. Your entry must be an object data type.',
        },
            dependencies: {
            fieldNameFormats: {
    "frontend": "dependencies",
    "backend": "dependencies",
    "database": "dependencies",
    "pretty": "Dependencies",
    "component": "Dependencies",
    "kebab": "dependencies",
    "sqlFunctionRef": "p_dependencies",
    "RestAPI": "dependencies",
    "GraphQL": "dependencies",
    "custom": "dependencies"
} as const,
            name: 'dependencies',
            displayName: 'Dependencies',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:dependencies',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:dependencies',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Dependencies" field for workflowData. This is an optional field. Your entry must be an object data type.',
        },
            sources: {
            fieldNameFormats: {
    "frontend": "sources",
    "backend": "sources",
    "database": "sources",
    "pretty": "Sources",
    "component": "Sources",
    "kebab": "sources",
    "sqlFunctionRef": "p_sources",
    "RestAPI": "sources",
    "GraphQL": "sources",
    "custom": "sources"
} as const,
            name: 'sources',
            displayName: 'Sources',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:sources',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:sources',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Sources" field for workflowData. This is an optional field. Your entry must be an object data type.',
        },
            destinations: {
            fieldNameFormats: {
    "frontend": "destinations",
    "backend": "destinations",
    "database": "destinations",
    "pretty": "Destinations",
    "component": "Destinations",
    "kebab": "destinations",
    "sqlFunctionRef": "p_destinations",
    "RestAPI": "destinations",
    "GraphQL": "destinations",
    "custom": "destinations"
} as const,
            name: 'destinations',
            displayName: 'Destinations',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:destinations',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:destinations',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Destinations" field for workflowData. This is an optional field. Your entry must be an object data type.',
        },
            actions: {
            fieldNameFormats: {
    "frontend": "actions",
    "backend": "actions",
    "database": "actions",
    "pretty": "Actions",
    "component": "Actions",
    "kebab": "actions",
    "sqlFunctionRef": "p_actions",
    "RestAPI": "actions",
    "GraphQL": "actions",
    "custom": "actions"
} as const,
            name: 'actions',
            displayName: 'Actions',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:actions',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:actions',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Actions" field for workflowData. This is an optional field. Your entry must be an object data type.',
        },
            category: {
            fieldNameFormats: {
    "frontend": "category",
    "backend": "category",
    "database": "category",
    "pretty": "Category",
    "component": "Category",
    "kebab": "category",
    "sqlFunctionRef": "p_category",
    "RestAPI": "category",
    "GraphQL": "category",
    "custom": "category"
} as const,
            name: 'category',
            displayName: 'Category',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:category',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:category',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Category" field for workflowData. This is an optional field. Your entry must be an string data type.',
        },
            tags: {
            fieldNameFormats: {
    "frontend": "tags",
    "backend": "tags",
    "database": "tags",
    "pretty": "Tags",
    "component": "Tags",
    "kebab": "tags",
    "sqlFunctionRef": "p_tags",
    "RestAPI": "tags",
    "GraphQL": "tags",
    "custom": "tags"
} as const,
            name: 'tags',
            displayName: 'Tags',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:tags',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:tags',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Tags" field for workflowData. This is an optional field. Your entry must be an object data type.',
        },
            isActive: {
            fieldNameFormats: {
    "frontend": "isActive",
    "backend": "is_active",
    "database": "is_active",
    "pretty": "Is Active",
    "component": "IsActive",
    "kebab": "is-active",
    "sqlFunctionRef": "p_is_active",
    "RestAPI": "isActive",
    "GraphQL": "isActive",
    "custom": "isActive"
} as const,
            name: 'isActive',
            displayName: 'Is Active',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:is_active',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:isActive',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Is Active" field for workflowData. This is an optional field. Your entry must be an boolean data type.',
        },
            isDeleted: {
            fieldNameFormats: {
    "frontend": "isDeleted",
    "backend": "is_deleted",
    "database": "is_deleted",
    "pretty": "Is Deleted",
    "component": "IsDeleted",
    "kebab": "is-deleted",
    "sqlFunctionRef": "p_is_deleted",
    "RestAPI": "isDeleted",
    "GraphQL": "isDeleted",
    "custom": "isDeleted"
} as const,
            name: 'isDeleted',
            displayName: 'Is Deleted',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:is_deleted',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:isDeleted',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Is Deleted" field for workflowData. This is an optional field. Your entry must be an boolean data type.',
        },
            autoExecute: {
            fieldNameFormats: {
    "frontend": "autoExecute",
    "backend": "auto_execute",
    "database": "auto_execute",
    "pretty": "Auto Execute",
    "component": "AutoExecute",
    "kebab": "auto-execute",
    "sqlFunctionRef": "p_auto_execute",
    "RestAPI": "autoExecute",
    "GraphQL": "autoExecute",
    "custom": "autoExecute"
} as const,
            name: 'autoExecute',
            displayName: 'Auto Execute',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:auto_execute',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:autoExecute',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Auto Execute" field for workflowData. This is an optional field. Your entry must be an boolean data type.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:metadata',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Metadata" field for workflowData. This is an optional field. Your entry must be an object data type.',
        },
            viewport: {
            fieldNameFormats: {
    "frontend": "viewport",
    "backend": "viewport",
    "database": "viewport",
    "pretty": "Viewport",
    "component": "Viewport",
    "kebab": "viewport",
    "sqlFunctionRef": "p_viewport",
    "RestAPI": "viewport",
    "GraphQL": "viewport",
    "custom": "viewport"
} as const,
            name: 'viewport',
            displayName: 'Viewport',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:viewport',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:viewport',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Viewport" field for workflowData. This is an optional field. Your entry must be an object data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:user_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for workflowData. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            version: {
            fieldNameFormats: {
    "frontend": "version",
    "backend": "version",
    "database": "version",
    "pretty": "Version",
    "component": "Version",
    "kebab": "version",
    "sqlFunctionRef": "p_version",
    "RestAPI": "version",
    "GraphQL": "version",
    "custom": "version"
} as const,
            name: 'version',
            displayName: 'Version',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:version',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:version',

            dataType: 'number' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'NUMBER_INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "smallint",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<number>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Version" field for workflowData. This is an optional field. Your entry must be an number data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:is_public',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Is Public" field for workflowData. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for workflowData. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:public_read',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Public Read" field for workflowData. This is an optional field. Your entry must be an boolean data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:created_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:createdAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Created At" field for workflowData. This is an optional field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_data:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowData:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowData',
            databaseTable: 'workflow_data',
            foreignKeyReference: null,
            description: '"Updated At" field for workflowData. This is an optional field. Your entry must be an date data type.',
        },
            workflowNodeDataInverse: {
    fieldNameFormats: {
    "frontend": "workflowNodeDataInverse",
    "backend": "workflow_node_data_Inverse",
    "database": "ifk_workflow_node_data",
    "pretty": "Workflow Node Data Inverse",
    "component": "WorkflowNodeDataInverse",
    "kebab": "workflow-node-dataInverse",
    "sqlFunctionRef": "p_ifk_workflow_node_data",
    "RestAPI": "workflowNodeDataInverse",
    "GraphQL": "workflowNodeDataInverse",
    "custom": "workflowNodeDataInverse"
} as const,
    uniqueTableId: 'supabase_automation_matrix:workflow_node_data',
    uniqueEntityId: 'supabase_automation_matrix:workflowNodeData',
    name: 'workflowNodeDataInverse',
    displayName: 'Workflow Node Data Inverse',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'inverseForeignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflowNodeData'][]>,
    entityName: 'workflowNodeData',
    databaseTable: 'workflow_node_data',
},
        },
        entityNameFormats: {
    "frontend": "workflowData",
    "backend": "workflow_data",
    "database": "workflow_data",
    "pretty": "Workflow Data",
    "component": "WorkflowData",
    "kebab": "workflow-data",
    "sqlFunctionRef": "p_workflow_data",
    "RestAPI": "workflowData",
    "GraphQL": "workflowData",
    "custom": "workflowData"
},
        relationships: [
            { relationshipType: 'inverseForeignKey', column: 'id', relatedTable: 'workflow_node_data', relatedColumn: 'workflow_id', junctionTable: null }
        ],
    },
workflowEdge: {
        schemaType: 'table' as const,
        entityName: 'workflowEdge',
        displayName: 'Workflow Edge',
        uniqueTableId: 'supabase_automation_matrix:public:workflow_edge',
        uniqueEntityId: 'supabase_automation_matrix:workflowEdge',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'id', databaseFieldName: 'id' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:id',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: true,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: null,
            description: '"Id" field for workflowEdge. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:created_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: null,
            description: '"Created At" field for workflowEdge. This is a required field. Your entry must be an date data type.',
        },
            workflowId: {
            fieldNameFormats: {
    "frontend": "workflowId",
    "backend": "workflow_id",
    "database": "workflow_id",
    "pretty": "Workflow Id",
    "component": "WorkflowId",
    "kebab": "workflow-id",
    "sqlFunctionRef": "p_workflow_id",
    "RestAPI": "workflowId",
    "GraphQL": "workflowId",
    "custom": "workflowId"
} as const,
            name: 'workflowId',
            displayName: 'Workflow Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:workflow_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:workflowId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: {"table": "workflow", "column": "id", "entity": "workflow", "field": "id"},
            description: '"Workflow Id" field for workflowEdge. This is a required field. Your entry must be an uuid data type. This field is a reference to a workflow.',
        },
            sourceNodeId: {
            fieldNameFormats: {
    "frontend": "sourceNodeId",
    "backend": "source_node_id",
    "database": "source_node_id",
    "pretty": "Source Node Id",
    "component": "SourceNodeId",
    "kebab": "source-node-id",
    "sqlFunctionRef": "p_source_node_id",
    "RestAPI": "sourceNodeId",
    "GraphQL": "sourceNodeId",
    "custom": "sourceNodeId"
} as const,
            name: 'sourceNodeId',
            displayName: 'Source Node Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:source_node_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:sourceNodeId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: null,
            description: '"Source Node Id" field for workflowEdge. This is a required field. Your entry must be an uuid data type.',
        },
            targetNodeId: {
            fieldNameFormats: {
    "frontend": "targetNodeId",
    "backend": "target_node_id",
    "database": "target_node_id",
    "pretty": "Target Node Id",
    "component": "TargetNodeId",
    "kebab": "target-node-id",
    "sqlFunctionRef": "p_target_node_id",
    "RestAPI": "targetNodeId",
    "GraphQL": "targetNodeId",
    "custom": "targetNodeId"
} as const,
            name: 'targetNodeId',
            displayName: 'Target Node Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:target_node_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:targetNodeId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: null,
            description: '"Target Node Id" field for workflowEdge. This is a required field. Your entry must be an uuid data type.',
        },
            sourceHandle: {
            fieldNameFormats: {
    "frontend": "sourceHandle",
    "backend": "source_handle",
    "database": "source_handle",
    "pretty": "Source Handle",
    "component": "SourceHandle",
    "kebab": "source-handle",
    "sqlFunctionRef": "p_source_handle",
    "RestAPI": "sourceHandle",
    "GraphQL": "sourceHandle",
    "custom": "sourceHandle"
} as const,
            name: 'sourceHandle',
            displayName: 'Source Handle',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:source_handle',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:sourceHandle',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: null,
            description: '"Source Handle" field for workflowEdge. This is an optional field. Your entry must be an string data type.',
        },
            targetHandle: {
            fieldNameFormats: {
    "frontend": "targetHandle",
    "backend": "target_handle",
    "database": "target_handle",
    "pretty": "Target Handle",
    "component": "TargetHandle",
    "kebab": "target-handle",
    "sqlFunctionRef": "p_target_handle",
    "RestAPI": "targetHandle",
    "GraphQL": "targetHandle",
    "custom": "targetHandle"
} as const,
            name: 'targetHandle',
            displayName: 'Target Handle',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:target_handle',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:targetHandle',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: null,
            description: '"Target Handle" field for workflowEdge. This is an optional field. Your entry must be an string data type.',
        },
            edgeType: {
            fieldNameFormats: {
    "frontend": "edgeType",
    "backend": "edge_type",
    "database": "edge_type",
    "pretty": "Edge Type",
    "component": "EdgeType",
    "kebab": "edge-type",
    "sqlFunctionRef": "p_edge_type",
    "RestAPI": "edgeType",
    "GraphQL": "edgeType",
    "custom": "edgeType"
} as const,
            name: 'edgeType',
            displayName: 'Edge Type',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:edge_type',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:edgeType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: null,
            description: '"Edge Type" field for workflowEdge. This is an optional field. Your entry must be an string data type.',
        },
            animated: {
            fieldNameFormats: {
    "frontend": "animated",
    "backend": "animated",
    "database": "animated",
    "pretty": "Animated",
    "component": "Animated",
    "kebab": "animated",
    "sqlFunctionRef": "p_animated",
    "RestAPI": "animated",
    "GraphQL": "animated",
    "custom": "animated"
} as const,
            name: 'animated',
            displayName: 'Animated',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:animated',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:animated',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: null,
            description: '"Animated" field for workflowEdge. This is an optional field. Your entry must be an boolean data type.',
        },
            style: {
            fieldNameFormats: {
    "frontend": "style",
    "backend": "style",
    "database": "style",
    "pretty": "Style",
    "component": "Style",
    "kebab": "style",
    "sqlFunctionRef": "p_style",
    "RestAPI": "style",
    "GraphQL": "style",
    "custom": "style"
} as const,
            name: 'style',
            displayName: 'Style',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:style',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:style',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: null,
            description: '"Style" field for workflowEdge. This is an optional field. Your entry must be an object data type.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_edge:metadata',
            uniqueFieldId: 'supabase_automation_matrix:workflowEdge:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowEdge',
            databaseTable: 'workflow_edge',
            foreignKeyReference: null,
            description: '"Metadata" field for workflowEdge. This is an optional field. Your entry must be an object data type.',
        },
            workflowReference: {
    fieldNameFormats: {
    "frontend": "workflowReference",
    "backend": "workflow_reference",
    "database": "ref_workflow",
    "pretty": "Workflow Reference",
    "component": "WorkflowReference",
    "kebab": "workflowReference",
    "sqlFunctionRef": "p_ref_workflow",
    "RestAPI": "workflowReference",
    "GraphQL": "workflowReference",
    "custom": "workflowReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:workflow:id',
    uniqueFieldId: 'supabase_automation_matrix:workflow:id',
    name: 'workflowReference',
    displayName: 'Workflow Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflow'][]>,
    entityName: 'workflow',
    databaseTable: 'workflow',
    relationshipMap: {workflow: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "workflowEdge",
    "backend": "workflow_edge",
    "database": "workflow_edge",
    "pretty": "Workflow Edge",
    "component": "WorkflowEdge",
    "kebab": "workflow-edge",
    "sqlFunctionRef": "p_workflow_edge",
    "RestAPI": "workflowEdge",
    "GraphQL": "workflowEdge",
    "custom": "workflowEdge"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'workflow_id', relatedTable: 'workflow', relatedColumn: 'id', junctionTable: null }
        ],
    },
workflowNode: {
        schemaType: 'table' as const,
        entityName: 'workflowNode',
        displayName: 'Workflow Node',
        uniqueTableId: 'supabase_automation_matrix:public:workflow_node',
        uniqueEntityId: 'supabase_automation_matrix:workflowNode',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'stepName', databaseFieldName: 'step_name' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:id',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Id" field for workflowNode. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:created_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Created At" field for workflowNode. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Updated At" field for workflowNode. This is an optional field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:user_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for workflowNode. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            workflowId: {
            fieldNameFormats: {
    "frontend": "workflowId",
    "backend": "workflow_id",
    "database": "workflow_id",
    "pretty": "Workflow Id",
    "component": "WorkflowId",
    "kebab": "workflow-id",
    "sqlFunctionRef": "p_workflow_id",
    "RestAPI": "workflowId",
    "GraphQL": "workflowId",
    "custom": "workflowId"
} as const,
            name: 'workflowId',
            displayName: 'Workflow Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:workflow_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:workflowId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: {"table": "workflow", "column": "id", "entity": "workflow", "field": "id"},
            description: '"Workflow Id" field for workflowNode. This is an optional field. Your entry must be an uuid data type. This field is a reference to a workflow.',
        },
            functionId: {
            fieldNameFormats: {
    "frontend": "functionId",
    "backend": "function_id",
    "database": "function_id",
    "pretty": "Function Id",
    "component": "FunctionId",
    "kebab": "function-id",
    "sqlFunctionRef": "p_function_id",
    "RestAPI": "functionId",
    "GraphQL": "functionId",
    "custom": "functionId"
} as const,
            name: 'functionId',
            displayName: 'Function Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:function_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:functionId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: {"table": "registered_function", "column": "id", "entity": "registeredFunction", "field": "id"},
            description: '"Function Id" field for workflowNode. This is an optional field. Your entry must be an uuid data type. This field is a reference to a registeredFunction.',
        },
            functionType: {
            fieldNameFormats: {
    "frontend": "functionType",
    "backend": "function_type",
    "database": "function_type",
    "pretty": "Function Type",
    "component": "FunctionType",
    "kebab": "function-type",
    "sqlFunctionRef": "p_function_type",
    "RestAPI": "functionType",
    "GraphQL": "functionType",
    "custom": "functionType"
} as const,
            name: 'functionType',
            displayName: 'Function Type',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:function_type',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:functionType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Function Type" field for workflowNode. This is an optional field. Your entry must be an string data type.',
        },
            stepName: {
            fieldNameFormats: {
    "frontend": "stepName",
    "backend": "step_name",
    "database": "step_name",
    "pretty": "Step Name",
    "component": "StepName",
    "kebab": "step-name",
    "sqlFunctionRef": "p_step_name",
    "RestAPI": "stepName",
    "GraphQL": "stepName",
    "custom": "stepName"
} as const,
            name: 'stepName',
            displayName: 'Step Name',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:step_name',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:stepName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Step Name" field for workflowNode. This is an optional field. Your entry must be an string data type.',
        },
            nodeType: {
            fieldNameFormats: {
    "frontend": "nodeType",
    "backend": "node_type",
    "database": "node_type",
    "pretty": "Node Type",
    "component": "NodeType",
    "kebab": "node-type",
    "sqlFunctionRef": "p_node_type",
    "RestAPI": "nodeType",
    "GraphQL": "nodeType",
    "custom": "nodeType"
} as const,
            name: 'nodeType',
            displayName: 'Node Type',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:node_type',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:nodeType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Node Type" field for workflowNode. This is an optional field. Your entry must be an string data type.',
        },
            executionRequired: {
            fieldNameFormats: {
    "frontend": "executionRequired",
    "backend": "execution_required",
    "database": "execution_required",
    "pretty": "Execution Required",
    "component": "ExecutionRequired",
    "kebab": "execution-required",
    "sqlFunctionRef": "p_execution_required",
    "RestAPI": "executionRequired",
    "GraphQL": "executionRequired",
    "custom": "executionRequired"
} as const,
            name: 'executionRequired',
            displayName: 'Execution Required',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:execution_required',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:executionRequired',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Execution Required" field for workflowNode. This is an optional field. Your entry must be an boolean data type.',
        },
            additionalDependencies: {
            fieldNameFormats: {
    "frontend": "additionalDependencies",
    "backend": "additional_dependencies",
    "database": "additional_dependencies",
    "pretty": "Additional Dependencies",
    "component": "AdditionalDependencies",
    "kebab": "additional-dependencies",
    "sqlFunctionRef": "p_additional_dependencies",
    "RestAPI": "additionalDependencies",
    "GraphQL": "additionalDependencies",
    "custom": "additionalDependencies"
} as const,
            name: 'additionalDependencies',
            displayName: 'Additional Dependencies',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:additional_dependencies',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:additionalDependencies',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Additional Dependencies" field for workflowNode. This is an optional field. Your entry must be an object data type.',
        },
            argMapping: {
            fieldNameFormats: {
    "frontend": "argMapping",
    "backend": "arg_mapping",
    "database": "arg_mapping",
    "pretty": "Arg Mapping",
    "component": "ArgMapping",
    "kebab": "arg-mapping",
    "sqlFunctionRef": "p_arg_mapping",
    "RestAPI": "argMapping",
    "GraphQL": "argMapping",
    "custom": "argMapping"
} as const,
            name: 'argMapping',
            displayName: 'Arg Mapping',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:arg_mapping',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:argMapping',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Arg Mapping" field for workflowNode. This is an optional field. Your entry must be an object data type.',
        },
            returnBrokerOverrides: {
            fieldNameFormats: {
    "frontend": "returnBrokerOverrides",
    "backend": "return_broker_overrides",
    "database": "return_broker_overrides",
    "pretty": "Return Broker Overrides",
    "component": "ReturnBrokerOverrides",
    "kebab": "return-broker-overrides",
    "sqlFunctionRef": "p_return_broker_overrides",
    "RestAPI": "returnBrokerOverrides",
    "GraphQL": "returnBrokerOverrides",
    "custom": "returnBrokerOverrides"
} as const,
            name: 'returnBrokerOverrides',
            displayName: 'Return Broker Overrides',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:return_broker_overrides',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:returnBrokerOverrides',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Return Broker Overrides" field for workflowNode. This is an optional field. Your entry must be an object data type.',
        },
            argOverrides: {
            fieldNameFormats: {
    "frontend": "argOverrides",
    "backend": "arg_overrides",
    "database": "arg_overrides",
    "pretty": "Arg Overrides",
    "component": "ArgOverrides",
    "kebab": "arg-overrides",
    "sqlFunctionRef": "p_arg_overrides",
    "RestAPI": "argOverrides",
    "GraphQL": "argOverrides",
    "custom": "argOverrides"
} as const,
            name: 'argOverrides',
            displayName: 'Arg Overrides',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:arg_overrides',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:argOverrides',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Arg Overrides" field for workflowNode. This is an optional field. Your entry must be an object data type.',
        },
            status: {
            fieldNameFormats: {
    "frontend": "status",
    "backend": "status",
    "database": "status",
    "pretty": "Status",
    "component": "Status",
    "kebab": "status",
    "sqlFunctionRef": "p_status",
    "RestAPI": "status",
    "GraphQL": "status",
    "custom": "status"
} as const,
            name: 'status',
            displayName: 'Status',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:status',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:status',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Status" field for workflowNode. This is an optional field. Your entry must be an string data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:is_public',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Is Public" field for workflowNode. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for workflowNode. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:public_read',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Public Read" field for workflowNode. This is an optional field. Your entry must be an boolean data type.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:metadata',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Metadata" field for workflowNode. This is an optional field. Your entry must be an object data type.',
        },
            uiNodeData: {
            fieldNameFormats: {
    "frontend": "uiNodeData",
    "backend": "ui_node_data",
    "database": "ui_node_data",
    "pretty": "Ui Node Data",
    "component": "UiNodeData",
    "kebab": "ui-node-data",
    "sqlFunctionRef": "p_ui_node_data",
    "RestAPI": "uiNodeData",
    "GraphQL": "uiNodeData",
    "custom": "uiNodeData"
} as const,
            name: 'uiNodeData',
            displayName: 'Ui Node Data',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node:ui_node_data',
            uniqueFieldId: 'supabase_automation_matrix:workflowNode:uiNodeData',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNode',
            databaseTable: 'workflow_node',
            foreignKeyReference: null,
            description: '"Ui Node Data" field for workflowNode. This is an optional field. Your entry must be an object data type.',
        },
            registeredFunctionReference: {
    fieldNameFormats: {
    "frontend": "registeredFunctionReference",
    "backend": "registered_function_reference",
    "database": "ref_registered_function",
    "pretty": "Registered Function Reference",
    "component": "RegisteredFunctionReference",
    "kebab": "registered-functionReference",
    "sqlFunctionRef": "p_ref_registered_function",
    "RestAPI": "registeredFunctionReference",
    "GraphQL": "registeredFunctionReference",
    "custom": "registeredFunctionReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:registered_function:id',
    uniqueFieldId: 'supabase_automation_matrix:registeredFunction:id',
    name: 'registeredFunctionReference',
    displayName: 'Registered Function Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['registeredFunction'][]>,
    entityName: 'registeredFunction',
    databaseTable: 'registered_function',
    relationshipMap: {registered_function: 'id', workflow: 'id'},
},
            workflowReference: {
    fieldNameFormats: {
    "frontend": "workflowReference",
    "backend": "workflow_reference",
    "database": "ref_workflow",
    "pretty": "Workflow Reference",
    "component": "WorkflowReference",
    "kebab": "workflowReference",
    "sqlFunctionRef": "p_ref_workflow",
    "RestAPI": "workflowReference",
    "GraphQL": "workflowReference",
    "custom": "workflowReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:workflow:id',
    uniqueFieldId: 'supabase_automation_matrix:workflow:id',
    name: 'workflowReference',
    displayName: 'Workflow Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflow'][]>,
    entityName: 'workflow',
    databaseTable: 'workflow',
    relationshipMap: {registered_function: 'id', workflow: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "workflowNode",
    "backend": "workflow_node",
    "database": "workflow_node",
    "pretty": "Workflow Node",
    "component": "WorkflowNode",
    "kebab": "workflow-node",
    "sqlFunctionRef": "p_workflow_node",
    "RestAPI": "workflowNode",
    "GraphQL": "workflowNode",
    "custom": "workflowNode"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'function_id', relatedTable: 'registered_function', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'workflow_id', relatedTable: 'workflow', relatedColumn: 'id', junctionTable: null }
        ],
    },
workflowNodeData: {
        schemaType: 'table' as const,
        entityName: 'workflowNodeData',
        displayName: 'Workflow Node Data',
        uniqueTableId: 'supabase_automation_matrix:public:workflow_node_data',
        uniqueEntityId: 'supabase_automation_matrix:workflowNodeData',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'stepName', databaseFieldName: 'step_name' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:id',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Id" field for workflowNodeData. This is a required field. Your entry must be an uuid data type.',
        },
            workflowId: {
            fieldNameFormats: {
    "frontend": "workflowId",
    "backend": "workflow_id",
    "database": "workflow_id",
    "pretty": "Workflow Id",
    "component": "WorkflowId",
    "kebab": "workflow-id",
    "sqlFunctionRef": "p_workflow_id",
    "RestAPI": "workflowId",
    "GraphQL": "workflowId",
    "custom": "workflowId"
} as const,
            name: 'workflowId',
            displayName: 'Workflow Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:workflow_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:workflowId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: {"table": "workflow_data", "column": "id", "entity": "workflowData", "field": "id"},
            description: '"Workflow Id" field for workflowNodeData. This is an optional field. Your entry must be an uuid data type. This field is a reference to a workflowData.',
        },
            functionId: {
            fieldNameFormats: {
    "frontend": "functionId",
    "backend": "function_id",
    "database": "function_id",
    "pretty": "Function Id",
    "component": "FunctionId",
    "kebab": "function-id",
    "sqlFunctionRef": "p_function_id",
    "RestAPI": "functionId",
    "GraphQL": "functionId",
    "custom": "functionId"
} as const,
            name: 'functionId',
            displayName: 'Function Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:function_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:functionId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: {"table": "registered_function", "column": "id", "entity": "registeredFunction", "field": "id"},
            description: '"Function Id" field for workflowNodeData. This is an optional field. Your entry must be an uuid data type. This field is a reference to a registeredFunction.',
        },
            type: {
            fieldNameFormats: {
    "frontend": "type",
    "backend": "type",
    "database": "type",
    "pretty": "Type",
    "component": "Type",
    "kebab": "type",
    "sqlFunctionRef": "p_type",
    "RestAPI": "type",
    "GraphQL": "type",
    "custom": "type"
} as const,
            name: 'type',
            displayName: 'Type',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:type',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:type',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Type" field for workflowNodeData. This is an optional field. Your entry must be an string data type.',
        },
            stepName: {
            fieldNameFormats: {
    "frontend": "stepName",
    "backend": "step_name",
    "database": "step_name",
    "pretty": "Step Name",
    "component": "StepName",
    "kebab": "step-name",
    "sqlFunctionRef": "p_step_name",
    "RestAPI": "stepName",
    "GraphQL": "stepName",
    "custom": "stepName"
} as const,
            name: 'stepName',
            displayName: 'Step Name',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:step_name',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:stepName',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Step Name" field for workflowNodeData. This is an optional field. Your entry must be an string data type.',
        },
            nodeType: {
            fieldNameFormats: {
    "frontend": "nodeType",
    "backend": "node_type",
    "database": "node_type",
    "pretty": "Node Type",
    "component": "NodeType",
    "kebab": "node-type",
    "sqlFunctionRef": "p_node_type",
    "RestAPI": "nodeType",
    "GraphQL": "nodeType",
    "custom": "nodeType"
} as const,
            name: 'nodeType',
            displayName: 'Node Type',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:node_type',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:nodeType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Node Type" field for workflowNodeData. This is an optional field. Your entry must be an string data type.',
        },
            executionRequired: {
            fieldNameFormats: {
    "frontend": "executionRequired",
    "backend": "execution_required",
    "database": "execution_required",
    "pretty": "Execution Required",
    "component": "ExecutionRequired",
    "kebab": "execution-required",
    "sqlFunctionRef": "p_execution_required",
    "RestAPI": "executionRequired",
    "GraphQL": "executionRequired",
    "custom": "executionRequired"
} as const,
            name: 'executionRequired',
            displayName: 'Execution Required',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:execution_required',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:executionRequired',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Execution Required" field for workflowNodeData. This is an optional field. Your entry must be an boolean data type.',
        },
            additionalDependencies: {
            fieldNameFormats: {
    "frontend": "additionalDependencies",
    "backend": "additional_dependencies",
    "database": "additional_dependencies",
    "pretty": "Additional Dependencies",
    "component": "AdditionalDependencies",
    "kebab": "additional-dependencies",
    "sqlFunctionRef": "p_additional_dependencies",
    "RestAPI": "additionalDependencies",
    "GraphQL": "additionalDependencies",
    "custom": "additionalDependencies"
} as const,
            name: 'additionalDependencies',
            displayName: 'Additional Dependencies',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:additional_dependencies',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:additionalDependencies',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Additional Dependencies" field for workflowNodeData. This is an optional field. Your entry must be an object data type.',
        },
            inputs: {
            fieldNameFormats: {
    "frontend": "inputs",
    "backend": "inputs",
    "database": "inputs",
    "pretty": "Inputs",
    "component": "Inputs",
    "kebab": "inputs",
    "sqlFunctionRef": "p_inputs",
    "RestAPI": "inputs",
    "GraphQL": "inputs",
    "custom": "inputs"
} as const,
            name: 'inputs',
            displayName: 'Inputs',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:inputs',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:inputs',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Inputs" field for workflowNodeData. This is an optional field. Your entry must be an object data type.',
        },
            outputs: {
            fieldNameFormats: {
    "frontend": "outputs",
    "backend": "outputs",
    "database": "outputs",
    "pretty": "Outputs",
    "component": "Outputs",
    "kebab": "outputs",
    "sqlFunctionRef": "p_outputs",
    "RestAPI": "outputs",
    "GraphQL": "outputs",
    "custom": "outputs"
} as const,
            name: 'outputs',
            displayName: 'Outputs',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:outputs',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:outputs',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Outputs" field for workflowNodeData. This is an optional field. Your entry must be an object data type.',
        },
            dependencies: {
            fieldNameFormats: {
    "frontend": "dependencies",
    "backend": "dependencies",
    "database": "dependencies",
    "pretty": "Dependencies",
    "component": "Dependencies",
    "kebab": "dependencies",
    "sqlFunctionRef": "p_dependencies",
    "RestAPI": "dependencies",
    "GraphQL": "dependencies",
    "custom": "dependencies"
} as const,
            name: 'dependencies',
            displayName: 'Dependencies',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:dependencies',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:dependencies',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Dependencies" field for workflowNodeData. This is an optional field. Your entry must be an object data type.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:metadata',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Metadata" field for workflowNodeData. This is an optional field. Your entry must be an object data type.',
        },
            uiData: {
            fieldNameFormats: {
    "frontend": "uiData",
    "backend": "ui_data",
    "database": "ui_data",
    "pretty": "Ui Data",
    "component": "UiData",
    "kebab": "ui-data",
    "sqlFunctionRef": "p_ui_data",
    "RestAPI": "uiData",
    "GraphQL": "uiData",
    "custom": "uiData"
} as const,
            name: 'uiData',
            displayName: 'Ui Data',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:ui_data',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:uiData',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Ui Data" field for workflowNodeData. This is an optional field. Your entry must be an object data type.',
        },
            isPublic: {
            fieldNameFormats: {
    "frontend": "isPublic",
    "backend": "is_public",
    "database": "is_public",
    "pretty": "Is Public",
    "component": "IsPublic",
    "kebab": "is-public",
    "sqlFunctionRef": "p_is_public",
    "RestAPI": "isPublic",
    "GraphQL": "isPublic",
    "custom": "isPublic"
} as const,
            name: 'isPublic',
            displayName: 'Is Public',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:is_public',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:isPublic',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Is Public" field for workflowNodeData. This is an optional field. Your entry must be an boolean data type.',
        },
            authenticatedRead: {
            fieldNameFormats: {
    "frontend": "authenticatedRead",
    "backend": "authenticated_read",
    "database": "authenticated_read",
    "pretty": "Authenticated Read",
    "component": "AuthenticatedRead",
    "kebab": "authenticated-read",
    "sqlFunctionRef": "p_authenticated_read",
    "RestAPI": "authenticatedRead",
    "GraphQL": "authenticatedRead",
    "custom": "authenticatedRead"
} as const,
            name: 'authenticatedRead',
            displayName: 'Authenticated Read',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:authenticated_read',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:authenticatedRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Authenticated Read" field for workflowNodeData. This is an optional field. Your entry must be an boolean data type.',
        },
            publicRead: {
            fieldNameFormats: {
    "frontend": "publicRead",
    "backend": "public_read",
    "database": "public_read",
    "pretty": "Public Read",
    "component": "PublicRead",
    "kebab": "public-read",
    "sqlFunctionRef": "p_public_read",
    "RestAPI": "publicRead",
    "GraphQL": "publicRead",
    "custom": "publicRead"
} as const,
            name: 'publicRead',
            displayName: 'Public Read',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:public_read',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:publicRead',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "true" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Public Read" field for workflowNodeData. This is an optional field. Your entry must be an boolean data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:created_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Created At" field for workflowNodeData. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: null,
            description: '"Updated At" field for workflowNodeData. This is an optional field. Your entry must be an date data type.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_node_data:user_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowNodeData:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowNodeData',
            databaseTable: 'workflow_node_data',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for workflowNodeData. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            registeredFunctionReference: {
    fieldNameFormats: {
    "frontend": "registeredFunctionReference",
    "backend": "registered_function_reference",
    "database": "ref_registered_function",
    "pretty": "Registered Function Reference",
    "component": "RegisteredFunctionReference",
    "kebab": "registered-functionReference",
    "sqlFunctionRef": "p_ref_registered_function",
    "RestAPI": "registeredFunctionReference",
    "GraphQL": "registeredFunctionReference",
    "custom": "registeredFunctionReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:registered_function:id',
    uniqueFieldId: 'supabase_automation_matrix:registeredFunction:id',
    name: 'registeredFunctionReference',
    displayName: 'Registered Function Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['registeredFunction'][]>,
    entityName: 'registeredFunction',
    databaseTable: 'registered_function',
    relationshipMap: {registered_function: 'id', workflow_data: 'id'},
},
            workflowDataReference: {
    fieldNameFormats: {
    "frontend": "workflowDataReference",
    "backend": "workflow_data_reference",
    "database": "ref_workflow_data",
    "pretty": "Workflow Data Reference",
    "component": "WorkflowDataReference",
    "kebab": "workflow-dataReference",
    "sqlFunctionRef": "p_ref_workflow_data",
    "RestAPI": "workflowDataReference",
    "GraphQL": "workflowDataReference",
    "custom": "workflowDataReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:workflow_data:id',
    uniqueFieldId: 'supabase_automation_matrix:workflowData:id',
    name: 'workflowDataReference',
    displayName: 'Workflow Data Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflowData'][]>,
    entityName: 'workflowData',
    databaseTable: 'workflow_data',
    relationshipMap: {registered_function: 'id', workflow_data: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "workflowNodeData",
    "backend": "workflow_node_data",
    "database": "workflow_node_data",
    "pretty": "Workflow Node Data",
    "component": "WorkflowNodeData",
    "kebab": "workflow-node-data",
    "sqlFunctionRef": "p_workflow_node_data",
    "RestAPI": "workflowNodeData",
    "GraphQL": "workflowNodeData",
    "custom": "workflowNodeData"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'function_id', relatedTable: 'registered_function', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'workflow_id', relatedTable: 'workflow_data', relatedColumn: 'id', junctionTable: null }
        ],
    },
workflowRelay: {
        schemaType: 'table' as const,
        entityName: 'workflowRelay',
        displayName: 'Workflow Relay',
        uniqueTableId: 'supabase_automation_matrix:public:workflow_relay',
        uniqueEntityId: 'supabase_automation_matrix:workflowRelay',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'label', databaseFieldName: 'label' },
        defaultFetchStrategy: 'fk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_relay:id',
            uniqueFieldId: 'supabase_automation_matrix:workflowRelay:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowRelay',
            databaseTable: 'workflow_relay',
            foreignKeyReference: null,
            description: '"Id" field for workflowRelay. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_relay:created_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowRelay:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowRelay',
            databaseTable: 'workflow_relay',
            foreignKeyReference: null,
            description: '"Created At" field for workflowRelay. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_relay:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowRelay:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowRelay',
            databaseTable: 'workflow_relay',
            foreignKeyReference: null,
            description: '"Updated At" field for workflowRelay. This is an optional field. Your entry must be an date data type.',
        },
            workflowId: {
            fieldNameFormats: {
    "frontend": "workflowId",
    "backend": "workflow_id",
    "database": "workflow_id",
    "pretty": "Workflow Id",
    "component": "WorkflowId",
    "kebab": "workflow-id",
    "sqlFunctionRef": "p_workflow_id",
    "RestAPI": "workflowId",
    "GraphQL": "workflowId",
    "custom": "workflowId"
} as const,
            name: 'workflowId',
            displayName: 'Workflow Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_relay:workflow_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowRelay:workflowId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowRelay',
            databaseTable: 'workflow_relay',
            foreignKeyReference: {"table": "workflow", "column": "id", "entity": "workflow", "field": "id"},
            description: '"Workflow Id" field for workflowRelay. This is a required field. Your entry must be an uuid data type. This field is a reference to a workflow.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_relay:user_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowRelay:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowRelay',
            databaseTable: 'workflow_relay',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for workflowRelay. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            sourceBrokerId: {
            fieldNameFormats: {
    "frontend": "sourceBrokerId",
    "backend": "source_broker_id",
    "database": "source_broker_id",
    "pretty": "Source Broker Id",
    "component": "SourceBrokerId",
    "kebab": "source-broker-id",
    "sqlFunctionRef": "p_source_broker_id",
    "RestAPI": "sourceBrokerId",
    "GraphQL": "sourceBrokerId",
    "custom": "sourceBrokerId"
} as const,
            name: 'sourceBrokerId',
            displayName: 'Source Broker Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_relay:source_broker_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowRelay:sourceBrokerId',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowRelay',
            databaseTable: 'workflow_relay',
            foreignKeyReference: null,
            description: '"Source Broker Id" field for workflowRelay. This is a required field. Your entry must be an string data type.',
        },
            label: {
            fieldNameFormats: {
    "frontend": "label",
    "backend": "label",
    "database": "label",
    "pretty": "Label",
    "component": "Label",
    "kebab": "label",
    "sqlFunctionRef": "p_label",
    "RestAPI": "label",
    "GraphQL": "label",
    "custom": "label"
} as const,
            name: 'label',
            displayName: 'Label',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_relay:label',
            uniqueFieldId: 'supabase_automation_matrix:workflowRelay:label',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowRelay',
            databaseTable: 'workflow_relay',
            foreignKeyReference: null,
            description: '"Label" field for workflowRelay. This is an optional field. Your entry must be an string data type.',
        },
            targetBrokerIds: {
            fieldNameFormats: {
    "frontend": "targetBrokerIds",
    "backend": "target_broker_ids",
    "database": "target_broker_ids",
    "pretty": "Target Broker Ids",
    "component": "TargetBrokerIds",
    "kebab": "target-broker-ids",
    "sqlFunctionRef": "p_target_broker_ids",
    "RestAPI": "targetBrokerIds",
    "GraphQL": "targetBrokerIds",
    "custom": "targetBrokerIds"
} as const,
            name: 'targetBrokerIds',
            displayName: 'Target Broker Ids',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_relay:target_broker_ids',
            uniqueFieldId: 'supabase_automation_matrix:workflowRelay:targetBrokerIds',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowRelay',
            databaseTable: 'workflow_relay',
            foreignKeyReference: null,
            description: '"Target Broker Ids" field for workflowRelay. This is an optional field. Your entry must be an object data type.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_relay:metadata',
            uniqueFieldId: 'supabase_automation_matrix:workflowRelay:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowRelay',
            databaseTable: 'workflow_relay',
            foreignKeyReference: null,
            description: '"Metadata" field for workflowRelay. This is an optional field. Your entry must be an object data type.',
        },
            uiNodeData: {
            fieldNameFormats: {
    "frontend": "uiNodeData",
    "backend": "ui_node_data",
    "database": "ui_node_data",
    "pretty": "Ui Node Data",
    "component": "UiNodeData",
    "kebab": "ui-node-data",
    "sqlFunctionRef": "p_ui_node_data",
    "RestAPI": "uiNodeData",
    "GraphQL": "uiNodeData",
    "custom": "uiNodeData"
} as const,
            name: 'uiNodeData',
            displayName: 'Ui Node Data',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_relay:ui_node_data',
            uniqueFieldId: 'supabase_automation_matrix:workflowRelay:uiNodeData',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowRelay',
            databaseTable: 'workflow_relay',
            foreignKeyReference: null,
            description: '"Ui Node Data" field for workflowRelay. This is an optional field. Your entry must be an object data type.',
        },
            workflowReference: {
    fieldNameFormats: {
    "frontend": "workflowReference",
    "backend": "workflow_reference",
    "database": "ref_workflow",
    "pretty": "Workflow Reference",
    "component": "WorkflowReference",
    "kebab": "workflowReference",
    "sqlFunctionRef": "p_ref_workflow",
    "RestAPI": "workflowReference",
    "GraphQL": "workflowReference",
    "custom": "workflowReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:workflow:id',
    uniqueFieldId: 'supabase_automation_matrix:workflow:id',
    name: 'workflowReference',
    displayName: 'Workflow Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflow'][]>,
    entityName: 'workflow',
    databaseTable: 'workflow',
    relationshipMap: {workflow: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "workflowRelay",
    "backend": "workflow_relay",
    "database": "workflow_relay",
    "pretty": "Workflow Relay",
    "component": "WorkflowRelay",
    "kebab": "workflow-relay",
    "sqlFunctionRef": "p_workflow_relay",
    "RestAPI": "workflowRelay",
    "GraphQL": "workflowRelay",
    "custom": "workflowRelay"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'workflow_id', relatedTable: 'workflow', relatedColumn: 'id', junctionTable: null }
        ],
    },
workflowUserInput: {
        schemaType: 'table' as const,
        entityName: 'workflowUserInput',
        displayName: 'Workflow User Input',
        uniqueTableId: 'supabase_automation_matrix:public:workflow_user_input',
        uniqueEntityId: 'supabase_automation_matrix:workflowUserInput',
        primaryKey: 'id',
        primaryKeyMetadata: {
    "type": "single",
    "fields": [
        "id"
    ],
    "database_fields": [
        "id"
    ],
    "where_template": {
        "id": null
    }
},
        displayFieldMetadata: { fieldName: 'label', databaseFieldName: 'label' },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
    "subComponent": "default",
    "variant": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "minDate": "default",
    "maxDate": "default",
    "numberType": "default"
},
        entityFields: {
            id: {
            fieldNameFormats: {
    "frontend": "id",
    "backend": "id",
    "database": "id",
    "pretty": "Id",
    "component": "Id",
    "kebab": "id",
    "sqlFunctionRef": "p_id",
    "RestAPI": "id",
    "GraphQL": "id",
    "custom": "id"
} as const,
            name: 'id',
            displayName: 'Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:id',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:id',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: true,
            isDisplayField: false,
            defaultGeneratorFunction: "getUUID()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: null,
            description: '"Id" field for workflowUserInput. This is a required field. Your entry must be an uuid data type.',
        },
            createdAt: {
            fieldNameFormats: {
    "frontend": "createdAt",
    "backend": "created_at",
    "database": "created_at",
    "pretty": "Created At",
    "component": "CreatedAt",
    "kebab": "created-at",
    "sqlFunctionRef": "p_created_at",
    "RestAPI": "createdAt",
    "GraphQL": "createdAt",
    "custom": "createdAt"
} as const,
            name: 'createdAt',
            displayName: 'Created At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:created_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:createdAt',

            dataType: 'date' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: null,
            description: '"Created At" field for workflowUserInput. This is a required field. Your entry must be an date data type.',
        },
            updatedAt: {
            fieldNameFormats: {
    "frontend": "updatedAt",
    "backend": "updated_at",
    "database": "updated_at",
    "pretty": "Updated At",
    "component": "UpdatedAt",
    "kebab": "updated-at",
    "sqlFunctionRef": "p_updated_at",
    "RestAPI": "updatedAt",
    "GraphQL": "updatedAt",
    "custom": "updatedAt"
} as const,
            name: 'updatedAt',
            displayName: 'Updated At',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:updated_at',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:updatedAt',

            dataType: 'date' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "getCurrentTime()",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'DATE_PICKER' as const,
            componentProps: {
    "subComponent": "timestamptz",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Date>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: null,
            description: '"Updated At" field for workflowUserInput. This is an optional field. Your entry must be an date data type.',
        },
            workflowId: {
            fieldNameFormats: {
    "frontend": "workflowId",
    "backend": "workflow_id",
    "database": "workflow_id",
    "pretty": "Workflow Id",
    "component": "WorkflowId",
    "kebab": "workflow-id",
    "sqlFunctionRef": "p_workflow_id",
    "RestAPI": "workflowId",
    "GraphQL": "workflowId",
    "custom": "workflowId"
} as const,
            name: 'workflowId',
            displayName: 'Workflow Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:workflow_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:workflowId',

            dataType: 'uuid' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: {"table": "workflow", "column": "id", "entity": "workflow", "field": "id"},
            description: '"Workflow Id" field for workflowUserInput. This is a required field. Your entry must be an uuid data type. This field is a reference to a workflow.',
        },
            userId: {
            fieldNameFormats: {
    "frontend": "userId",
    "backend": "user_id",
    "database": "user_id",
    "pretty": "User Id",
    "component": "UserId",
    "kebab": "user-id",
    "sqlFunctionRef": "p_user_id",
    "RestAPI": "userId",
    "GraphQL": "userId",
    "custom": "userId"
} as const,
            name: 'userId',
            displayName: 'User Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:user_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:userId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'UUID_FIELD' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: {"table": "users", "column": "id", "entity": "users", "field": "id"},
            description: '"User Id" field for workflowUserInput. This is an optional field. Your entry must be an uuid data type. This field is a reference to a users.',
        },
            fieldComponentId: {
            fieldNameFormats: {
    "frontend": "fieldComponentId",
    "backend": "field_component_id",
    "database": "field_component_id",
    "pretty": "Field Component Id",
    "component": "FieldComponentId",
    "kebab": "field-component-id",
    "sqlFunctionRef": "p_field_component_id",
    "RestAPI": "fieldComponentId",
    "GraphQL": "fieldComponentId",
    "custom": "fieldComponentId"
} as const,
            name: 'fieldComponentId',
            displayName: 'Field Component Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:field_component_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:fieldComponentId',

            dataType: 'uuid' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'FK_SELECT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: {"table": "field_components", "column": "id", "entity": "fieldComponents", "field": "id"},
            description: '"Field Component Id" field for workflowUserInput. This is an optional field. Your entry must be an uuid data type. This field is a reference to a fieldComponents.',
        },
            brokerId: {
            fieldNameFormats: {
    "frontend": "brokerId",
    "backend": "broker_id",
    "database": "broker_id",
    "pretty": "Broker Id",
    "component": "BrokerId",
    "kebab": "broker-id",
    "sqlFunctionRef": "p_broker_id",
    "RestAPI": "brokerId",
    "GraphQL": "brokerId",
    "custom": "brokerId"
} as const,
            name: 'brokerId',
            displayName: 'Broker Id',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:broker_id',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:brokerId',

            dataType: 'string' as const,
            isRequired: true,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": true
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: null,
            description: '"Broker Id" field for workflowUserInput. This is a required field. Your entry must be an string data type.',
        },
            label: {
            fieldNameFormats: {
    "frontend": "label",
    "backend": "label",
    "database": "label",
    "pretty": "Label",
    "component": "Label",
    "kebab": "label",
    "sqlFunctionRef": "p_label",
    "RestAPI": "label",
    "GraphQL": "label",
    "custom": "label"
} as const,
            name: 'label',
            displayName: 'Label',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:label',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:label',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: true,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: null,
            description: '"Label" field for workflowUserInput. This is an optional field. Your entry must be an string data type.',
        },
            dataType: {
            fieldNameFormats: {
    "frontend": "dataType",
    "backend": "data_type",
    "database": "data_type",
    "pretty": "Data Type",
    "component": "DataType",
    "kebab": "data-type",
    "sqlFunctionRef": "p_data_type",
    "RestAPI": "dataType",
    "GraphQL": "dataType",
    "custom": "dataType"
} as const,
            name: 'dataType',
            displayName: 'Data Type',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:data_type',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:dataType',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'INPUT' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: null,
            description: '"Data Type" field for workflowUserInput. This is an optional field. Your entry must be an string data type.',
        },
            defaultValue: {
            fieldNameFormats: {
    "frontend": "defaultValue",
    "backend": "default_value",
    "database": "default_value",
    "pretty": "Default Value",
    "component": "DefaultValue",
    "kebab": "default-value",
    "sqlFunctionRef": "p_default_value",
    "RestAPI": "defaultValue",
    "GraphQL": "defaultValue",
    "custom": "defaultValue"
} as const,
            name: 'defaultValue',
            displayName: 'Default Value',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:default_value',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:defaultValue',

            dataType: 'string' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'TEXTAREA' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": 5,
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<string>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: null,
            description: '"Default Value" field for workflowUserInput. This is an optional field. Your entry must be an string data type.',
        },
            isRequired: {
            fieldNameFormats: {
    "frontend": "isRequired",
    "backend": "is_required",
    "database": "is_required",
    "pretty": "Is Required",
    "component": "IsRequired",
    "kebab": "is-required",
    "sqlFunctionRef": "p_is_required",
    "RestAPI": "isRequired",
    "GraphQL": "isRequired",
    "custom": "isRequired"
} as const,
            name: 'isRequired',
            displayName: 'Is Required',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:is_required',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:isRequired',

            dataType: 'boolean' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "false" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'SWITCH' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<boolean>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: null,
            description: '"Is Required" field for workflowUserInput. This is an optional field. Your entry must be an boolean data type.',
        },
            metadata: {
            fieldNameFormats: {
    "frontend": "metadata",
    "backend": "metadata",
    "database": "metadata",
    "pretty": "Metadata",
    "component": "Metadata",
    "kebab": "metadata",
    "sqlFunctionRef": "p_metadata",
    "RestAPI": "metadata",
    "GraphQL": "metadata",
    "custom": "metadata"
} as const,
            name: 'metadata',
            displayName: 'Metadata',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:metadata',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:metadata',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: null,
            description: '"Metadata" field for workflowUserInput. This is an optional field. Your entry must be an object data type.',
        },
            uiNodeData: {
            fieldNameFormats: {
    "frontend": "uiNodeData",
    "backend": "ui_node_data",
    "database": "ui_node_data",
    "pretty": "Ui Node Data",
    "component": "UiNodeData",
    "kebab": "ui-node-data",
    "sqlFunctionRef": "p_ui_node_data",
    "RestAPI": "uiNodeData",
    "GraphQL": "uiNodeData",
    "custom": "uiNodeData"
} as const,
            name: 'uiNodeData',
            displayName: 'Ui Node Data',

            uniqueColumnId: 'supabase_automation_matrix:public:workflow_user_input:ui_node_data',
            uniqueFieldId: 'supabase_automation_matrix:workflowUserInput:uiNodeData',

            dataType: 'object' as const,
            isRequired: false,
            maxLength: null,
            isArray: false,
            defaultValue: "" as const,
            isPrimaryKey: false,
            isDisplayField: false,
            defaultGeneratorFunction: "",
            validationFunctions: [],
            exclusionRules: [],
            defaultComponent: 'JSON_EDITOR' as const,
            componentProps: {
    "subComponent": "default",
    "variant": "default",
    "section": "default",
    "placeholder": "default",
    "size": "default",
    "textSize": "default",
    "textColor": "default",
    "rows": "default",
    "animation": "default",
    "fullWidthValue": "default",
    "fullWidth": "default",
    "disabled": "default",
    "className": "default",
    "type": "default",
    "onChange": "default",
    "onBlur": "default",
    "formatString": "default",
    "min": "default",
    "max": "default",
    "step": "default",
    "numberType": "default",
    "options": "default",
    "required": false
},
            structure: 'single' as const,
            isNative: true,
            typeReference: {} as TypeBrand<Record<string, unknown>>,
            enumValues: null,
            entityName: 'workflowUserInput',
            databaseTable: 'workflow_user_input',
            foreignKeyReference: null,
            description: '"Ui Node Data" field for workflowUserInput. This is an optional field. Your entry must be an object data type.',
        },
            fieldComponentsReference: {
    fieldNameFormats: {
    "frontend": "fieldComponentsReference",
    "backend": "field_components_reference",
    "database": "ref_field_components",
    "pretty": "Field Components Reference",
    "component": "FieldComponentsReference",
    "kebab": "field-componentsReference",
    "sqlFunctionRef": "p_ref_field_components",
    "RestAPI": "fieldComponentsReference",
    "GraphQL": "fieldComponentsReference",
    "custom": "fieldComponentsReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:field_components:id',
    uniqueFieldId: 'supabase_automation_matrix:fieldComponents:id',
    name: 'fieldComponentsReference',
    displayName: 'Field Components Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['fieldComponents'][]>,
    entityName: 'fieldComponents',
    databaseTable: 'field_components',
    relationshipMap: {field_components: 'id', workflow: 'id'},
},
            workflowReference: {
    fieldNameFormats: {
    "frontend": "workflowReference",
    "backend": "workflow_reference",
    "database": "ref_workflow",
    "pretty": "Workflow Reference",
    "component": "WorkflowReference",
    "kebab": "workflowReference",
    "sqlFunctionRef": "p_ref_workflow",
    "RestAPI": "workflowReference",
    "GraphQL": "workflowReference",
    "custom": "workflowReference"
} as const,
    uniqueColumnId: 'supabase_automation_matrix:workflow:id',
    uniqueFieldId: 'supabase_automation_matrix:workflow:id',
    name: 'workflowReference',
    displayName: 'Workflow Reference',
    dataType: 'object' as const,
    isRequired: false,
    maxLength: null,
    isArray: true,
    defaultValue: [],
    isPrimaryKey: false,
    defaultGeneratorFunction: null,
    validationFunctions: ['isValidDatabaseEntry'],
    exclusionRules: ['notCoreField'],
    defaultComponent: 'ACCORDION_VIEW_ADD_EDIT' as const,
    structure: 'foreignKey' as const,
    isNative: false,
    typeReference: {} as TypeBrand<TableSchemaStructure['workflow'][]>,
    entityName: 'workflow',
    databaseTable: 'workflow',
    relationshipMap: {field_components: 'id', workflow: 'id'},
},
        },
        entityNameFormats: {
    "frontend": "workflowUserInput",
    "backend": "workflow_user_input",
    "database": "workflow_user_input",
    "pretty": "Workflow User Input",
    "component": "WorkflowUserInput",
    "kebab": "workflow-user-input",
    "sqlFunctionRef": "p_workflow_user_input",
    "RestAPI": "workflowUserInput",
    "GraphQL": "workflowUserInput",
    "custom": "workflowUserInput"
},
        relationships: [
            { relationshipType: 'foreignKey', column: 'field_component_id', relatedTable: 'field_components', relatedColumn: 'id', junctionTable: null },
        { relationshipType: 'foreignKey', column: 'workflow_id', relatedTable: 'workflow', relatedColumn: 'id', junctionTable: null }
        ],
    }
} as const;

export type TypeBrand<DataType> = { _typeBrand: DataType };
export type EnumValues<T> = T extends TypeBrand<infer U> ? U : never;
export type ExtractType<T> = T extends TypeBrand<infer U> ? U : T;

export type InitialTableSchema = {
    schemaType: 'table';
    entityName: string;
    displayName: string;
    uniqueTableId: string;
    uniqueEntityId: string;
    primaryKey: string[];
    primaryKeyMetadata: {
        type: 'single' | 'composite';
        fields: string[];
        database_fields: string[];
        where_template: Record<string, any>;
    };
    displayFieldMetadata: {
        fieldName: string;
        databaseFieldName: string;
    };
    defaultFetchStrategy: FetchStrategy;
    componentProps: Record<string, any>;
    entityNameFormats: {
        [key in NameFormat]?: string;
    };
    entityFields: {
        [fieldName: string]: {
            fieldNameFormats: {
                [key in NameFormat]?: string;
            };
            dataType: FieldDataOptionsType;
            isRequired: boolean;
            maxLength: number | null;
            isArray: boolean;
            defaultValue: any;
            isPrimaryKey: boolean;
            isDisplayField?: boolean;
            defaultGeneratorFunction: string | null;
            validationFunctions: readonly string[];
            exclusionRules: readonly string[];
            defaultComponent?: string;
            componentProps?: Record<string, unknown>;
            structure: DataStructure;
            isNative: boolean;
            typeReference: TypeBrand<any>;
            enumValues: readonly string[];
            entityName: string;
            databaseTable: string;
            description: string;
        };
    };
    relationships: Array<{
        relationshipType: 'foreignKey' | 'inverseForeignKey' | 'manyToMany';
        column: string;
        relatedTable: string;
        relatedColumn: string;
        junctionTable: string | null;
    }>;
};

export type TableSchemaStructure = {
    [entityName in AutomationTableName]: InitialTableSchema;
};